{"version":3,"sources":["NOTEBOOK/Doghead/OWNERHEAD/ownerHeads.js","NOTEBOOK/Doghead/AGENTHEAD/agentHeads.js","NOTEBOOK/Doghead/dogOut.js","NOTEBOOK/SampleData/sampleData.js","css/Roboto_Mono/RobotoMono-Medium.ttf","utils/dognums.js","NOTEBOOK/Doghead/makeDogovorHeadIO.js","NOTEBOOK/Doghead/OWNERHEAD/makeOwnerHeadIO.js","NOTEBOOK/Doghead/AGENTHEAD/makeAgentHeadIO.js","state.js","reducers/home.js","reducers/dogovorData.js","reducers/formOne.js","reducers/formTwo.js","reducers/formThree.js","reducers/ownerDic.js","reducers/agentDic.js","reducers/objDic.js","reducers/dogDic.js","reducers/index.js","constants/actionTypes.js","css/style.js","actions/index.js","components/PRINT/BeautyText.js","components/FORMS/FormOneSimp.js","components/FORMS/FormTwoSimp.js","components/FORMS/FormThreeSimp.js","components/DICTIONARIES/Ownerdic.js","components/Home.js","components/MONTAJ/MontajSampleData.js","components/FORMS/FormMap.js","components/WIP/HsFs.js","components/MONTAJ/HeadFoot.js","components/MONTAJ/Montaj.js","components/MONTAJ/MontajDefault.js","components/DICTIONARIES/Agentdic.js","components/FORMS/DogovorFormElements.js","components/FORMS/FormDog.js","components/DICTIONARIES/Dogovordic.js","components/FORMS/FormObj.js","components/DICTIONARIES/Objectdic.js","components/Dogovor.js","App.js","store.js","index.js","utils/assert.js"],"names":["dogTout","require","module","exports","ownerYurlitsoHeadIO","ownerData","dogovorType","compFullName","FIO","ownerIPHeadIO","input","name","FullName","ogrnip","OGRNIP","ogrnipDate","OGRNIPDate","dog","console","log","ownerFizlitsoHeadIO","lastName","firstName","midName","docType","Serial","number","whenGave","whoGave","codeGave","agentYurlitsoHeadIO","agentData","agentIPHeadIO","agentFizlitsoHeadIO","assert","dogT","agentDic","dics","id","type","data","compShortName","INN","KPP","OGRN","OKPO","GosRegDate","YurAdress","FactAdress","GenDirector","Buhgalter","tel","bankName","BIK","BillOne","BillTwo","signature","ShortName","NameInformal","addressGave","ownerDic","Name","dogs","date","link","nameExtractor","out","Object","keys","map","key","push","latestExtractor","_dogName","length","match","sampleNy","year","month","day","newDogGen","_date","sampleDate","_letter","makeOwnerHeadIO","makeAgentHeadIO","_store","_dogovorId","dicData","store","dic","ID","filter","e","dogovorData","ownerId","agentId","_ownerData","companyType","state","hello","initStateForNewDogovor","objName","objId","agentName","ownerName","systems","price","systemsDataVector","dogovorTypes","dogTypes","YL","IP","FL","initialState","window","Cypress","selectors","objNameSel","dogTypeSel","sysTypeSel","servTypeSel","clientTypeSel","hub","formData","RS","KS","adress","contactsFIO","contactsRole","contactsContacts","workRegime","rootReducer","combineReducers","home","action","yurlitso","payload","entries","objDic","dogDic","GlobalStyle","createGlobalStyle","Container","styled","div","Grid","AreaBox","p","fd","g","b","ParamBox","w","h","Text","m","TextBox","img","Input","naked","NavbarDropdownContent","_data","Font","register","family","src","font","StyleSheet","create","page","margin","fontFamily","display","wordBreak","border","hyphens","section","padding","content","FormOneSimp","_props","useState","setFormData","updateFormData","event","target","value","onChange","placeholder","required","maxlength","minlength","onClick","preventDefault","FormTwoSimp","FormThreeSimp","Selector","props","formSet","pool","select","setSelect","newdic","setNewdic","Article","fold","setFold","connect","_state","majorStore","_dispatch","onOwnerDicSelection","onOwnerDicCreation","style","owner","record","formDataNew","onDogovorData","actions","newDogData","selection","output","Basic","formOrgDataSample","formFLDataSample","serverData","varOne","CompName","yurAdress","bank","firstBill","secondBill","varTwo","ClientDataFL","_d","FLHeader","_clientData","_serverData","ClientOrgFooter","ClientIPFooter","ClientFLFooter","ServerFooter","DataMapper","Cmap","Smap","actualInput","ct","cd","st","defaultInput","ai","di","cmap","smap","a","c","HFROuter","ClientType","_clientType","ClientData","ORG","ServerData","_serverType","aa","bb","cc","HeadFoot","_a","_b","_c","divStyle","width","wordWrap","MontajHead","AddAgent","_x","onAgentDicSelection","onAgentDicCreation","agent","ObjectSelect","importData","objects","AgentSelect","agents","OwnerSelect","owners","DogovorTypeSelect","SystemsSelect","PriceInput","SubmitButton","handleSubmit","FormDog","dogovorId","dogovor","object","undefined","Today","today","Date","getFullYear","getMonth","getDate","handleSaveCountedData","SaveButton","FoldButton","setValue","ShowButton","goto","to","BipolarButton","rawData","updateDogovor","createDogovor","editable","setEditable","onDogDicSelection","onDogDicCreation","onDogDicUpdate","FormObj","contacts","onObjDicSelection","onObjDicCreation","makeDogovorHeadIO","useParams","onLoad","App","className","exact","path","component","Home","Ownerdic","Agentdic","Dogovordic","Objectdic","Dogovor","Montaj","createStore","reducer","getState","ReactDOM","render","document","getElementById","_statement","_function","_positiveOutcome","JSON","stringify"],"mappings":"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","file":"static/js/main.a4e5fb98.chunk.js","sourcesContent":["const dogTout = require('../dogOut');\n\n  const ownerYurlitsoHeadIO = (ownerData,dogovorType) => {\n    let input = {\n      name:ownerData.compFullName,\n      fio:ownerData.FIO,\n      dog:dogTout(dogovorType)[0]\n    };\n    return (  \n      \"\"+input.name+\", в лице генерального директора \"+input.fio+\n          \", действующего на основании Устава, именуемое в дальнейшем \\'\"+input.dog+\"\\', с одной стороны, и \");\n      };\n\n//  1.2 ownerIP\n//    ownerIP :: ownerData -> dogovorType -> ownerHead\n      const ownerIPHeadIO = (ownerData,dogovorType) => {\n        // given\n        // when\n        let input = {\n          name:ownerData.FullName,\n          ogrnip:ownerData.OGRNIP,\n          ogrnipDate:ownerData.OGRNIPDate,\n          dog:dogTout(dogovorType)[0]\n        };\n        console.log(\"ownerIPHeadIO: \", input);\n        // then\n        return (  \n          \"\"+input.name+\", действующий на основании свидетельства ОГРНИП \"+input.ogrnip+\" от \"+input.ogrnipDate+\", именуемый в дальнейшем \\'\"+input.dog+\"\\', с одной стороны, и \"\n    );\n    };\n\n//  1.3 ownerFL\n//  ownerFL :: ownerData -> dogovorType -> ownerHead\n    const ownerFizlitsoHeadIO = (ownerData,dogovorType) => {\n      const input = {\n        f:ownerData.lastName,\n        i:ownerData.firstName,\n        o:ownerData.midName,\n        docType:ownerData.docType,\n        docSer:ownerData.Serial,\n        docNum:ownerData.number,\n        docDate:ownerData.whenGave,\n        docWhere:ownerData.whoGave,\n        docWhCode:ownerData.codeGave,\n        dog:dogTout(dogovorType)[0]\n      };\n      return (  \n        \"\"+input.f+\" \"+input.i+\" \"+input.o+\", \"+input.docType+\" \"+\n        input.docSer+\" \"+input.docNum+\", выдан \"\n        +input.docWhere+\" \"+input.docDate+\" код подразделения \"+\n        input.docWhCode+\", именуемый(ая) в дальнейшем \\'\"+\n        input.dog+\"\\', с одной стороны, и \");\n    };\n\n    module.exports.ownerYurlitsoHeadIO = ownerYurlitsoHeadIO;\n    module.exports.ownerIPHeadIO = ownerIPHeadIO;\n    module.exports.ownerFizlitsoHeadIO = ownerFizlitsoHeadIO;\n","const dogTout = require('../dogOut');\n\n const agentYurlitsoHeadIO = (agentData,dogovorType) => {\n      console.log(\"agentYurlitsoHeadIO:\", agentData,dogovorType);\n      let input = {\n          name:agentData.compFullName,\n          fio:agentData.FIO,\n          dog:dogTout(dogovorType)[1]\n      };\n      return (  \n        \"\"+input.name+\", в лице генерального директора \"+input.fio+\", действующего на основании Устава, именуемое в дальнейшем \\'\"+input.dog+\"\\', совместно именуемые в дальнейшем 'Стороны', или каждая в отдельности 'Сторона', заключили настоящий Договор, далее именуемый 'Договор', о нижеследующем: \");\n    };\n\n//  2.2 agentFL \n//  agentFL :: agentData -> dogovorType -> agentHeaf\n    const agentIPHeadIO = (agentData,dogovorType) => {\n    console.log(\"agentIPHeadIO:\", agentData,dogovorType);\n      let input = {\n          name:agentData.FullName,\n          ogrnip:agentData.OGRNIP,\n          ogrnipDate:agentData.OGRNIPDate,\n          dog:dogTout(dogovorType)[1]\n        };\n      return (\"\"+input.name+\", действующ(ая) на основании свидетельства ОГРНИП \"+input.ogrnip+\" от \"+input.ogrnipDate+\", именуемый(ая) в дальнейшем \\'\"+input.dog+\"\\', совместно именуемые в дальнейшем 'Стороны', или каждая в отдельности 'Сторона', заключили настоящий Договор, далее именуемый 'Договор', о нижеследующем: \");\n    };\n\n    const agentFizlitsoHeadIO = (agentData,dogovorType) => {\n      const input = {\n        f:agentData.lastName,\n        i:agentData.firstName,\n        o:agentData.midName,\n        docType:agentData.docType,\n        docSer:agentData.Serial,\n        docNum:agentData.number,\n        docDate:agentData.whenGave,\n        docWhere:agentData.whoGave,\n        docWhCode:agentData.codeGave,\n        dog:dogTout(dogovorType)[1]\n      };\n      return (  \n        \"\"+input.f+\" \"+input.i+\" \"+input.o+\" \"+input.docType+\" \"+input.docSer+\" \"+input.docNum+\" выдан \"+input.docWhere+\" \"+input.docDate+\", код подразделения \"+input.docWhCode+\", именуемый(ая) в дальнейшем \\'\"+input.dog+\"\\', совместно именуемые в дальнейшем 'Стороны', или каждая в отдельности 'Сторона', заключили настоящий Договор, далее именуемый 'Договор', о нижеследующем: \");\n    };\n\n\n    module.exports.agentYurlitsoHeadIO = agentYurlitsoHeadIO;\n    module.exports.agentIPHeadIO = agentIPHeadIO;\n    module.exports.agentFizlitsoHeadIO = agentFizlitsoHeadIO;\n","\n  const assert = require('../../../src/utils/assert');\n      const dogTout = dogT => {\n        switch(dogT){\n          // given\n          case \"Поставка\":\n          // then\n            return [\"Поставщик\",\"Покупатель\"];\n          // given\n          case \"Проектирование\":\n          // then\n            return [\"Исполнитель\",\"Заказчик\"];\n          // given\n          default:\n          // then\n            return \"who knows\";\n        };\n      };\n      assert(\n        \"dogTout('Поставка') =>['Поставщик','Покупатель']\",\n        dogTout(\"Поставка\"),\n        [\"Поставщик\",\"Покупатель\"]\n      );\n      assert(\n        'dogTout(\"Проектирование\") => [\"Исполнитель\",\"Заказчик\"]',\n        dogTout(\"Проектирование\"),\n        [\"Исполнитель\",\"Заказчик\"]\n      );\n\n        module.exports = dogTout;\n","const sampleData = \n{agentDic:\n    {dics:\n      [ \n        {\n          id:0,\n          type:\"YL\",\n          data:\n            {\n              compFullName:\"Общество с ограниченной ответственностью 'Аксинель'\",\n              compShortName: \"ОOO 'Аксинель'\",\n              FIO:\"Царевского Анатолия Михайловича\", \n              INN:\"7724912950\",\n              KPP:\"772401001\",\n              OGRN:\"1147746259430\",\n              OKPO:\"ORGОКРО\",\n              GosRegDate:\"ORGДАТА ГОС РЕГИСТРАЦИИ\",\n              YurAdress:\"115404, Россия, Москва, Радиальная 6-я улица, дом 7а строение 2, комната 1 эт 2\",\n              FactAdress:\"ORGФАКТИЧЕСКИЙ АДРЕСС\",\n              GenDirector:\"ORGГЕН ДИРЕКТОР\",\n              Buhgalter:\"ORGБУХГАЛТЕР\",\n              tel:\"ORGТЕЛЕФОН\",\n              bankName:\"МОСКОВСКИЙ ФИЛИАЛ АО КБ 'МОДУЛЬБАНК'\",\n              BIK:\"044525092\",\n              BillOne:\"40702810970010127006\",\n              BillTwo:\"80101810645250000092\",\n              signature: \"Царевский.А.М\"\n            }  \n        },\n        {\n          id:1,\n          type:\"IP\",\n          data:\n            {\n              FullName:\"Индивидуальный предприниматель Колыхан Карина Олеговна\",\n              ShortName: \"ИП Колыхан Карина Олеговна\",\n              FIO:\"Колыхан Карина Олеговна\",\n              INN:\"343902925395\",\n              OGRNIP:\"317344300061296\",\n              OGRNIPDate:\"2 мая 2017\",\n              OKPO:\"IPОКРО\",\n              YurAdress:\"Волгоградская область г.Фролово\",\n              FactAdress:\"IPФАКТИЧЕСКИЙ АДРЕСС\",\n              bankName:\"ПАО 'СБЕРБАНК РОССИИ' г.Москва\",\n              BIK:\"044525225\",\n              BillOne:\"40702810970010127006\",\n              BillTwo:\"80101810645250000092\",\n              signature: \"Колыхан.К.О\"\n            }\n        },\n        {\n          id:2,\n          type:\"FL\",\n          data:\n            {\n              NameInformal:\"FLНЕФОРМАЛЬНОЕ ИМЯ\",\n              lastName:\"Иночкин\",\n              firstName:\"Игорь\",\n              midName:\"Владимирович\",\n              docType:\"паспорт\",\n              Serial:\"4519\",\n              number:\"022226\",\n              whoGave:\"ГУ МВД РОССИИ ПО Г.МОСКВЕ\",\n              whenGave:\"25.01.2019\",\n              codeGave:\"770-045\",\n              addressGave:\"FLГДЕ ВЫДАН\",\n              signature: \"Иночкин И.В.\"\n            }\n        }\n      ]\n    },\n  \n  ownerDic:\n    {dics:\n      [\n        {\n          id:0,\n          type:\"YL\",\n          data:\n            {\n              compFullName:\"Общество с ограниченной ответственностью 'Умный Климат Инжениринг'\",\n              compShortName: \"ОOO 'Умный Климат Инжениринг'\",\n              FIO:\"Лылова Дмитрия Павловича\", \n              INN:\"ORGИНН\",\n              KPP:\"ORGКПП\",\n              OGRN:\"ORGОГРН\",\n              OKPO:\"ORGОКРО\",\n              GosRegDate:\"ORGДАТА ГОС РЕГИСТРАЦИИ\",\n              YurAdress:\"ORGЮРИДИЧЕСКИЙ АДРЕСС\",\n              FactAdress:\"ORGФАКТИЧЕСКИЙ АДРЕСС\",\n              GenDirector:\"ORGГЕН ДИРЕКТОР\",\n              Buhgalter:\"ORGБУХГАЛТЕР\",\n              tel:\"ORGТЕЛЕФОН\",\n              bankName:\"ORGИМЯ БАНКА\",\n              BIK:\"ORGБИК\",\n              BillOne:\"ORGРАСЧЁТНЫЙ СЧЁТ\",\n              BillTwo:\"ORGКОРРЕСПОНДЕНДТСКИЙ СЧЁТ\"\n            }\n        },\n        {\n          id:1,\n          type:\"IP\",\n          data:\n            {\n              Name:\"Индивидуальный предприниматель Попов Александр Петрович\",\n              FIO:\"Попов Александр Петрович\",\n              INN:\"IPИНН\",\n              OGRNIP:\"317502700029527\",\n              OGRNIPDate:\"2 мая 2017\",\n              OKPO:\"IPОКРО\",\n              FactAdress:\"IPФАКТИЧЕСКИЙ АДРЕСС\",\n              bankName:\"IPИМЯ БАНКА\",\n              BIK:\"IPБИК\",\n              BillOne:\"IPРАСЧЁТНЫЙ СЧЁТ\",\n              BillTwo:\"IPКОРЕСПОНДЕНТСКИЙ СЧЁТ\"\n           }\n        },\n        {\n          id:2,\n          type:\"FL\",\n          data:\n            {\n              NameInformal:\"FLНЕФОРМАЛЬНОЕ ИМЯ\",\n              lastName:\"Попов\",\n              firstName:\"Александр\",\n              midName:\"Петрович\",\n              docType:\"паспорт\",\n              Serial:\"4512\",\n              number:\"123421\",\n              whoGave:\"ГУ МВД РОССИИ ПО Г.МОСКВЕ\",\n              whenGave:\"25.01.2019\",\n              codeGave:\"770-007\",\n              addressGave:\"FLГДЕ ВЫДАН\"\n            }\n        }\n      ]\n    }\n};\n      //const osd = {yl:yl,ip:ip,fl:fl};\n\n      module.exports = sampleData;\n","module.exports = __webpack_public_path__ + \"static/media/RobotoMono-Medium.7cfbd428.ttf\";","\n//  IMPORTS ---------------------------------------------------------------------------------------\n\n    const assert = require(\"./assert\");\n    \n//   TASK -----------------------------------------------------------------------------------------\n\n    /*\n    В процессе создания договоров им присваивается {название} по формуле:\n    + 1. Договор проектирования. {Договор проектирования №{текущийгод}А{порядковыйномер} от {дд-месяц-гггг}}\n    + 2. Договор поставки. {Договор поставки №{текущийгод}Б{порядковыйномер}. от {дд-месяц-гггг}}\n    + 3. Договор монтажа {Договор монтажа №{текущийгод}В{порядковыйномер}. от {дд-месяц-гггг}}\n    + 4. Договор сервисного обслуживания. {Договор сервисного обслуживания №{текущийгод}СО{порядковыйномер} от {дд-месяц-гггг}}\n    + 5. Договор субподряда {Договор монтажа №{текущийгод}ВСУБ{порядковыйномер}. от {дд-месяц-гггг}}\n\n    + С началом нового года {порядковый_номер} обнуляется и счет начинается заново с 1.\n    + {название} является названием файла при выгрузке в формате {название}.pdf или {название}.doc\n    */\n\n//  INPUT DATA: DOGS data (DOGOVORS) -------------------------------------------------------------------\n\n    const dogs = {\n        \"Договор проектирования\":\n            {\n                \"1999_1\": {date:\"1999/2/2\", link:\"link\", name: \"Договор проектирования №1999А1. от 1999/2/2\"},\n                \"1999_2\": {date:\"1999/12/5\", link:\"link\", name: \"Договор проектирования №1999A2. от 1999/12/5\"},\n                \"2000_1\": {date:\"2000/24/7\", link:\"link\", name: \"Договор проектирования №2000A1. от 2000/24/7\"}\n            },\n        \"Договор поставки\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор поставки №1999Б1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор поставки №1999Б2. oт 1999/12/5\"},\n                \"2019_2\": {date:\"24/7/2000\", link:\"link\", name: \"Договор поставки №2019Б2. от 2019/24/7\"}\n            },        \n        \"Договор монтажа\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор монтажа №1999В1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор монтажа №1999В2. от 1999/12/5\"},\n                \"2000_3\": {date:\"24/7/2000\", link:\"link\", name: \"Договор монтажа №1999В3. от 2000/24/7\"}\n            },\n        \"Договор сервисного обслуживания\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор сервисного обслуживания №1999СО1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор сервисного обслуживания №1999СО2. от 1999/12/5\"},\n                \"2000_4\": {date:\"24/7/2000\", link:\"link\", name: \"Договор сервисного обслуживания №2000СО4. от 2000/24/7\"}\n            },\n        \"Договор субподряда\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор субподряда №1999ВСУБ1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор субподряда №1999ВСУБ2. от 1999/12/5\"},\n                \"2000_5\": {date:\"24/7/2000\", link:\"link\", name: \"Договор субподряда №2000ВСУБ5. от 2000/24/7\"}        \n            }\n    };\n\n//  FUNCTIONS ----------------------------------------------------------------------------------------------------\n\n    //  1 NAME EXTRACTOR ---------------------------------------------------------------------------------------------\n\n    const nameExtractor = (_dogs=dogs) => {\n        let out = [];\n        Object.keys(dogs).map(dog => {for (let key in dogs[dog]) out.push(dogs[dog][key].name)});\n        return out;\n    };\n    assert(\n        \"Name extractor extracts names\",\n        nameExtractor(),\n        [\n            \"Договор проектирования №1999A1. от 1999/2/2\",\n            \"Договор проектирования 1999A2. от №1999/12/5\",\n            \"Договор проектирования №2000A1. от 2000/24/7\",\n            \"Договор поставки №1999Б1. от 1999/2/2\",\n            \"Договор поставки 1999Б2. от №1999/12/5\",\n            \"Договор поставки №2019Б2. от 2019/24/7\",\n            \"Договор монтажа №1999В1. от 1999/2/2\",\n            \"Договор монтажа 1999В2. от №1999/12/5\",\n            \"Договор монтажа №1999В3. от 2000/24/7\",\n            \"Договор сервисного обслуживания №1999СО1. от 1999/2/2\",\n            \"Договор сервисного обслуживания 1999СО2. от №1999/12/5\",\n            \"Договор сервисного обслуживания №2000СО4. от 2000/24/7\",\n            \"Договор субподряда №1999ВСУБ1. от 1999/2/2\",\n            \"Договор субподряда 1999ВСУБ2. от №1999/12/5\",\n            \"Договор субподряда №2000ВСУБ5. от 2000/24/7\"\n        ]\n    );\n\n    //  2 LATEST DOGOVORTYPE NUMBER EXTRACTOR ------------------------------------------------------------------------------\n\n    const latestExtractor = _dogName => {\n        let keys = Object.keys(dogs[_dogName]); \n        let out = keys[keys.length-1].match(/(?<=\\_)\\d+/g)[0];\n        return out;\n    };\n    assert(\n        \"IN: dogType & dogs pool, OUT: latest #num of required dogtype \",\n        latestExtractor(\"Договор проектирования\"),\n        \"1\"\n    );\n    \n    //  3 NEW DOGOVOR GENERATOR ---------------------------------------------------------------------------------------\n\n    const sampleNy = { year:2020, month:1, day:1};\n    \n    const newDogGen = (_dogName,_date=sampleNy) => {\n        const sampleDate = `${_date.year}/${_date.day}/${_date.month}`;   \n        const out = _letter => {\n            return ( (_date.month === 1 && _date.day === 1) && (latestExtractor(_dogName) === 1)\n                ? `${_dogName} №${_date.year}${_letter}${+latestExtractor(_dogName)+1}. ot ${sampleDate}`\n                : `${_dogName} №${_date.year}${_letter}1. ot ${sampleDate}` \n            );\n        };\n        switch(_dogName){\n            case \"Договор проектирования\": return out(\"A\");\n            case \"Договор поставки\": return out(\"Б\");\n            case \"Договор монтажа\": return out(\"В\");\n            case \"Договор сервисного обслуживания\": return out(\"СО\");\n            case \"Договор субподряда\": return out(\"ВСУБ\");\n            default : return \"who knows\";\n        };\n        \n    };\n    assert(\n            \"IN: dog name, OUT: new dog name\",\n            newDogGen(\"nameOne\",sampleNy),\n            \"nameOne №2020A2. ot 2020/1/1\" // prev = \"nameOne 2000 A1 2000/24/7\"\n        );\n    assert(\n        \"IN: dog name, OUT: new dog name\",\n        newDogGen(\"nameTwo\",sampleNy),\n        \"nameTwo №2020B1. ot 2020/1/1\" //prev === \"nameTwo 2019 B2 2019/24/7\"\n    );\n\n//  EXPORTS ---------------------------------------------------------------------------------------------------------\n\n    exports.newDogGen = newDogGen;\n    exports.nameExtractor = nameExtractor;\n\n","const assert = require('../../../src/utils/assert');\nconst makeOwnerHeadIO = require('./OWNERHEAD/makeOwnerHeadIO');\nconst makeAgentHeadIO = require('./AGENTHEAD/makeAgentHeadIO');\nconst sampleData = require('../SampleData/sampleData');\n\n    const makeDogovorHeadIO = ( _store, _dogovorId) => {\n      const dicData = (store,dic,ID) => store[dic].filter(e => e.id==ID)[0];\n      const dogovorData = dicData(_store,\"dogDic\",_dogovorId);\n      console.log(\"dicData in makeDogovorHead: \", dogovorData);\n      //const ownerId = \n      const ownerData = dicData(_store,\"ownerDic\",dogovorData.ownerId);\n      console.log(\"ownerData in makeDogovorHead: \", ownerData);\n      const agentData = dicData(_store,\"agentDic\",dogovorData.agentId);\n      console.log(\"agentData in makeDogovorHead: \", agentData);\n      //makeOwnerHeadIO(ownerData,\"Проектирование\");\n    return makeOwnerHeadIO(ownerData, dogovorData.dogovorType)+makeAgentHeadIO(agentData, dogovorData.dogovorType);\n      //makeOwnerHeadIO(owner,_dogovorType) +\n      //makeAgentHeadIO(agent,_dogovorType)\n\n    };\n\n    module.exports = makeDogovorHeadIO;\n\n\n","//sample data\n//const osd = require('./ownerSampleData').osd;\n//const sdata = require('../../SampleData/sampleData');\n// processors\nconst ownerYurlitsoHeadIO = require('./ownerHeads').ownerYurlitsoHeadIO;\nconst ownerIPHeadIO = require('./ownerHeads').ownerIPHeadIO;\nconst ownerFizlitsoHeadIO = require('./ownerHeads').ownerFizlitsoHeadIO;\nconst assert = require('../../../../src/utils/assert');\n\n\n     const makeOwnerHeadIO = (_ownerData,dogovorType) => {\n        console.log(\"_ownerData in makeOwnerHeadIO: \",_ownerData);\n        switch(_ownerData.type){\n          case \"YL\": \n            return ownerYurlitsoHeadIO(_ownerData,dogovorType);\n          case \"IP\": \n            return ownerIPHeadIO(_ownerData,dogovorType);\n          case \"FL\": \n            return ownerFizlitsoHeadIO(_ownerData,dogovorType);\n          default: return \"who cares\";\n        };\n    };\n    assert(\n        \"GIVEN ownerData, WHEN type is extracted THEN it returns relevant template filled with relevant data\",\n        makeOwnerHeadIO({type:\"IP\",Name:\"NAME\",\n             OGRNIP:\"NUM\",\n             OGRNIPDate:\"DATE\",\n             dog:\"KAKTO\"\n            },\"Проектирование\"),\n        \"Name, действующий на основании свидетельства ОГРНИП NUM от DATE, именуемый в дальнейшем KAKTO, с одной стороны, и \"\n    );\n/*\n assert(\n      \"ownerHeadOut processer for yurlitso works\",\n       oOut(sData.ownerDic.dics[0],\"Проектирование\"),\n      \"Общество с ограниченной ответственностью 'Умный Климат Инжениринг', в лице генерального директора Лылова Дмитрия Павловича, действующего на основании Устава, именуемое в дальнейшем 'Исполнитель', с одной стороны, и \"\n    );\n     assert(\n      \"owner head processer for ip works\",\n       oOut(sData.ownerDic.dics[1],\"Проектирование\"),\n      \"Индивидуальный предприниматель Попов Александр Петрович, действующий на основании свидетельства ОГРНИП 317502700029527 от 2 мая 2017, именуемый в дальнейшем 'Исполнитель', с одной стороны, и \"\n    );\n    assert(\n      \"owner head processer for fizlitso works\",\n       oOut(sData.ownerDic.dics[2],\"Проектирование\"),\n        \"Попов Александр Петрович, паспорт 4512 123421, выдан ГУ МВД РОССИИ ПО Г.МОСКВЕ 25.01.2019 код подразделения 770-007, именуемый(ая) в дальнейшем 'Исполнитель', с одной стороны, и \"\n    );\n*/\n    module.exports = makeOwnerHeadIO;\n","//sample data\n//const asd = require('./agentSampleData').asd;\nconst sampleData = require('../../SampleData/sampleData');\n// processors\nconst agentYurlitsoHeadIO = require\n  ('./agentHeads').agentYurlitsoHeadIO;\nconst agentIPHeadIO = require\n  ('./agentHeads').agentIPHeadIO;\nconst agentFizlitsoHeadIO = require\n  ('./agentHeads').agentFizlitsoHeadIO;\nconst assert = require('../../../../src/utils/assert');\n\n  const makeAgentHeadIO = (agentData,dogovorType) => {\n    console.log(\"makeAgentHeadIO: \", agentData, dogovorType);\n    switch(agentData.companyType){\n      case \"YL\": \n        return agentYurlitsoHeadIO(agentData,dogovorType);\n      case \"IP\": \n        return agentIPHeadIO(agentData,dogovorType);\n      case \"FL\": \n        return agentFizlitsoHeadIO(agentData,dogovorType);\n      default: return \"who cares\";      \n    };\n  };\n\n    module.exports = makeAgentHeadIO;\n","const YL =\n    {\n        compFullName: \"-\",\n        compShortName: \"-\",\n        INN: \"-\",\n        KPP:\"-\",\n        OGRN:\"-\",\n        OKPO:\"-\",\n        GosRegDate:\"-\",\n        YurAdress:\"-\",\n        FactAdress:\"-\",\n        GenDirector:\"-\",\n        Buhgalter:\"-\",\n        tel:\"-\",\n        bankName:\"-\",\n        BIK:\"-\",\n        BillOne:\"-\",\n        BillTwo:\"-\"\n    }\nconst IP= \n    {\n        Name: \"-\",\n        FIO: \"-\",\n        INN: \"-\",\n        OGRNIP:\"-\",\n        OKPO:\"-\",\n        FactAdress:\"-\",\n        bankName:\"-\",\n        BIK:\"-\",\n        BillOne:\"-\",\n        BillTwo:\"-\"\n    };\nconst FL = \n    {\n        NameInformal: \"-\",\n        lastName: \"-\",\n        firstName: \"-\",\n        midName:\"-\",\n        docType:\"-\",\n        Serial:\"-\",\n        number:\"-\",\n        whoGave:\"-\",\n        whenGave:\"-\",\n        codeGave:\"-\",\n        addressGave:\"-\"\n    };\nconst formDefaultData = \"formDefaultData\";\nlet initStateForNewDogovor= {\n      id: \"\",\n      name: \"\",\n      date: \"\",\n      objName: \"\",\n      objId: \"\",\n      agentName: \"\",\n      agentId: \"\",\n      ownerName:\"\",\n      ownerId: \"\",\n      dogovorType: \"\",\n      systems:\"\",\n      price:\"\",\n}; \nconst systemsDataVector = [\n  \"вентиляция и кондиционирование\",\n  \"отопление\",\n  \"котельная\",\n  \"водоснабжение и канализация\",\n  \"ЭОМ\",\n  \"слаботочные сети\",\n  \"автоматизация\"\n];\nconst dogovorTypes = [\"Проектирование\",\"Поставка\"];\n\n\nconst state = \n{\n    hello:\"hello\",\n    initStateForNewDogovor:initStateForNewDogovor,\n    systemsDataVector:systemsDataVector,\n    dogovorTypes:dogovorTypes,\n    dogTypes: {YL:YL,IP:IP,FL:FL}\n};\n\nexport {state};\n","import {state} from '../state.js';\nimport {\n    YURLITSO,\n    DOGOVOR_TYPE,\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case YURLITSO:\n            return { yurlitso: action.payload };\n        case DOGOVOR_TYPE:\n            return { dogovorType: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    DOGOVOR_DATA,\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\n{\n    selectors:{objNameSel:\"-\",dogTypeSel:\"-\",sysTypeSel: \"-\",servTypeSel: \"-\",clientTypeSel: \"-\",hub: {}},\n    formData:{\n        NameInformal:\"-\",\n        lastName:\"-\",\n        firstName:\"-\",\n        midName:\"-\",\n        docType:\"-\",\n        Serial:\"-\",\n        number:\"-\",\n        whoGave:\"-\",\n        whenGave:\"-\",\n        codeGave:\"-\",\n        addressGave:\"-\"\n    }\n};\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case DOGOVOR_DATA:\n            return action.payload;\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPEONE_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPEONE_DATA:\n            return { zakazchikTypeOneData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPETWO_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPETWO_DATA:\n            return { zakazchikTypeTwoData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPETHREE_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPETHREE_DATA:\n            return { zakazchikTypeThreeData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","//import {state} from '../state.js';\nimport {\n    OWNERDIC_SELECT,\n    OWNERDIC_CREATE\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\n[ \n  {\n    id:0,\n    type:\"YL\",\n    name: \"OWNER ID:0 TYPE:YL COMP_FULL_NAME\",\n    compFullName:\"OWNER ID:0 TYPE:YL COMP_FULL_NAME\",\n    compShortName: \"OWNER ID:0 TYPE:YL COMP_SHORT_NAME\",\n    FIO:\"OWNER ID:0 TYPE:YL FIO\", \n    INN:\"OWNER ID:0 TYPE:YL INN\",\n    KPP:\"OWNER ID:0 TYPE:YL KPP\",\n    OGRN:\"OWNER ID:0 TYPE:YL OGRN\",\n    OKPO:\"OWNER ID:0 TYPE:YL OKPO\",\n    GosRegDate:\"OWNER ID:0 TYPE:YL GOS_REG_DATE\",\n    YurAdress:\"OWNER ID:0 TYPE:YL YUR_ADRESS\",\n    FactAdress:\"OWNER ID:0 TYPE:YL FACT_ADRESS\",\n    GenDirector:\"OWNER ID:0 TYPE:YL GEN_DIRECTOR\",\n    Buhgalter:\"OWNER ID:0 TYPE:YL BUHGALTER\",\n    tel:\"OWNER ID:0 TYPE:YL TEL\",\n    bankName:\"OWNER ID:0 TYPE:YL BANK_NAME\",\n    BIK:\"OWNER ID:0 TYPE:YL BIK\",\n    RS:\"OWNER ID:0 TYPE:YL RS\",\n    KS:\"OWNER ID:0 TYPE:YL KS\",\n    signature: \"OWNER ID:0 TYPE:YL SIGNATURE\"\n  },\n  {\n    id:1,\n    type:\"IP\",\n    name: \"OWNER ID:1 TYPE:IP FULL_NAME\",\n    FullName:\"OWNER ID:1 TYPE:IP FULL_NAME\",\n    ShortName: \"OWNER ID:1 TYPE:IP SHORT_NAME\",\n    FIO:\"OWNER ID:1 TYPE:IP FIO\",\n    INN:\"OWNER ID:1 TYPE:IP INN\",\n    OGRNIP:\"OWNER ID:1 TYPE:IP OGRNIP\",\n    OGRNIPDate:\"OWNER ID:1 TYPE:IP OGRNIP_DATE\",\n    OKPO:\"OWNER ID:1 TYPE:IP ОКРО\",\n    YurAdress:\"OWNER ID:1 TYPE:IP YUR_ADRESS\",\n    FactAdress:\"OWNER ID:1 TYPE:IP FACT_ADRESS\",\n    bankName:\"OWNER ID:1 TYPE:IP BANK_NAME\",\n    BIK:\"OWNER ID:1 TYPE:IP BIK\",\n    RS:\"OWNER ID:1 TYPE:IP RS\",\n    KS:\"OWNER ID:1 TYPE:IP KS\",\n    signature: \"OWNER ID:1 TYPE:IP SIGNATURE\"\n  },\n  {\n    id:2,\n    type:\"FL\",\n    name: \"OWNER ID:2 TYPE:FL NAME_INFORMAL\",\n    NameInformal:\"OWNER ID:2 TYPE:FL NAME_INFORMAL\",\n    lastName:\"OWNER ID:2 TYPE:FL LAST_NAME\",\n    firstName:\"OWNER ID:2 TYPE:FL FIRST_NAME\",\n    midName:\"OWNER ID:2 TYPE:FL MID_NAME\",\n    docType:\"OWNER ID:2 TYPE:FL DOC_TYPE\",\n    Serial:\"OWNER ID:2 TYPE:FL SERIAL\",\n    number:\"OWNER ID:2 TYPE:FL NUMBER\",\n    whoGave:\"OWNER ID:2 TYPE:FL WHO_GAVE\",\n    whenGave:\"OWNER ID:2 TYPE:FL WHEN_GAVE\",\n    codeGave:\"OWNER ID:2 TYPE:FL CODE_GAVE\",\n    addressGave:\"OWNER ID:2 TYPE:FL ADRESS_GAVE\",\n    signature: \"OWNER ID:2 TYPE:FL SIGNATURE\"\n  }\n];\n\n\nexport default function(state = initialState,action){\n  switch (action.type){\n    case OWNERDIC_SELECT:\n      return {...state,\"currentDic\":action.payload};\n    case OWNERDIC_CREATE:\n      const out = {...state,\n        dics:[...state.dics,\n          {id:(state.dics[state.dics.length-1].id)+1,\n            name:Object.entries(action.payload)[0][1],\n            data:action.payload\n          }\n        ]\n      }; \n      console.log(\"OWNERDIC_SELECT out : \", out);\n      return out;\n    default:        \n      return state;\n    };\n};\n\n","//import {state} from '../state.js';\nimport {\n    AGENTDIC_SELECT,\n    AGENTDIC_CREATE\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\n[\n  {\n    id:0,\n    companyType:\"YL\",\n    name: \"AGENT ID:0 TYPE:YL COMP_FULL_NAME\",\n    compFullName:\"AGENT ID:0 TYPE:YL COMP_FULL_NAME\",\n    compShortName: \"AGENT ID:0 TYPE:YL COMP_SHORT_NAME\",\n    FIO:\"AGENT ID:0 TYPE:YL FIO\", \n    INN:\"AGENT ID:0 TYPE:YL INN\",\n    KPP:\"AGENT ID:0 TYPE:YL KPP\",\n    OGRN:\"AGENT ID:0 TYPE:YL OGRN\",\n    OKPO:\"AGENT ID:0 TYPE:YL OKPO\",\n    GosRegDate:\"AGENT ID:0 TYPE:YL GOS_REG_DATE\",\n    YurAdress:\"AGENT ID:0 TYPE:YL YUR_ADRESS\",\n    FactAdress:\"AGENT ID:0 TYPE:YL FACT_ADRESS\",\n    GenDirector:\"AGENT ID:0 TYPE:YL GEN_DIRECTOR\",\n    Buhgalter:\"AGENT ID:0 TYPE:YL BUHGALTER\",\n    tel:\"AGENT ID:0 TYPE:YL TEL\",\n    bankName:\"AGENT ID:0 TYPE:YL BANK_NAME\",\n    BIK:\"AGENT ID:0 TYPE:YL BIK\",\n    RS:\"AGENT ID:0 TYPE:YL RS\",\n    KS:\"AGENT ID:0 TYPE:YL KS\",\n    signature: \"AGENT ID:0 TYPE:YL SIGNATURE\"\n  },               \n  { \n    id:1,\n    companyType:\"IP\",\n    name: \"AGENT ID:1 TYPE:IP FULL_NAME\",\n    FullName:\"AGENT ID:1 TYPE:IP FULL_NAME\",\n    ShortName: \"AGENT ID:1 TYPE:IP SHORT_NAME\",\n    FIO:\"AGENT ID:1 TYPE:IP FIO\",\n    INN:\"AGENT ID:1 TYPE:IP INN\",\n    OGRNIP:\"AGENT ID:1 TYPE:IP OGRNIP\",\n    OGRNIPDate:\"AGENT ID:1 TYPE:IP OGRNIP_DATE\",\n    OKPO:\"AGENT ID:1 TYPE:IP ОКРО\",\n    YurAdress:\"AGENT ID:1 TYPE:IP YUR_ADRESS\",\n    FactAdress:\"AGENT ID:1 TYPE:IP FACT_ADRESS\",\n    bankName:\"AGENT ID:1 TYPE:IP BANK_NAME\",\n    BIK:\"AGENT ID:1 TYPE:IP BIK\",\n    RS:\"AGENT ID:1 TYPE:IP RS\",\n    KS:\"AGENT ID:1 TYPE:IP KS\",\n    signature: \"AGENT ID:1 TYPE:IP SIGNATURE\"\n  },\n  {\n    id:2,\n    companyType:\"FL\",\n    name: \"AGENT ID:2 TYPE:FL NAME_INFORMAL\",\n    NameInformal:\"AGENT ID:2 TYPE:FL NAME_INFORMAL\",\n    lastName:\"AGENT ID:2 TYPE:FL LAST_NAME\",\n    firstName:\"AGENT ID:2 TYPE:FL FIRST_NAME\",\n    midName:\"AGENT ID:2 TYPE:FL MID_NAME\",\n    docType:\"AGENT ID:2 TYPE:FL DOC_TYPE\",\n    Serial:\"AGENT ID:2 TYPE:FL SERIAL\",\n    number:\"AGENT ID:2 TYPE:FL NUMBER\",\n    whoGave:\"AGENT ID:2 TYPE:FL WHO_GAVE\",\n    whenGave:\"AGENT ID:2 TYPE:FL WHEN_GAVE\",\n    codeGave:\"AGENT ID:2 TYPE:FL CODE_GAVE\",\n    addressGave:\"AGENT ID:2 TYPE:FL ADRESS_GAVE\",\n    signature: \"AGENT ID:2 TYPE:FL SIGNATURE\"\n  }\n];\n\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case AGENTDIC_SELECT:\n            return {...state,\"currentDic\":action.payload};\n        case AGENTDIC_CREATE:\n            const out = {...state,\n                dics:[...state.dics,\n                    {id:(state.dics[state.dics.length-1].id)+1,\n                     name:Object.entries(action.payload)[0][1],\n                     //name:action.payload,\n                     data:action.payload\n                    }\n                ]\n            }; \n            console.log(\"AGENTDIC_SELECT out : \", out);\n            return out;\n        default:        \n            return state;\n    };\n};\n\n","//import {state} from '../state.js';\nimport {\n    OBJDIC_SELECT,\n    OBJDIC_CREATE\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\n[\n  {  \n    id:0,\n    name:\"OBJECT ID:0 OBJECT_NAME\",\n    adress:\"OBJECT ID:0 OBJECT_NAME ADRESS\",\n    contactsFIO:\"OBJECT ID:0 OBJECT_NAME CONTACTS_FIO\",\n    contactsRole:\"OBJECT ID:0 OBJECT_NAME CONTACTS_ROLE\",\n    contactsContacts:\"OBJECT ID:0 OBJECT_NAME CONTACTS_CONTACTS\",\n    workRegime: \"OBJECT ID:0 OBJECT_NAME SCHEDULE\"\n  },\n  {\n    id:1,\n    name:\"OBJECT ID:1 OBJECT_NAME\",\n    adress:\"OBJECT ID:1 OBJECT_NAME ADRESS\",\n    contactsFIO:\"OBJECT ID:1 OBJECT_NAME CONTACTS_FIO\",\n    contactsRole:\"OBJECT ID:1 OBJECT_NAME CONTACTS_ROLE\",\n    contactsContacts:\"OBJECT ID:1 OBJECT_NAME CONTACTS_CONTACTS\",\n    workRegime: \"OBJECT ID:1 OBJECT_NAME SCHEDULE\"               \n  },\n  {\n    id:2,\n    name:\"OBJECT ID:2 OBJECT_NAME\",\n    adress:\"OBJECT ID:2 OBJECT_NAME ADRESS\",\n    contactsFIO:\"OBJECT ID:2 OBJECT_NAME CONTACTS_FIO\",\n    contactsRole:\"OBJECT ID:2 OBJECT_NAME CONTACTS_ROLE\",\n    contactsContacts:\"OBJECT ID:2 OBJECT_NAME CONTACTS_CONTACTS\",\n    workRegime: \"OBJECT ID:2 OBJECT_NAME SCHEDULE\"\n  }     \n];\n\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case OBJDIC_SELECT:\n            return {...state,\"currentDic\":action.payload};\n        case OBJDIC_CREATE:\n            const out = {...state,\n                dics:[...state.dics,\n                    {id:(state.dics[state.dics.length-1].id)+1,\n                     name:Object.entries(action.payload)[0][1],\n                     data:action.payload\n                    }\n                ]\n            }; \n            console.log(\"OBJDIC_SELECT out : \", out);\n            return out;\n        default:        \n            return state;\n    };\n};\n\n","//import {state} from '../state.js';\nimport {\n    DOGDIC_SELECT,\n    DOGDIC_CREATE,\n    DOGDIC_UPDATE\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\n[\n  {\n    id:0, \n    name:\"DOGOVOR ID:0 TYPE:PROJECT DATE\",\n    date: \"DOGOVOR ID:0 DATE\",\n    objName:\"OBJECT ID:0 OBJECT_NAME\",\n    objId: 0,\n    ownerName: \"OWNER ID:0 TYPE:YL COMP_FULL_NAME\",\n    ownerId: 0,\n    agentName: \"AGENT ID:0 TYPE:YL COMP_FULL_NAME\",\n    agentId: 0,\n    dogovorType:\"Проектирование\",\n    systems: \"DOGOVOR ID:0 SYSTEMS:[1,2,3,4]\",\n    price: \"DOGOVOR ID:0 PRICE\"\n  },\n  { \n    id:1,           \n    name:\"DOGOVOR ID:1 TYPE:DELIVER DATE\",\n    date: \"DOGOVOR ID:1 DATE\",\n    objName:\"OBJECT ID:1 OBJECT_NAME\",\n    objId: 1,\n    ownerName: \"OWNER ID:1 TYPE:IP FULL_NAME\",\n    ownerId: 1,\n    agentName: \"AGENT ID:1 TYPE:IP FULL_NAME\",\n    agentId: 1,\n    dogovorType:\"Поставка\",\n    systems: \"DOGOVOR ID:0 SYSTEMS:[1,2]\",\n    price: \"DOGOVOR ID:1 PRICE\"\n  },\n  { \n    id:2, \n    name:\"DOGOVOR ID:2 TYPE:DELIVER DATE\",\n    date: \"DOGOVOR ID:2 DATE\",\n    objName:\"OBJECT ID:2 OBJECT_NAME\",\n    objId: 2,\n    ownerName: \"OWNER ID:2 TYPE:FL NAME_INFORMAL\",\n    ownerId: 2,\n    agentName: \"AGENT ID:2 TYPE:FL NAME_INFORMAL\",\n    agentId: 2,\n    dogovorType:\"Поставка\",\n    systems: \"DOGOVOR ID:2 SYSTEMS:[1,2,3]\",\n    price: \"DOGOVOR ID:2 PRICE\"\n  }\n];\n\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case DOGDIC_SELECT:\n            return {...state,\"currentDic\":action.payload};\n        case DOGDIC_CREATE:\n            console.log(\"state in dogDic: \", state);\n            console.log(\"state.dogDic in dogDic: \", state.dogDic);\n            return [...state,{...action.payload}];\n            //}; \n            //return out;\n        case DOGDIC_UPDATE:\n            console.log(\"action.payload.id: \", action.payload.id);\n            console.log(\"action.payload: \", action.payload);\n            return state.map(e => e.id===action.payload.id ? action.payload :\n                e);\n        default:        \n            return state;\n    };\n};\n\n","import {combineReducers} from 'redux';\nimport home from './home';\nimport formOne from './formOne';\nimport formTwo from './formTwo';\nimport formThree from './formThree';\nimport dogovorData from './dogovorData';\nimport ownerDic from './ownerDic';\nimport agentDic from './agentDic';\nimport objDic from './objDic';\nimport dogDic from './dogDic';\n\nconst rootReducer = combineReducers({\n    home,\n    dogovorData,\n    ownerDic,\n    agentDic,\n    objDic,\n    dogDic\n});\n\nexport default rootReducer;\n","export const OWNERDIC_SELECT = \"OWNERDIC_SELECT\";\nexport const OWNERDIC_CREATE = \"OWNERDIC_CREATE\";\nexport const AGENTDIC_SELECT = \"AGENTDIC_SELECT\";\nexport const AGENTDIC_CREATE = \"AGENTDIC_CREATE\";\nexport const OBJDIC_SELECT = \"OBJDIC_SELECT\";\nexport const OBJDIC_CREATE = \"OBJDIC_CREATE\";\nexport const DOGDIC_SELECT = \"DOGDIC_SELECT\";\nexport const DOGDIC_CREATE = \"DOGDIC_CREATE\";\nexport const DOGDIC_UPDATE = \"DOGDIC_UPDATE\";\nexport const DOGDIC_DELETE = \"DOGDIC_DELETE\";\n\nexport const YURLITSO = \"YURLITSO\";\nexport const DOGOVOR_TYPE = \"DOGOVOR_TYPE\";\nexport const VARIABLE = \"VARIABLE\";\nexport const FORM_DATA_NEW = \"FORM_DATA_NEW\";\nexport const DOGOVOR_DATA = \"DOGOVOR_DATA\";\nexport const ZAKAZCHIK_TYPEONE_DATA = \"ZAKAZCHIK_TYPEONE_DATA\";\nexport const ZAKAZCHIK_TYPETWO_DATA = \"ZAKAZCHIK_TYPETWO_DATA\";\nexport const ZAKAZCHIK_TYPETHREE_DATA = \"ZAKAZCHIK_TYPETHREE_DATA\";\n","import styled from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0px;\n    background:white;\n    font-family: 'Roboto Mono', monospace;\n  }\n`;\nconst Container = styled.div`\n    width:100vw;\n    height:100vh;\n`; \nconst Grid = styled.div`\n    display:grid;\n    grid-template-columns: 5% repeat(3,30%) 5%;\n    grid-template-rows: 2.5vh repeat(8,11.9%) 2.5vh;\n    width:100%;\n    height:100%;\n    background:white;\n`;\nconst AreaBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"column\"};\n    grid-area:${p=> p.g[0]+\"/\"+p.g[1]+\"/\"+p.g[2]+\"/\"+p.g[3]};\n    justify-content:center;\n    align-items:center;\n    border:${p=> p.b || \"0.5px solid black\"};\n    padding:0px;\n    overflow-wrap:normal;\n    background:White;\n`;\nconst ParamBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"row\"};\n    width:${p => p.w || '100%'};\n    height:${p => p.h || '100%'};\n    justify-content:center;\n    align-items:center;\n    overflow-wrap:normal;\n    //overflow:scroll;\n`;\nconst Text = styled.div`\n    margin:${p => p.m};\n`;\nconst Button = styled.div`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    margin:1vmin;\n    padding:5vmin;\n    width:30vw;\n    border:0.5vmin solid DarkSlateGrey;    \n`;\nconst Img = styled.img`\n    width:auto;\n    height:80%;\n`;\nconst TextBox = styled(ParamBox)`\n    display:flex;\n    flex-wrap:wrap;\n    width:100%;\n    height:${p => p.h || \"66%\"};\n    justify-content:flex-start;\n    align-items:flex-start;\n    font-size:1rem;\n    margin:1vmin;\n    //overflow:scroll;\n`;\nconst Input = styled.input`\n    color: black;\n    border: 1px solid darkGrey;\n    margin: 0 0 5px 0;\n    width: 300%;\n    background-color: lightGrey;\n        \n    &:hover & {\n        background-color: white;\n        box-shadow: 0px 4px 20px 0px rgba(0, 0, 0, 0.05);\n    }\n\n`\n\nconst Selectable = styled.b`\n    &:hover {\n        background-color: yellow;\n    }\n`\nconst link = {\n  'color': 'black',\n  'text-decoration': 'none'\n};\nconst ghost = {\n  'color': 'grey',\n  'opacity': '50%'\n};\nconst naked = {\n  'border': '0px',\n};\n\nconst NavbarDropdownContent = styled.div`\n    display: none;\n    position: absolute;\n    background-color: #f9f9f9;\n    opacity:90%;\n    min-width: 300px;\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0, 2);\n    padding: 12px 16px;\n    z-index: 1;\n`;\n\nconst NavbarDropdown = styled.div`\nposition: relative;\ndisplay: inline-block;\n&:hover ${NavbarDropdownContent} {\n  display: block;\n}\n`;\n\n\nexport {\n    GlobalStyle,NavbarDropdown,NavbarDropdownContent,Container,Grid,AreaBox,ParamBox,TextBox,Input,Text,Button,Img,link,naked,Selectable,ghost\n}\n","import * as types from \"../constants/actionTypes\";\n\n// OWNER DIC\nexport const ownerDicSelect = _data => {\n    console.log({type:types.OWNERDIC_SELECT,payload:_data});\n    return {type:types.OWNERDIC_SELECT, payload: _data};\n};\nexport const ownerDicCreate = _data => {\n    console.log({type:types.OWNERDIC_CREATE,payload:_data});\n    return {type:types.OWNERDIC_CREATE, payload: _data};\n};\n// AGENT DIC\nexport const agentDicSelect = _data => {\n    console.log({type:types.AGENTDIC_SELECT,payload:_data});\n    return {type:types.AGENTDIC_SELECT, payload: _data};\n};\nexport const agentDicCreate = _data => {\n    console.log({type:types.AGENTDIC_CREATE,payload:_data});\n    return {type:types.AGENTDIC_CREATE, payload: _data};\n};\n// OBJECT DIC\nexport const objDicSelect = _data => {\n    console.log({type:types.OBJDIC_SELECT,payload:_data});\n    return {type:types.OBJDIC_SELECT, payload: _data};\n};\nexport const objDicCreate = _data => {\n    console.log({type:types.OBJDIC_CREATE,payload:_data});\n    return {type:types.OBJDIC_CREATE, payload: _data};\n};\n// DOGOVOR DIC\nexport const dogDicSelect = _data => {\n    console.log({type:types.DOGDIC_SELECT,payload:_data});\n    return {type:types.DOGDIC_SELECT, payload: _data};\n};\nexport const dogDicCreate = _data => {\n    console.log({type:types.DOGDIC_CREATE,payload:_data});\n    return {type:types.DOGDIC_CREATE, payload: _data};\n};\nexport const dogDicUpdate = _data => {\n    console.log({type:types.DOGDIC_UPDATE,payload:_data});\n    return {type:types.DOGDIC_UPDATE, payload: _data};\n};\n\n\n\n\n\n\n\n\n\nexport const dogovorData = _data => {\n    console.log({type:types.DOGOVOR_DATA, payload: _data});\n    return {type:types.DOGOVOR_DATA, payload: _data}\n};\n\nexport const formDataNew = _data => {\n    console.log({type:types.FORM_DATA_NEW, payload: _data});\n    return {type:types.FORM_DATA_NEW, payload: _data};\n};\n\nexport const yurlitso = _yurlitso => {\n    console.log({type:types.YURLITSO, payload: _yurlitso});\n    return {type:types.YURLITSO, payload: _yurlitso};\n};\n\nexport const dogovorType = _dogovor => {\n    console.log({type:types.DOGOVOR_TYPE, payload: _dogovor});\n    return {type:types.DOGOVOR_TYPE, payload: _dogovor};\n};\n\nexport const zakazchikTypeOneData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPEONE_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPEONE_DATA,\n            payload:_data\n       }\n    );\n};\nexport const zakazchikTypeTwoData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPETWO_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPETWO_DATA,\n            payload:_data\n       }\n    );\n};\nexport const zakazchikTypeThreeData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPETHREE_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPETHREE_DATA,\n            payload:_data\n       }\n    );\n};\n","\n    import React from 'react';\n    import font from '../../css/Roboto_Mono/RobotoMono-Medium.ttf'\n    import {\n        Page,\n        Text,\n        View,\n        Document,\n        StyleSheet,\n        PDFDownloadLink,\n        Font,\n    } from \"@react-pdf/renderer\";\n\n    // Register font\n    Font.register({\n      family: 'Roboto Mono',\n      src: font\n    })\n\n    const styles = StyleSheet.create({\n        page: {\n\t        margin: \"2em auto\",\n            fontFamily: \"Roboto Mono\",\n            display: \"flex\",\n            wordBreak: \"break-word\",\n            border:\"1px solid black\",\n\t        hyphens: \"auto\"\n        },\n        section: {\n            margin: 10,\n            padding: 10,\n        },\n        content: {\n            display: \"block\"\n        }\n    });\n\n    let sampleDataOne = {type:\n        {\n            compFullName: \" - \",\n            compShortName: \" - \",\n            INN: \" - \",\n            KPP: \" - \",\n            OGRN: \" - \",\n            OKPO: \" - \",\n            GosRegDate: \" - \",\n            YurAdress: \" - \",\n            FactAdress: \" - \",\n            GenDirector: \" - \",\n            Buhgalter: \" - \",\n            tel: \" - \",\n            bankName: \" - \",\n            BIK: \" - \",\n            BillOne: \" - \",\n            BillTwo: \" - \",\n        }\n    };\n    let sampleDataTwo = {type:\n        {\n            Name: \"-\",\n            FIO: \"-\",\n            INN: \"-\",\n            OGRNIP:\"-\",\n            OKPO:\"-\",\n            FactAdress:\"-\",\n            bankName:\"-\",\n            BIK:\"-\",\n            BillOne:\"-\",\n            BillTwo:\"-\"\n        }\n    };\n    let sampleDataThree = {type:\n        {\n            NameInformal: \"-\",\n            lastName: \"-\",\n            firstName: \"-\",\n            midName:\"-\",\n            docType:\"-\",\n            Serial:\"-\",\n            number:\"-\",\n            whoGave:\"-\",\n            whenGave:\"-\",\n            codeGave:\"-\",\n            addressGave:\"-\"\n        }\n    };\n    \n    const templateOne = (_data = sampleDataOne.type) => {\n        return (\"Нашакомпания ,в лице директора ФИОдиректора Нашей Компании действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" +\n        _data.compFullName + \" , в лице генерального директора  ФИО второй стороны , действующего(ей) на основании Устава, именуемое в дальнейшем 'Покупатель',РЕКВИЗИТЫ СТОРОН: \" + \n        \" Покупатель: \" + _data.compShortName  +\n        \" ИНН: \" + _data.INN +\n        \" КПП: \" + _data.KPP +\n        \" ОГРН: \" + _data.OGRN + \n        \" Юр.адрес: \" + _data.YurAdress +\n        \" Факт.адрес: \" + _data.FactAdress +\n        \" Банк: \" +  _data.bankName +\n        \" БИК: \" +  _data.BIK +\n        \" р/с: \" +  _data.BillOne +\n        \" к/с: \" +  _data.BillTwo +\n        \" \")\n    };\n    const templateTwo = (_data = sampleDataTwo.type) => {\n        return(\"Наша компания, в лице директора ФИОдиректора нашей компании, действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" + _data.Name + \" , в лице генерального директора \" + _data.FIO + \", действующего(ей) на основании Устава, именуемое в дальнейшем 'Покупатель', РЕКВИЗИТЫ СТОРОН: Покупатель: \" + \n_data.Name + \" ИНН: \" + _data.INN + \" ОГРНИП: \" + _data.OGRNIP + \" Факт.адрес: \" +  _data.FactAdress + \" Банк: \" + _data.bankName +\n\" БИК: \" +  _data.BIK + \" р/с: \" + _data.BillOne + \" к/с: \" +  _data.BillTwo + \" подписи \" + _data.Name + \" _/инициалы(ФИО)/ \" + _data.FIO + \"\"\n        )\n    };\n    const templateThree = (_data = sampleDataTwo.type) => {\n        return(\"Нашакомпания, в лице директора ФИОдиректора нашей компании, действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" + _data.lastName + \" \" + _data.firstName + \" \" + _data.midName + \" , \" + _data.docType + \" серия \" + _data.Serial + \" номер \" +  _data.number + \" , выдан \" +  _data.whoGave + \" \" +  _data.whenGave + \" код подразделения \" +  _data.codeGave + \" , именуемый(ая) в дальнейшем 'Покупатель', РЕКВИЗИТЫ СТОРОН: Покупатель: \"  + _data.lastName + \" \" + _data.firstName + \" \" + _data.midName + \" , \" + _data.docType + \" серия \" + _data.Serial + \" номер \" +  _data.number + \" , выдан \" +  _data.whoGave + \" \" +  _data.whenGave + \" код подразделения \" +  _data.codeGave + \" подписи \" + \"_/инициалы(ФИО)/\"\n        );\n    };\n\n    const zakazchik = {\n        one:{ template: templateOne, data: sampleDataOne },\n        two:{ template: templateTwo, data: sampleDataTwo },\n        three:{ template: templateThree, data: sampleDataThree }\n    };\n\n    const data_to_text = (_data,_store) => {\n        console.log(\"data_to_text on load : \", _store);\n        const hold = Object.keys(JSON.parse(_data))[0];\n        switch (hold) {\n            case 'zakazchikTypeOneData':\n                return JSON.stringify(zakazchik.one.template(JSON.parse(_data)[hold]));\n            case 'zakazchikTypeTwoData':\n                return JSON.stringify(zakazchik.two.template(JSON.parse(_data)[hold]));\n            case 'zakazchikTypeThreeData':\n                return JSON.stringify(zakazchik.three.template(JSON.parse(_data)[hold]));\n            default:\n                return \"whatever\";\n        }\n    };\n\n    const PdfDocument = _props => (\n        <Document>\n            <Page style={styles.page}>\n                <View style={styles.section}>\n                    <Text style={styles.content}>\n                        {_props.text}\n                    </Text>\n                </View>\n            </Page>\n        </Document>\n    );\n\n    const BeautyText = (_props) => (\n      <div>\n        <PdfDocument text={data_to_text(_props.text,_props.store)}/>\n        <PDFDownloadLink \n            document={<PdfDocument \n                text={data_to_text(_props.text,_props.store)}/>\n            } \n            fileName=\"somename.pdf\"\n        >\n            {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Забери PDF если считаешь что он ок.')}\n        </PDFDownloadLink>\n      </div>\n    );\n\n    export default BeautyText;\n","   \n    import React, {useState} from 'react';\n    import {Input} from '../../css/style.js';\n    import * as actions from '../../actions';\n    import BeautyText from \"../PRINT/BeautyText\";\n    import {connect} from 'react-redux';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../../css/style.js'\n\n    const FormOneSimp = _props => {\n    //    console.log(\"store visible in FormOne : \", store);\n     //   console.log(\"onDataReady inside form one : \", onDataReady);\n    //const [dataSent,setDataSent] = useState({is:\"not ok\"});\n    //const [isOk, setIsOk] = useState(\"isNotOk\")\n        \n\n        // _props.action\n\n        const [formData, setFormData] = useState({\n            compFullName: \"\",\n            compShortName: \"\",\n            INN: \"\",\n            KPP:\"\",\n            OGRN:\"\",\n            OKPO:\"\",\n            GosRegDate:\"\",\n            YurAdress:\"\",\n            FactAdress:\"\",\n            GenDirector:\"\",\n            Buhgalter:\"\",\n            tel:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //setDataSent(\"OK\");\n            //console.log(\"form data : \", formData);\n        }\n        const \n        { \n            compFullName, \n            compShortName,\n            INN,\n            KPP,\n            OGRN,\n            OKPO,\n            GosRegDate,\n            YurAdress,\n            FactAdress,\n            GenDirector,\n            Buhgalter,\n            tel,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onDogovorData({...dogovorData,formData:formData});\n            _props.action(formData);\n        };\n    return (\n        <form>\n            <br/>\n                <label> Полное название организации : <br/>\n                    <Input\n                        id=\"compFullName\"\n                        value= {compFullName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Полное название организации \"\n                        type=\"text\"\n                        name=\"compFullName\"\n                        required\n                        maxlength=\"120\"\n                    /><br/>\n               </label>\n               <label> Краткое название организации : <br/>\n                    <Input\n                        id=\"compShortName\"\n                        value= {compShortName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Краткое название организации \"\n                        type=\"text\"\n                        name=\"compShortName\"\n                        required\n                        maxlength=\"120\"\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"number\"\n                        name=\"INN\"\n                        required\n                        minlength=\"10\"\n                        maxlength=\"10\"\n                    /><br/>\n               </label>\n               <label> КПП : <br/>\n                    <Input\n                        id=\"KPP\"\n                        value= {KPP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" КПП \"\n                        type=\"text\"\n                        name=\"KPP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРН : <br/>\n                    <Input\n                        id=\"OGRN\"\n                        value= {OGRN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРН \"\n                        type=\"number\"\n                        name=\"OGRN\"\n                        required\n                        minlength=\"13\"\n                        maxlength=\"13\"\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"number\"\n                        name=\"OKPO\"\n                        required\n                        minlength=\"8\"\n                        maxlength=\"8\"\n                    /><br/>\n               </label>\n               <label> Дата государственной регистрации : <br/>\n                    <Input\n                        id=\"GosRegDate\"\n                        value= {GosRegDate}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Дата государственной регистрации \"\n                        type=\"text\"\n                        name=\"GosRegDate\"\n                        required\n                    /><br/>\n               </label>\n               <label> Юридический адрес : <br/>\n                    <Input\n                        id=\"YurAdress\"\n                        value= {YurAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Юридический адрес \"\n                        type=\"text\"\n                        name=\"YurAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Ген. директор (ФИО) : <br/>\n                    <Input\n                        id=\"GenDirector\"\n                        value= {GenDirector}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Ген. директор (ФИО) \"\n                        type=\"text\"\n                        name=\"GenDirector\"\n                        required\n                    /><br/>\n               </label>\n               <label> Бухгалтер (ФИО) : <br/>\n                    <Input\n                        id=\"Buhgalter\"\n                        value= {Buhgalter}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Бухгалтер (ФИО) \"\n                        type=\"text\"\n                        name=\"Buhgalter\"\n                        required\n                    /><br/>\n               </label>\n               <label> телефон : <br/>\n                    <Input\n                        id=\"tel\"\n                        value= {tel}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" телефон \"\n                        type=\"text\"\n                        name=\"tel\"\n                        required\n                    /><br/>\n               </label><br/>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {BIK}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n\n             <button onClick={handleSubmit}>Submit</button>\n  \n             \n        </form>\n    );\n    };\n    /*\n    const mapStateToProps = _state => ({\n        store: _state,\n        dogovorData: _state.dogovorData\n        //formOneState: _state.form.formOne\n    });\n    const mapDispatchToProps = _dispatch => ({\n        onDataReady: data => _dispatch(actions.formDataNew(data)),\n        onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(FormOne);  \n    */\n    export default FormOneSimp; \n\n    \n","   \n    import React, {useState} from 'react';\n    import {Input} from '../../css/style.js';\n    import * as actions from '../../actions';    \n    import BeautyText from \"../PRINT/BeautyText\";\n    import {connect} from 'react-redux';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../../css/style.js'\n\n    const FormTwoSimp = _props  => {\n        const [formData, setFormData] = useState({\n            Name: \"\",\n            FIO: \"\",\n            INN: \"\",\n            OGRNIP:\"\",\n            OKPO:\"\",\n            FactAdress:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            Name, \n            FIO,\n            INN,\n            OGRNIP,\n            OKPO,\n            FactAdress,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            //onDataReady(formData);\n            //onDogovorData({...dogovorData,formData:formData});\n            //console.log(\"formData after submit: \", formData);\n            _props.action(formData);\n        };\n    //console.log(\"store in formTwo : \", store)\n    return (\n        <form>\n            <br/>\n                <label> Название : <br/>\n                    <Input\n                        id=\"Name\"\n                        value= {Name}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название \"\n                        type=\"text\"\n                        name=\"Name\"\n                        required\n                    /><br/>\n               </label>\n               <label> ФИО : <br/>\n                    <Input\n                        id=\"FIO\"\n                        value= {FIO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ФИО \"\n                        type=\"text\"\n                        name=\"FIO\"\n                        required\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"text\"\n                        name=\"INN\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРНИП : <br/>\n                    <Input\n                        id=\"OGRNIP\"\n                        value= {OGRNIP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРНИП \"\n                        type=\"text\"\n                        name=\"OGRNIP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"text\"\n                        name=\"OKPO\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {BIK}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n          \n        \n        </form>\n    );\n    };\n/*\nconst mapStateToProps = _state => ({\n     store: _state,\n     dogovorData: _state.dogovorData\n    //yurlitzas: _state.home.yurlitzas,\n    //dogovorTypes: _state.home.dogovorTypes,\n    //dialects: _state.home.varDialects,\n    //formData: _state.home.formData\n});\nconst mapDispatchToProps = _dispatch => ({\n    //onYur: data => _dispatch(actions.yurlitso(data))\n    onDataReady: data =>\n        _dispatch(actions.zakazchikTypeTwoData(data)),\n    onDogovorData: data => _dispatch(actions.dogovorData(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(FormTwo); \n*/\n        \n    export default FormTwoSimp;\n","   \n    import React, {useState} from 'react';\n    import {Input} from '../../css/style.js';\n    import * as actions from '../../actions';\n    import BeautyText from \"../PRINT/BeautyText\";\n    import {connect} from 'react-redux';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../../css/style.js'\n\n    const FormThreeSimp = _props => {\n        const [formData, setFormData] = useState({\n            NameInformal: \"\",\n            lastName: \"\",\n            firstName: \"\",\n            midName:\"\",\n            docType:\"\",\n            Serial:\"\",\n            number:\"\",\n            whoGave:\"\",\n            whenGave:\"\",\n            codeGave:\"\",\n            addressGave:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            NameInformal, \n            lastName,\n            firstName,\n            midName,\n            docType,\n            Serial,\n            number,\n            whoGave,\n            whenGave,\n            codeGave,\n            addressGave\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n           // onDogovorData({...dogovorData,formData:formData});\n            //console.log(\"formData after submit: \", formData);\n            _props.action(formData);\n        };\n    //console.log(\"store in formThree : \", store)\n    return (\n        <form>\n            <br/>\n                <label> Название (неформальное) : <br/>\n                    <Input\n                        id=\"NameInformal\"\n                        value= {NameInformal}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название (неформальное) \"\n                        type=\"text\"\n                        name=\"NameInformal\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фамилия : <br/>\n                    <Input\n                        id=\"lastName\"\n                        value= {lastName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фамилия \"\n                        type=\"text\"\n                        name=\"lastName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Имя : <br/>\n                    <Input\n                        id=\"firstName\"\n                        value= {firstName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Имя \"\n                        type=\"text\"\n                        name=\"firstName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Отчество : <br/>\n                    <Input\n                        id=\"midName\"\n                        value= {midName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Отчество \"\n                        type=\"text\"\n                        name=\"midName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Вид документа : <br/>\n                    <Input\n                        id=\"docType\"\n                        value= {docType}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Вид документа \"\n                        type=\"text\"\n                        name=\"docType\"\n                        required\n                    /><br/>\n               </label>\n               <label> Серия : <br/>\n                    <Input\n                        id=\"Serial\"\n                        value= {Serial}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Серия \"\n                        type=\"text\"\n                        name=\"Serial\"\n                        required\n                    /><br/>\n               </label>\n               <label> Номер : <br/>\n                   <Input\n                       id=\"number\"\n                       value= {number}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Номер \"\n                       type=\"text\"\n                       name=\"number\"\n                       required\n                   /><br/>\n               </label>\n               <label> Кем выдан : <br/>\n                   <Input\n                       id=\"whoGave\"\n                       value= {whoGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Кем выдан \"\n                       type=\"text\"\n                       name=\"whoGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Дата выдачи : <br/>\n                   <Input\n                       id=\"whenGave\"\n                       value= {whenGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Дата выдачи \"\n                       type=\"text\"\n                       name=\"whenGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Код подразделения : <br/>\n                   <Input\n                       id=\"codeGave\"\n                       value= {codeGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Код подразделени \"\n                       type=\"text\"\n                       name=\"codeGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Адрес прописки : <br/>\n                   <Input\n                       id=\"addressGave\"\n                       value= {addressGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Адрес прописки \"\n                       type=\"text\"\n                       name=\"addressGave\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n           \n        </form>\n    );\n    };\n/*\n        const mapStateToProps = _state => ({\n     store: _state,\n     dogovorData: _state.dogovorData\n    });\n    const mapDispatchToProps = _dispatch => ({\n       onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(FormThree); \n*/\n        \n    export default FormThreeSimp;\n","   \n  import React, {useState,useEffect} from 'react';\n  import {\n    GlobalStyle,Container,Grid,AreaBox,Text,\n    TextBox,Button,ParamBox,naked,\n    NavbarDropdown,NavbarDropdownContent,link\n  } from '../../css/style.js';\n  import FormOneSimp from \"../FORMS/FormOneSimp\";\n  import FormTwoSimp from \"../FORMS/FormTwoSimp\";\n  import FormThreeSimp from \"../FORMS/FormThreeSimp\";\n  import {connect} from 'react-redux';\n  import * as actions from '../../actions';\n    \n  const Selector = props => {\n  //const pool = props.content.home.dogTypes;\n  const formSet = \n    {\n      YL:<FormOneSimp action={props.action}/>,\n      IP:<FormTwoSimp action={props.action}/>,\n      FL:<FormThreeSimp action={props.action}/>\n    };\n  const pool = Object.keys(formSet);\n  console.log(\"pool inowners :\", pool);\n  const [select,setSelect] = useState(\"\");\n  console.log(\"select:\", select);\n  const [newdic,setNewdic] = useState(false);\n    return(\n      <div>\n        <button \n\t  onClick={()=>setNewdic(!newdic)}> \n\t    добавить фирму \n\t</button>\n        {newdic===false ? \"\" : \n          <div>\n            <select onChange={e => setSelect(e.target.value)}>\n              <option value=\"-\">-------</option>\n              {Object.entries(formSet)\n\t        .map(e => <option value={e[0]}>{e[0]}</option>)}\n            </select>\n            {select===\"\" ? \"\" : <div> {formSet[select]} </div> }\n          </div>\n        }\n      </div>\n    );\n  };\n  const Article = _props => {\n    const [fold,setFold] = useState(false);\n    const buttonHandler = () => setFold(!fold);\n    return (\n      <div>\n        <div>{_props.name}{\" \"}\n          <button \n\t    onClick={buttonHandler}\n\t  >\n\t    {fold === false ? \"open\" : \"close\"}\n\t  </button>            \n        </div>\n        {fold === false ? \"\" : <div>{_props.content}</div>}\n        <br/>\n      </div>        \n    );\n  }\n  const Ownerdic = (\n    { majorStore, \n      store,\n      onOwnerDicSelection,\n      onOwnerDicCreation\n    }) => (\n    <div>\n      <GlobalStyle/>\n      <Container>\n        <Grid>\n          <AreaBox g={[2,2,10,5]} fd=\"row\" style={naked}> \n            <TextBox w={\"80%\"}>\n              <Text>\n                <div>СПРАВОЧНИК НАШИХ ФИРМ:</div><br/>\n                {store.ownerDic.map(owner => \n                  <Article \n                   key={owner.id} \n                   name={owner.name}\n                   content={Object.entries(owner)\n\t             .map(record => <div>{record[0]} : {record[1]}</div>)} \n                  />)\n                } \n                <Selector \n\t          content={majorStore} \n\t          action={onOwnerDicCreation}\n\t        />\n              </Text>\n            </TextBox>             \n          </AreaBox>\n        </Grid>\n      </Container>\n    </div>\n  );\n\n  const mapStateToProps = _state => ({\n    store: _state,\n    majorStore: _state\n  });\n  const mapDispatchToProps = _dispatch => ({\n    onOwnerDicSelection: \n      data => _dispatch(actions.ownerDicSelect(data)),\n    onOwnerDicCreation: \n      data => _dispatch(actions.ownerDicCreate(data))\n  });\n  export default connect (\n    mapStateToProps,\n    mapDispatchToProps\n  )(Ownerdic);\n  \n  //export default Ownerdic;\n\n","   \n    import React, {useState,useEffect} from 'react';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,\n        NavbarDropdown,NavbarDropdownContent,link\n    } from '../css/style.js';\n    import { Link } from 'react-router-dom';\n    import * as actions from '../actions';\n    import {connect} from 'react-redux';\n    //import FormOne from \"./FormOne\";\n    //import FormTwo from \"./FormTwo\";\n    //import FormThree from \"./FormThree\";\n    //import Montaj from \"./Montaj\";\n    import Ownerdic from \"./DICTIONARIES/Ownerdic\";\n    const {newDogGen,nameExtractor} = require(\"../utils/dognums\");\n\n    const Home = (\n        {\n            store,\n            home,\n            formData,\n            newDogData,\n            onDogovorData,\n            dogovorData\n        }) => { \n        console.log(\"store inside home : \", store);\n        console.log(\"form data : \", formData);\n        console.log(\"new dogovor data : \", newDogData);\n\n//  STATE -------------------------------------------------------------\n    \n    \n    // INIT\n    const [selection, setSelection] = useState({\n        objNameSel:\"\",\n        dogTypeSel:\"\",\n        sysTypeSel:\"\",\n        servTypeSel:\"\",\n        clientTypeSel:\"\"    \n    });\n    const [hub,setHub] = useState({});\n    const output = {...dogovorData,selectors:{...selection,hub}};\n    \n    console.log(\"output : \", output);\n\n//  REDUCERS ---------------------------------------------------------\n\n    const updateSelection = event => {\n        setSelection({\n          ...selection,\n          [event.target.name]: event.target.value\n        });\n        onDogovorData(output);\n        console.log(\"updateSelection : \", selection);\n    }; \n    const updateHub = event => {\n        const target = event.target;      \n        const value = target.value === \"on\" ? target.checked : !target.checked;\n        const name = target.name;\n        setHub({...hub,[name]: value});\n    }; \n    const { objNameSel,\n            dogTypeSel,\n            sysTypeSel,\n            servTypeSel,\n            clientTypeSel,\n            } = selection;\n\n//  SAMPLE HARDCODED DATA VECTORS ------------------------------------ \n\n    const objectsDataVector = [\"Липки\",\"Лапки\",\"Пипки\"];\n    const dogovorsDataVector  = [\n        \"Договор проектирования\",\n        \"Договор поставки\",\n        \"Договор монтажа\",\n        \"Договор сервисного обслуживания\",\n        \"Договор субподряда\"\n    ];\n    const systemsDataVector = [\n        \"Вентиляция и кондиционирование\", \n        \"Отопление\",  \n        \"Котельная\",  \n        \"Водоснабжение и канализация\",  \n        \"ЭОМ\", \n        \"Слаботочные сети\",\n        \" Автоматизация\"\n    ];\n    const serversDataVector = [\"сервер один\", \"сервер два\"];\n    const clientDataVector = [\"организация\",\"ИП\",\"физ лицо\"];\n\n// ----------------------------------------------------------------------------------------------------------\n\n    const ObjectSelector = () => (\n        <label for=\"pet-select\"> выбери объект : <br/> \n        <select\n            value={objNameSel} \n            id=\"objNameSel\" \n            name=\"objNameSel\" \n            onChange={e =>updateSelection(e)}\n        >\n            <option value=\"\"> - - - - - - - - - - - - - - - </option>\n            {objectsDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n        </select><br/>\n        </label>\n    );\n    const DogovorSelector = () => (\n       <label for=\"pet-select\"> выбери тип договора : <br/>\n        <select\n            value={dogTypeSel} \n            id=\"dogTypeSel\" \n            name=\"dogTypeSel\" \n            onChange={e =>updateSelection(e)}\n        >\n            <option value=\"\"> - - - - - - - - - - - - - - - </option>\n            {dogovorsDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n        </select><br/> \n        </label>\n    );\n    const ServerSelector = () => (\n        <div>\n            <label for=\"pet-select\"> выбери тип сервера : </label><br/>\n            <select\n                value={servTypeSel} \n                id=\"servTypeSel\" \n                name=\"servTypeSel\" \n                onChange={e =>updateSelection(e)}\n            >\n                <option value=\"\"> - - - - - - - - - - - - - - - </option>\n                {serversDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n            </select><br/>\n        </div>\n    );\n\n    const ClientSelector = () => (\n        <div>\n           <label for=\"pet-select\"> выбери тип клиента : </label><br/>\n            <select\n                value={clientTypeSel} \n                id=\"clientTypeSel\" \n                name=\"clientTypeSel\" \n                onChange={e =>updateSelection(e)}\n            >\n                <option value=\"\"> - - - - - - - - - - - - - - - </option>\n                {clientDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n            </select><br/> \n        </div>\n    );\n    const SystemSelector = () => (\n        <div>\n            {systemsDataVector.map(e => \n                (<div>                    \n                <input\n                    checked={hub[`${e}`]}\n                    name={`${e}`}\n                    type=\"checkbox\"\n                    onChange={e =>updateHub(e)}\n                /><label>{`${e}`}</label>\n                </div>)\n             )}          \n        </div>\n    );\n    /*\n    const FormTab = _props => {\n        return (clientTypeSel===\"организация\"\n                    ? <FormOne/> \n                    : clientTypeSel===\"ИП\"\n                        ? <FormTwo/>\n                        : clientTypeSel===\"физ лицо\"\n                            ? <FormThree/> \n                            : \"тип контрагента не выбран\"\n            );\n    };\n    */\n    const [dataSent,setDataSent] = useState(false);\n    const Dogovors = () => (\n        <button type=\"button\" disabled=\"false\">\n            <Link \n                to=\"/dodoc/montaj\"\n                style={link}\n            >\n                CОЗДАТЬ ДОГОВОР\n            </Link>\n        </button>  \n    );\n \n     \n   \n//  OUTPUT COMPONENT ------------------------------------------\n\n    const Basic = () => (\n        <div>\n        <GlobalStyle/>\n        <Container>\n            <Grid>\n                 <AreaBox g={[2,2,6,4]} fd=\"column\" style={naked}>  \n                     <TextBox h={\"100%\"}>\n                         <Text m={\"2vmin\"}>\n\t    \t\t    ЧТО-ТО ТУТ ДОЛЖНО БЫТЬ,<br/>\n\t    \t\t    А ПОКА МОЖЕШЬ ПРОЙТИСЬ ПО МЕНЮ\n                         </Text>\n                     </TextBox>\n                    \n                 </AreaBox>\n                 <AreaBox g={[6,2,11,5]} fd=\"row\" style={naked}>\n                    <ParamBox>\n                        <TextBox h={\"100%\"}>\n                            <Text m={\"2vmin\"}>\n                            </Text>\n                        </TextBox>\n                    </ParamBox>\n                </AreaBox>\n            </Grid>\n        </Container>\n        </div>\n        );\n        return <Basic/>;\n}\n\nconst mapStateToProps = _state => ({\n    store: _state,\n    home: _state.home,\n    formData: _state.formDataNew,\n    dogovorData: _state.dogovorData\n});\nconst mapDispatchToProps = _dispatch => ({\n    onDogovorData: data => _dispatch(actions.dogovorData(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(Home);\n\n//export default Home;\n\n","\n    export const dogSampleData = {\n        name:\"Договор монтажа № 2020В07\",\n        start:\"06.04.2020\",\n        end:\"06.10.2020\",\n        money:[315000, \"(триста пятнадцать тысяч рублей 00 копеек)\"],\n        systems:[\"вентиляции, кондиционирования\"],\n    };\n\n    export const formOrgDataSample = {\n        compFullName:\"ORGПОЛНОЕ ИМЯ КОМАНИИ\",\n        compShortName: \"ORGКОРОТКОЕ ИМЯ КОМПАНИИ\",\n        FIO:\"ORGИМЯ ФАМИЛИЯ ОТЧЕСТВО\", \n        INN:\"ORGИНН\",\n        KPP:\"ORGКПП\",\n        OGRN:\"ORGОГРН\",\n        OKPO:\"ORGОКРО\",\n        GosRegDate:\"ORGДАТА ГОС РЕГИСТРАЦИИ\",\n        YurAdress:\"ORGЮРИДИЧЕСКИЙ АДРЕСС\",\n        FactAdress:\"ORGФАКТИЧЕСКИЙ АДРЕСС\",\n        GenDirector:\"ORGГЕН ДИРЕКТОР\",\n        Buhgalter:\"ORGБУХГАЛТЕР\",\n        tel:\"ORGТЕЛЕФОН\",\n        bankName:\"ORGИМЯ БАНКА\",\n        BIK:\"ORGБИК\",\n        BillOne:\"ORGРАСЧЁТНЫЙ СЧЁТ\",\n        BillTwo:\"ORGКОРРЕСПОНДЕНДТСКИЙ СЧЁТ\"\n    };\n    export const formIPDataSample = {\n        Name:\"IPИМЯ ИП\",\n        FIO:\"IPФИО\",\n        INN:\"IPИНН\",\n        OGRNIP:\"IPОГРНИП\",\n        OKPO:\"IPОКРО\",\n        FactAdress:\"IPФАКТИЧЕСКИЙ АДРЕСС\",\n        bankName:\"IPИМЯ БАНКА\",\n        BIK:\"IPБИК\",\n        BillOne:\"IPРАСЧЁТНЫЙ СЧЁТ\",\n        BillTwo:\"IPКОРЕСПОНДЕНТСКИЙ СЧЁТ\"\n    };\n    export const formFLDataSample = {\n        NameInformal:\"FLНЕФОРМАЛЬНОЕ ИМЯ\",\n        lastName:\"FLФАМИЛИЯ\",\n        firstName:\"FLИМЯ\",\n        midName:\"FLОТЧЕСТВО\",\n        docType:\"FLВИД ДОКУМЕНТА\",\n        Serial:\"FLСЕРИЯ\",\n        number:\"FLНОМЕР\",\n        whoGave:\"FLВЫДАН\",\n        whenGave:\"FLДАТА ВЫДАЧИ\",\n        codeGave:\"FLКОД ПОДРАЗДЕЛЕНИЯ\",\n        addressGave:\"FLГДЕ ВЫДАН\"\n    };\n\n    export const serverData = {\n        varOne:{\n            CompName:\"ИП Попов Александр Петрович\",\n            FIO:\"Попов Александр Петрович\",\n            INN: \"1111111111111111\",\n            OGRN: \"11111111111111111\",\n            yurAdress: \"111111 Россия Домодедово г., 1 кв-л, 11\", \n            bank: \"Сбербанк\",\n            BIK: \"1111111111111111\",\n            firstBill: \"111111111111111111111111\",\n            secondBill: \"1111111111111111111111111\"\n        },\n        varTwo:{\n            CompName:\"ЮРЛИЦО ДВА\",\n            FIO:\"Клопов Алексей Ветрович\",\n            INN: '222222222222',\n            OGRN: \"22222222222222222222\",\n            yurAdress: \"22222222 Россия Довобродово г., 222 кв-л, 222\", \n            bank: \"Сбедбанк\",\n            BIK: \"222222222\",\n            firstBill: \"222222222222222222222\",\n            secondBill: \"22222222222222222222222\"\n        },\n        \"-\":{\n            CompName:\"-\",\n            FIO:\"-\",\n            INN: '-',\n            OGRN: \"-\",\n            yurAdress: \"-\", \n            bank: \"-\",\n            BIK: \"-\",\n            firstBill: \"-\",\n            secondBill: \"-\"\n        }     \n    };\n \n"," export const ClientDataORG = _d => {\n            return {\n                compFullName:_d.compFullName,\n                compShortName:_d.compShortName,\n                FIO:_d.FIO, \n                INN:_d.INN,\n                KPP: _d.KPP,\n                OGRN:_d.OGRN,\n                OKPO:_d.OKPO,\n                GosRegDate:_d.GosRegDate,\n                YurAdress:_d.YurAdress,\n                FactAdress:_d.FactAdress,\n                GenDirector:_d.GenDirector,\n                Buhgalter:_d.Buhgalter,\n                tel:_d.tel,\n                bankName:_d.bankName,\n                BIK:_d.BIK,\n                BillOne:_d.BillOne,\n                BillTwo:_d.BillTwo\n            };\n        };\n        // IP data -----------------------------------------------------\n        export const ClientDataIP = _d => {\n            return {\n                Name:_d.Name,\n                FIO:_d.FIO,\n                INN:_d.INN,\n                OGRNIP:_d.OGRNIP,\n                OKPO:_d.OKPO,\n                FactAdress:_d.FactAdress,\n                bankName:_d.bankName,\n                BIK:_d.BIK,\n                BillOne:_d.BillOne,\n                BillTwo:_d.BillTwo\n           };\n        };\n        // FL data -------------------------------------------------------\n        export const ClientDataFL = _d => {\n            return {\n                NameInformal:_d.NameInformal,\n                lastName:_d.lastName,\n                firstName:_d.firstName,\n                midName:_d.midName,\n                docType:_d.docType,\n                Serial:_d.Serial,\n                number:_d.number,\n                whoGave:_d.whoGave,\n                whenGave:_d.whenGave,\n                codeGave:_d.codeGave,\n                addressGave:_d.addressGave\n            };\n        };\n","import React from 'react';\n\n//  HEADER ELEMENTS -------------------------------------\n    // Org -----------------------------------------------\n    export const OrgHeader = (_clientData,_serverData) => (\n        <div> {_serverData.CompName}, в лице \n            директора {_serverData.FIO}, \n            действующего на основании Устава, с одной \n            стороны, именуемое в дальнейшем {\"Поставщик\"}\n            и {_clientData.compFullName}, в лице\n            генерального директора {_clientData.\n            FIO}, действующего(ей) на основании Устава, именуемое в \n            дальнейшем «Покупатель»,\n        </div>\n     );\n    // IP ---------------------------------------------\n    export const IPHeader = (_clientData,_serverData) => (\n        <div>  {_serverData.CompName}, в лице директора  {_serverData.FIO},\n            действующего на основании Устава, с одной стороны, именуемое в\n            дальнейшем \"Поставщик\" и {_clientData.Name}, в лице генерального\n            директора {_clientData.FIO}, действующего(ей) на основании\n            Устава, именуемое в дальнейшем «Покупатель»,\n        </div>\n    );\n    // FL\n  export const FLHeader = (_clientData,_serverData) => (\n    <div> {_serverData.CompName}, в лице директора\n      {_serverData.FIO},  действующего на основании Устава, \n      с одной стороны, именуемое в дальнейшем \"Поставщик\" и\n      {_clientData.lastName} {_clientData.firstName}\n      {_clientData.midName}, {_clientData.lastName} серия\n      {_clientData.Serial} номер {_clientData.number}, выдан\n      {_clientData.whoGave} {_clientData.whenGave} код\n      подразделения {_clientData.codeGave}, именуемый(ая) в\n      дальнейшем «Покупатель»,\n    </div>\n  );\n    \n\n    // FOOTERS ------------------------------------------------\n\n        // Org ------------------------------------------------\n        export const ClientOrgFooter = (_clientData,_serverData) => (\n            <div>\n                Покупатель:{_clientData.compShortName}<br/>\n                ИНН: {_clientData.INN}<br/>\n                КПП: {_clientData.KPP}<br/>\n                ОГРН: {_clientData.OGRN}<br/>\n                Юр.адрес: {_clientData.YurAdress}<br/>\n                Факт.адрес: {_clientData.FactAdress}<br/>\n                Банк: {_clientData.bankName}<br/>\n                БИК: {_clientData.BIK}<br/>\n                р/с: {_clientData.BillOne}<br/>\n                к/с: {_clientData.BillTwo}<br/>\n                <br/>\n                подписи<br/>\n                <br/>\n                {_clientData.compShortName}<br/>\n                <br/>\n                _____________/инициалы(Ген. директор {_clientData.FIO})/<br/>\n                <br/>\n                место печати (м.п.)<br/>\n           </div>\n        );\n        \n        // IP ------------------------------------------------\n        export const ClientIPFooter = (_clientData,_serverData) => (\n            <div>\n                Покупатель: {_clientData.Name}<br/>\n                ИНН: {_clientData.INN}<br/>\n                ОГРНИП: {_clientData.OGRNIP}<br/>\n                Факт.адрес: {_clientData.FactAdress}<br/>\n                Банк: {_clientData.bankName}<br/>\n                БИК: {_clientData.BIK}<br/>\n                р/с: {_clientData.BillOne} <br/>\n                к/с: {_clientData.BillTwo}<br/>\n                <br/>\n                подписи<br/>\n                <br/>\n                {_clientData.Name}<br/>\n                <br/>\n                _____________/(инициалы {(_clientData.FIO)})/<br/>\n                <br/>\n                _______________________________________________________\n            </div>\n        );\n        // FL ----------------------------------------------------------------------------\n        export const ClientFLFooter = (_clientData,_serverData) => (\n            <div>\n                Покупатель:<br/>\n                {_clientData.lastName} {_clientData.firstName}\n                {_clientData.midName}<br/>\n                {_clientData.docType} серия {_clientData.Serial}<br/>\n                номер {_clientData.number}<br/>\n                выдан {_clientData.whoGave} {_clientData.whenGave} <br/>\n                код подразделения {_clientData.codeGave}<br/>\n                <br/>\n                подписи<br/>\n                <br/>\n                _____________/(инициалы {_clientData.lastName}\n                {_clientData.firstName} <br/>      \n                {_clientData.midName})/<br/>\n            </div>\n        );\n        export const ServerFooter = _serverData=> {\n            return {\n                varOne:(        \n                    <div>\n                        Имя Компании:{_serverData.CompName}<br/>\n                        ФИО:{_serverData.FIO}<br/>\n                        ИНН: {_serverData.INN}<br/>\n                        ОГРН: {_serverData.OGRN}<br/>\n                        Юридический адрес: {_serverData.yurAdress}<br/>\n                        Банк: {_serverData.bank}<br/>\n                        БИК: {_serverData.BIK}<br/>\n                        р/с: {_serverData.firstBill}<br/>\n                        к/c: {_serverData.secondBill}<br/>\n                    </div>),\n                varTwo:(\n                    <div>\n                        Имя Компании:{_serverData.CompName}<br/>\n                        ФИО:{_serverData.FIO}<br/>\n                        ИНН: {_serverData.INN}<br/>\n                        ОГРН: {_serverData.OGRN}<br/>\n                        Юридический адрес: {_serverData.yurAdress}<br/>\n                        Банк: {_serverData.bank}<br/>\n                        БИК: {_serverData.BIK}<br/>\n                        р/с: {_serverData.firstBill}<br/>\n                        к/c: {_serverData.secondBill}<br/>\n                    </div>),\n                };\n        };\n        \n  \n","    \nimport React from 'react';\nimport {\n    dogSampleData,\n    formOrgDataSample,\n    formIPDataSample,\n    formFLDataSample,\n    serverData\n    } \n    from \"./MontajSampleData\";\nimport {ClientDataORG,ClientDataIP,ClientDataFL} from '../FORMS/FormMap';\nimport {OrgHeader,IPHeader,FLHeader,ClientOrgFooter,ClientIPFooter,ClientFLFooter,ServerFooter} from '../WIP//HsFs';\nimport * as actions from '../../actions';\n//import store from '../store';\nimport {connect} from 'react-redux';\nimport assert from \"../../utils/assert\";\n\nconst HeadFootOut = ({store,selectors,formData}) => {\n\n\n\n    const DataMapper = () => {\n        const Cmap = {\n            \"организация\":\"ORG\",\n            \"ИП\":\"IP\",    \n            \"физ лицо\":\"FL\",\n            \"-\":\"-\"\n        };\n        const Smap = {\n            \"сервер один\":\"varOne\",\n            \"cервер два\":\"varTwo\",\n            \"-\":\"-\"        \n        };\n        const actualInput = {ct:selectors.clientTypeSel, cd:formData ,st:selectors.servTypeSel };\n        const defaultInput = {ct:\"FL\", cd:formFLDataSample ,st:\"varOne\"};\n        const input = (ai,di,cmap,smap) => {\n            const DefaultData = () => di;\n            const ActualData = () => {\n                return {\n                ct: cmap[ai.ct],\n                cd: ai.cd,\n                st: smap[ai.st]             \n                }\n            };\n            //return (ai.ct === ai.cd) ? DefaultData() : ActualData();\n            return (ai.ct === \"-\" && ai.cd === \"-\") ? DefaultData() : ActualData();\n        };/*\n        assert(\"Input is properly mapped to relevant object fields\",\n            input(\n                {ct:\"организация\", cd:\"actualTestData\" ,st:\"сервер один\"},\n                {ct:\"FL\", cd:\"defaultTestData\" ,st:\"varOne\"},\n                Cmap,\n                Smap),\n            {ct: \"ORG\",cd: \"actualTestData\",st: \"varOne\"}\n        );\n        */\n        return {\n            a : input(actualInput,defaultInput,Cmap,Smap).ct,\n            b : input(actualInput,defaultInput,Cmap,Smap).cd,\n            c : input(actualInput,defaultInput,Cmap,Smap).st\n        };\n    };\n\n    const a = DataMapper().a;\n    const b = DataMapper().b;\n    const c = DataMapper().c;\n    const d = serverData;\n\n    // 1 \n    const HFROuter = () => {\n        const ClientType = _clientType => _clientType; \n        // 2\n        const ClientData = (_clientType,_clientData) => {\n            const chooseData = {\n                ORG:_clientData => ClientDataORG(_clientData),\n                IP:_clientData => ClientDataIP(_clientData),\n                FL:_clientData => ClientDataFL(_clientData),\n                \"-\":_clientData => ClientDataFL(_clientData),\n            };\n            return chooseData[_clientType](_clientData);        \n        };\n        /*\n        assert(\"Data is properly mapped to local keys\",\n            ClientData(\"ORG\",\n                { compFullName:1, compShortName:2, FIO:3, INN:4, KPP:5, OGRN:6, OKPO:7, GosRegDate:8, YurAdress:9, \n                  FactAdress:10, GenDirector:11, Buhgalter:12, tel:13, bankName:14, BIK:15, BillOne:16, BillTwo:17 }        \n            ),\n            { compFullName:1, compShortName:2, FIO:3, INN:4, KPP:5, OGRN:6, OKPO:7, GosRegDate:8, YurAdress:9, \n              FactAdress:10, GenDirector:11, Buhgalter:12, tel:13, bankName:14, BIK:15, BillOne:16, BillTwo:17 }\n       );\n        */\n        const ServerData = (_serverType,_serverData) => {\n            return  _serverData[_serverType];\n        };\n        /*\n        assert(\"Relevant server data is returned by given key\",\n            ServerData(\"varOne\",{\"varOne\":\"VarOneData\",\"varTwo\":\"VarTwoData\"}),\n            \"VarOneData\"\n        );\n        */\n        console.log(\"hf return : \", {\n            ClientType:ClientType,\n            ClientData:ClientData,\n            ServerData:ServerData\n        });\n        return{\n            ClientType:ClientType,\n            ClientData:ClientData,\n            ServerData:ServerData\n        }\n    };\n\n    // 4\n    const DogData = _d => {\n        return {\n            name:_d.name,\n            start:_d.start,\n            end:_d.end,\n            money:_d.money,\n            systems:_d.systems \n        };\n    };\n        // INPUT:\n    const aa = HFROuter().ClientType(DataMapper().a);\n    const bb = HFROuter().ClientData(DataMapper().a,DataMapper().b);\n    const cc = HFROuter().ServerData(DataMapper().c,serverData);\n    const HeadFoot = (_a,_b,_c) => {\n        const HF = {\n            ORG: (_b,_c) => [OrgHeader(_b,_c),ClientOrgFooter(_b,_c),ServerFooter(_c)[c]],\n            IP:(_b,_c) => [IPHeader(_b,_c),ClientIPFooter(_b,_c),ServerFooter(_c)[c]],\n            FL:(_b,_c) => [FLHeader(_b,_c),ClientFLFooter(_b,_c),ServerFooter(_c)[c]],\n            \"-\":(_b,_c) => [FLHeader(_b,_c),ClientFLFooter(_b,_c),ServerFooter(_c)[c]]        \n        };\n        return HF[_a](_b,_c);\n    };\n    //const aa = ClientType(a);\n    //const bb = ClientData(a,b);\n    //const cc = ServerData(c,d);\n    return(\n        <div>\n            {console.log(\"{HeadFoot(aa,bb,cc)[0]} : \", HeadFoot(aa,bb,cc)[0])}\n            <div>{HeadFoot(aa,bb,cc)[0]}</div>\n            <hr/>\n            <div>{HeadFoot(aa,bb,cc)[1]}</div>\n            <hr/>\n            <div>{HeadFoot(aa,bb,cc)[2]}</div>           \n        </div>\n    );\n    };\n\n    const mapStateToProps = _state => ({\n        store: _state,\n        home: _state.home,\n        selectors: _state.dogovorData.selectors,\n        formData:_state.dogovorData.formData,\n        dogovorData: _state.dogovorData\n    });\n    const mapDispatchToProps = _dispatch => ({\n        onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(HeadFootOut);\n\n    \n","   \n    import React from 'react';\n    import MontajBody from \"./MontajBody\";\n    import {connect} from 'react-redux';\n    //import store from '../store';\n    import * as actions from '../../actions';\n    //import store from '../store';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../../css/style.js';\n    import HeadFootOut from \"./HeadFoot\";\n    import MontajDefault from \"./MontajDefault\";\n\n    const divStyle = {width:'75vw',wordWrap:'break-word',fontFamily:'Roboto Mono'};\n    const headStyle = {textAlign:'center'};\n \n    /*\n        objName : имя объекта\n        dogType: ->\n        systems: ->\n        dogName : имя договора\n        zakazchikName : имя заказчика -> ownerData\n        postavshikName : имя поставщика -> agentData\n        date : дата ->  date\n        bank : Сбербанк\n        price : цена -> price\n        status : статус\n        paid : оплачено\n        reponsible : ответственный\n        pdfScan : ссылка на скан договора\n        commebt : комментарий\n    */    \n\n\n    // HEADER COMPOSER -------------------------------------------------\n    //const MontajHead = _p => (\n    //    <div>{ setDogType(_p.serverType,_p.clientType).head }</div>\n    //);\n        const MontajHead = () => (\n\n            <HeadFootOut/>\n\n    );  \n    // FOOTER ELEMENTS --------------------------------------------------------\n\n    // FOOTER COMPOSER ----------------------------------------------\n\n\n    // \"varOne\", \"IP\", formData -> {header,footer}\n \n\n    //setDogType(\"varOne\",\"IP\",formIPDataSample);\n    //${setDogType(clientType,serverType,data).head}\n    //console.log(montaj(\"varOne\",\"IP\",formIPDataSample));\n    \n    // OUTPUT -----------------------------------------\n    const Montaj = ({store,dogovorData}) => (\n        <div>\n        <GlobalStyle/>\n        <Container>\n            <Grid>\n                 <AreaBox g={[3,2,11,5]} fd=\"row\" style={naked}>\n                    <ParamBox>\n                        <TextBox h={\"100%\"} w={\"80%\"}>\n                            <Text m={\"2vmin\"} style={divStyle}>\n                                {/*Object.keys(dogovorData.formData).map(e\n                                 =>(<div>{dogovorData.formData[e]}</div>))}<br/>*/}\n                                {/*JSON.stringify(dogovorData.selectors)*/}<br/>\n                                {/*JSON.stringify(dogovorData.formData)*/}<br/>\n                                {/*JSON.stringify(store.home)*/}\n                                <MontajHead />\n                                {/*<MontajFoot/>*/}\n                            </Text>\n                        </TextBox>\n                    </ParamBox>\n                </AreaBox>\n            </Grid>\n        </Container>\n        </div>\n    );\n\n    const mapStateToProps = _state => ({\n        store: _state,\n        dogovorData:_state.dogovorData\n        //home: _state.home,\n        //yurlitzas: _state.home.yurlitzas,\n        //dogovorTypes: _state.home.dogovorTypes,\n        //formOneData: _state.form.formOne,\n        //formTwoData: _state.form.formTwo,\n        //formThreeData: _state.form.formThree\n    });\n    //const mapDispatchToProps = _dispatch => ({\n    //    onYur: data => _dispatch(actions.yurlitso(data))\n    //});\n\n    export default connect (\n        mapStateToProps//,\n        //mapDispatchToProps\n    )(Montaj);\n\n    //export default Montaj;\n","\n    import React,{useState,useEffect} from 'react';\n    //import store from '../store';\n    import {connect} from 'react-redux';\n    import * as actions from '../../actions';\n    import {\n    dogSampleData,\n    formOrgDataSample,\n    formIPDataSample,\n    formFLDataSample,\n    serverData\n    } \n    from \"./MontajSampleData\";  \n    \n    const MontajDefault = ({dogovorData,onDogovorData}) => { \n            // INIT\n        const [selection, setSelection] = useState({\n            objNameSel:\"Lipki\",\n            dogTypeSel:\"PROJ\",\n            sysTypeSel:\"WHO KNOWS\",\n            servTypeSel:\"varTwo\",\n            clientTypeSel:\"IP\"    \n        });\n        const [formData,setFormData] = useState(formOrgDataSample);\n        const [hub,setHub] = useState({\"\":\"\"});\n        const output = {...dogovorData,selectors:{...selection,hub},formData:formData};\n        //useEffect(()=>onDogovorData(output));\n\n    return(null)\n    };\n\n    const mapStateToProps = _state => ({\n        //dogovorData: _state.dogovorData\n    });\n    const mapDispatchToProps = _dispatch => ({\n        onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(MontajDefault);\n\n    \n \n\n    \n","   \n    import React, {useState,useEffect} from 'react';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,\n        NavbarDropdown,NavbarDropdownContent,link\n    } from '../../css/style.js';\n    import FormOneSimp from \"../FORMS/FormOneSimp\";\n    import FormTwoSimp from \"../FORMS/FormTwoSimp\";\n    import FormThreeSimp from \"../FORMS/FormThreeSimp\";\n    import { Link } from 'react-router-dom';\n    import {connect} from 'react-redux';\n    import * as actions from '../../actions';\n    \n\n    const AddAgent = props => {\n        const pool = props.content.home.dogTypes;\n        const formSet = \n            {\n                YL:<FormOneSimp action={props.action}/>,\n                IP:<FormTwoSimp action={props.action}/>,\n                FL:<FormThreeSimp action={props.action}/>\n            };\n        const [select,setSelect] = useState(\"\");\n        console.log(\"select:\", select);\n        const [newdic,setNewdic] = useState(false);\n        return(\n            <div>\n                <button onClick={()=>setNewdic(!newdic)}>\n                  добавить агента\n                </button>\n                {newdic===false ? \"\" : \n                  <div>\n                    <select onChange={e => setSelect(e.target.value)}>\n                      <option value=\"-\">-------</option>\n                        {Object.entries(pool).map(e => <option value={e[0]}>{e[0]}</option>)}\n                    </select>\n                    {select===\"\" ? \"\" : \n                       <div> {formSet[select]} </div> \n                    }\n                  </div>\n                }\n            </div>\n        );\n    };\n    const Article = _props => {\n        const [fold,setFold] = useState(false);\n        const buttonHandler = () => setFold(!fold);\n        console.log(\"Article prtops: \", _props);\n        /*\n        \n        */\n        return (\n          <div>\n            <div>{_props.name}{\" \"}\n              <button onClick={buttonHandler}>\n                {fold === false ? \"open\" : \"close\"}\n              </button>  \n              {/*<button onClick={()=>console.log(_props.id)}>\n                <Link \n                  to={`/dodoc/dogdic/${_props.id}`}\n                   style={link}\n                >\n                watchme\n                </Link>\n              </button>*/}         \n            </div>\n              {fold === false ? \"\" : \n                <div>{_props.content}</div>\n              }<br/>\n          </div>        \n        );\n    };\n    const nameExtractor = _x => {\n        switch (_x.companyType){\n            case \"YL\" : return _x.compFullName;\n            case \"IP\" : return _x.FullName;\n            case \"FL\" : return _x.NameInformal;\n            default: return \"unknown\";              \n        };\n    };\n    const recordDiv = _x => Object.entries(_x).map(record => <div>{record[0]} : {record[1]}</div>);\n    const Agentdic = ({majorStore, store,onAgentDicSelection,onAgentDicCreation}) => (\n            <div>\n            <GlobalStyle/>\n            <Container>\n                <Grid>\n                    <AreaBox g={[2,2,10,5]} fd=\"row\" style={naked}> \n                        <TextBox w={\"80%\"}>\n                            <Text>\n                                <div>СПРАВОЧНИК НАШИХ КОНТРАГЕНТОВ:</div><br/>\n                                {console.log(\"store.dics: \", store.dics)}\n                                {store.dics.map(agent => \n                                    <Article \n                                        key={agent.id} \n                                        id={agent.id}\n                                        name={nameExtractor(agent.data)}\n                                        content={recordDiv(agent.data)} \n                                    />)\n                                } \n                             <AddAgent content={majorStore} action={onAgentDicCreation}/>\n                            </Text>\n                        </TextBox>             \n                    </AreaBox>\n                </Grid>\n            </Container>\n            </div>\n        );\n\n    const mapStateToProps = _state => ({\n        store: _state.agentDic,\n        majorStore: _state\n    });\n    const mapDispatchToProps = _dispatch => ({\n        onAgentDicSelection: data => _dispatch(actions.agentDicSelect(data)),\n        onAgentDicCreation: data => _dispatch(actions.agentDicCreate(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(Agentdic);\n\n    //export default Ownerdic;\n\n","import React from 'react';\nimport {Input} from '../../css/style.js';\n\nexport const ObjectSelect = ({importData,formData,updateFormData}) => (\n      <label> objName : \n        <select\n          id=\"objName\"\n          value= {formData.objName}\n          onChange={e => updateFormData(e)}\n          placeholder=\" objName \"\n          type=\"text\"\n          name=\"objName\"\n          required\n          maxlength=\"120\"\n        ><br/>\n        <option>------------</option>\n\t    {importData.objects.map(e => \n\t      <option value={e}>{e}</option>)}\n\t    </select><br/>\n      </label>\n    );\nexport const AgentSelect = ({importData,formData,updateFormData}) => (\n          <label> agentName :\n           <select\n             id=\"agentName\"\n             value= {formData.agentName}\n             onChange={e => updateFormData(e)}\n             name=\"agentName\"\n             required\n           >\n             <option>------------</option>\n             {importData.agents.map(e => <option value={e}>{e}</option>)}\n           </select><br/>\n         </label>   \n    );\nexport const OwnerSelect = ({importData,formData,updateFormData}) => (\n                 <label> ownerName :\n           <select\n             id=\"ownerName\"\n             value= {formData.ownerName}\n             onChange={e => updateFormData(e)}\n             placeholder=\" ownerName\"\n             name=\"ownerName\"\n             required\n             minlength=\"10\"\n             maxlength=\"10\"\n           >\n           <option>------------</option>\n           {importData.owners.map(e => <option value={e}>{e}</option>)}\n           </select><br/>\n         </label>\n    );\nexport const DogovorTypeSelect = ({importData,formData,updateFormData}) => (\n        <label> dogovorType : \n            <select\n              id=\"dogovorType\"\n              value= {formData.dogovorType}\n              onChange={e => updateFormData(e)}\n              placeholder=\" dogovorType \"\n              type=\"text\"\n              name=\"dogovorType\"\n              required\n              maxlength=\"120\"\n            ><br/>\n            <option>------------</option>\n\t        {importData.dogovorTypes.map(e => \n\t         <option value={e}>{e}</option>)}\n\t        </select><br/>\n          </label>\n    );\nexport const SystemsSelect = ({importData,formData,updateFormData}) => (\n        <label> systems :\n            {importData.systemsDataVector.map(e => \n                (<div>                    \n                    <input\n                        value={formData.systems}\n                        name=\"systems\"\n                        type=\"checkbox\"\n                        onChange={e => updateFormData(e)}\n                    /><label>{e}</label>\n                </div>)\n             )}<br/> \n        </label>\n    ); \nexport const PriceInput = ({formData,updateFormData}) => (\n                 <label> price : <br/>\n           <Input\n             id=\"price\"\n             value= {formData.price}\n             onChange={e => updateFormData(e)}\n             placeholder=\" price \"\n             type=\"text\"\n             name=\"price\"\n             required\n           /><br/>\n         </label>\n    );\nexport const SubmitButton = ({handleSubmit}) => (<button onClick={handleSubmit}>Submit</button>);\n","   \n  // FormDog.js\n  import React, {useState} from 'react';\n  import {Input} from '../../css/style.js';\n  import * as actions from '../../actions';\n  import {\n          ObjectSelect,\n          AgentSelect,\n          OwnerSelect,\n          DogovorTypeSelect, \n          SystemsSelect,\n          PriceInput,\n          SubmitButton  \n  } from './DogovorFormElements';\n  import BeautyText from \"../PRINT/BeautyText\";\n  import {connect} from 'react-redux';\n  import { Link } from 'react-router-dom';\n  import {\n      GlobalStyle,Container,Grid,AreaBox,Text,\n      TextBox,Button,ParamBox,naked,link\n  } from '../../css/style.js'\n\n  const FormDog = ({store,dogovorId,action}) => {\n\n    // IMPORTS ----------------------------------------------------------------    \n\n    const importData = {\n      dogovor: store.dogDic.filter(e => e.id===dogovorId)[0],\n      owners: store.ownerDic.map(owner => owner.name),\n      agents:  store.agentDic.map(agent => agent.name),\n      objects:  store.objDic.map(object => object.name),\n      systemsDataVector: store.home.systemsDataVector,\n      dogovorTypes: store.home.dogovorTypes,\n      initStateForNewDogovor: store.home.initStateForNewDogovor\n    };\n\n    // FORM STATE MANAGEMENT ----------------------------------------------------\n\n    const [formData, setFormData] = useState(\n        {...(dogovorId === undefined \n            ? {...importData.initStateForNewDogovor} \n            : importData.dogovor)\n        }\n    );\n    console.log(\"formData: \", formData);\n    const updateFormData = event => {\n        setFormData({\n            ...formData,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    // CALCULATED DATA FOR THE FORM --------------------------------------------\n\n    const Today = () => {\n        var today = new Date();\n        var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n        //return date;\n                return (formData.date===\"\" \n            ? date \n            : store.dogDic.filter(e => e.date===formData.date)[0].date\n        ); \n    };\n    //console.log(\"Today: \", Today());\n    const Id = () => {\n        return (typeof formData.id===\"number\" \n            ? formData.id \n            : store.dogDic[store.dogDic.length-1].id+1\n        );  \n    };\n    const Name = () => {\n        return (formData.name===\"\" \n            ? \"NAME\" \n            : store.dogDic.filter(e => e.name===formData.name)[0].name\n        ); \n    };\n    //console.log(\"ID count: \", Id());\n    const ObjectId = () => {\n        \n        return(//formData.objName ?\n            //formData.objName : \n            store.objDic.filter(e => e.name===formData.objName)[0].id);\n    };\n    console.log(\"objId in DormDog: \", formData.objId);\n    //console.log(\"ObjectId: \", ObjectId());\n    const AgentId = () => {\n        return store.agentDic.filter(e => e.name===formData.agentName)[0].id;\n        \n    };\n    //console.log(\"AfentId: \", AgentId());\n    const OwnerId = () => {\n        return store.ownerDic.filter(e => e.name===formData.ownerName)[0].id;  \n    };\n    //console.log(\"FormData: \", formData);\n    const handleSubmit = e => {\n        e.preventDefault();\n        action(formData);\n    };\n    const handleSaveCountedData =()=> setFormData({...formData,\n            id:Id(),\n            name:Name(),\n            date:Today(),\n            objId:ObjectId(),\n            agentId:AgentId(),\n            ownerId:OwnerId()\n        });\n    const SaveButton = () => {\n        return <button onClick={handleSaveCountedData}>Save</button>    \n    };\n    // FORM ELEMENTS ----------------------------------------------------------\n    \n\n    return (\n      <form><br/>\n          <ObjectSelect importData={importData} formData={formData} updateFormData={updateFormData}/>\n          <AgentSelect importData={importData} formData={formData} updateFormData={updateFormData}/>\n          <OwnerSelect importData={importData} formData={formData} updateFormData={updateFormData}/>\n          <DogovorTypeSelect importData={importData} formData={formData} updateFormData={updateFormData}/>\n          <SystemsSelect importData={importData} formData={formData} updateFormData={updateFormData}/>\n          <PriceInput formData={formData} updateFormData={updateFormData}/><br/>\n          <SubmitButton handleSubmit={handleSubmit}/>\n          <SaveButton/>\n      </form>\n    );\n  };\n  /*\n  const mapStateToProps = _state => ({\n    store: _state,\n    dogovorData: _state.dogovorData\n    //formOneState: _state.form.formOne\n  });\n  const mapDispatchToProps = _dispatch => ({\n    onDataReady: data => _dispatch(actions.formDataNew(data)),\n    onDogovorData: data => _dispatch(actions.dogovorData(data))\n  });\n\n  export default connect (\n    mapStateToProps,\n    mapDispatchToProps\n  )(FormOne);  \n  */\n  export default FormDog; \n\n    \n"," \n  // Dogovordics.js\n  import React, {useState,useEffect} from 'react';\n  import {\n    GlobalStyle,Container,Grid,AreaBox,Text,\n    TextBox,Button,ParamBox,naked,Input,\n    NavbarDropdown,NavbarDropdownContent,link\n  } from '../../css/style.js';\n  import FormDog from \"../FORMS/FormDog\";\n  import {connect} from 'react-redux';\n  import * as actions from '../../actions';\n  import { Link,useParams } from 'react-router-dom';\n\n  //  \n\n\n  const FoldButton = ({setValue,value,name}) => (\n    <button onClick={() => setValue(!value)}>\n      {value === false ? name[0] : name[1]}\n    </button> \n  );\n  const ShowButton = ({goto}) => (\n    <button>\n      <Link to={goto} style={link}>\n        show\n      </Link>\n    </button>\n  );\n  const BipolarButton = ({setValue,value,name}) => (\n    <button onClick={()=>setValue(!value)}>\n      {name}\n    </button>\n  );\n  const Article = ({store,id,rawData,name,createDogovor,updateDogovor}) => {\n    console.log(\"id in article : \", id);\n    const [fold,setFold] = useState(false);\n    const [edit,setEdit] = useState(false);\n    const [editable,setEditable] = useState(false);\n    return (\n      <div>\n        <div>{name}{\" \"}\n          <FoldButton setValue={setFold} value={fold} name={[\"open\",\"close\"]}/>\n          <ShowButton goto={`/dodoc/dogdic/${id}`}/>\n          <BipolarButton setValue={setEditable} value={editable} name={\"edit\"}/>\n        </div>\n            {fold === false ? \"\" : \n              <div>\n              \n                    {editable===true \n                      ? <FormDog\n                          action={updateDogovor}\n                          store={store}\n                          dogovorId={id}/>\n                      : Object.entries(rawData)\n                           .map(e => <div> {e[0]} : {e[1]} </div>)\n                    }\n            </div>}<br/>\n      </div>        \n    );\n  };\n\n\n  const Selector = ({content,createDogovor}) => {\n    console.log(\"onDogDicCreation in selector: \", createDogovor);\n    const [newdic,setNewdic] = useState(false);\n    return(\n      <div>\n        <button \n\t        onClick={()=>setNewdic(!newdic)}>добавить договор\n\t    </button>\n        {newdic===false ? \"\" : <FormDog store={content} action={createDogovor}/>}\n      </div>\n    );\n  };\n  \n  const Dogovordic = (\n    { majorStore, \n      store, \n      onDogDicSelection, \n      onDogDicCreation,\n      onDogDicUpdate\n    }) => (\n    <div>\n      <GlobalStyle/>\n      <Container>\n        <Grid>\n          <AreaBox g={[2,2,10,5]} fd=\"row\" style={naked}> \n            <TextBox w={\"80%\"}>\n              <Text>\n                <div>СПРАВОЧНИК НАШИХ ДОГОВОРОВ:</div><br/>\n                 {store.dogDic.map(dogovor => \n                        <Article\n                          createDogovor={onDogDicCreation}\n                          updateDogovor={onDogDicUpdate} \n                          \n                          key={dogovor.id} \n                          id={dogovor.id}\n                          name={dogovor.name}\n                          rawData={dogovor}\n                          store={majorStore}\n                          content={Object.entries(dogovor)\n                          \n\t                        .map(record => <div>{record[0]} : {record[1]}</div>)} \n                        />)} \n                 <Selector \n\t                content={majorStore} \n\t                createDogovor={onDogDicCreation}\n\t             />\n\n              </Text>\n            </TextBox>             \n          </AreaBox>\n        </Grid>\n      </Container>\n    </div>\n  );\n\n  const mapStateToProps = _state => ({\n    store: _state,\n    majorStore: _state\n  });\n  const mapDispatchToProps = _dispatch => ({\n    onDogDicSelection: data => _dispatch(actions.dogDicSelect(data)),\n    onDogDicCreation: data => _dispatch(actions.dogDicCreate(data)),\n    onDogDicUpdate: data => _dispatch(actions.dogDicUpdate(data))\n  });\n\n  export default connect (\n    mapStateToProps,\n    mapDispatchToProps\n  )(Dogovordic);\n\n  //export default Ownerdic;\n\n","   \n  // FormObj.js\n  import React, {useState} from 'react';\n  import {Input} from '../../css/style.js';\n  import * as actions from '../../actions';\n  import BeautyText from \"../PRINT/BeautyText\";\n  import {connect} from 'react-redux';\n  import { Link } from 'react-router-dom';\n  import {\n    GlobalStyle,Container,Grid,AreaBox,Text,\n    TextBox,Button,ParamBox,naked,link\n  } from '../../css/style.js'\n\n  const FormObj = _props => {\n    const [formData, setFormData] = useState({\n      name: \"\",\n      adress: \"\",\n      contacts: \"\",\n      workRegime:\"\"\n    });\n    const updateFormData = event => {\n      setFormData({\n        ...formData,\n        [event.target.name]: event.target.value\n      });\n    };\n    const \n      { name,\n        adress,\n        contacts,\n        workRegime,\n      } = formData;\n    const handleSubmit = e => {\n      e.preventDefault();\n      _props.action(formData);\n    };\n    return (\n      <form>\n        <br/>\n          <label> name <br/>\n            <Input\n              id=\"name\"\n              value= {name}\n              onChange={e => updateFormData(e)}\n              placeholder=\" name\"\n              type=\"text\"\n              name=\"name\"\n              required\n              maxlength=\"120\"\n            /><br/>\n          </label>\n          <label> adress: <br/>\n            <Input\n              id=\"adress\"\n              value= {adress}\n              onChange={e => updateFormData(e)}\n              placeholder=\" adress \"\n              type=\"text\"\n              name=\"adress\"\n              required\n              maxlength=\"120\"\n            /><br/>\n          </label>\n\t <label> Contact: <br/>\n            <Input\n              id=\"contacts\"\n              value= {contacts}\n              onChange={e => updateFormData(e)}\n              placeholder=\" FIO role ?contacts \"\n              type=\"text\"\n              name=\"contacts\"\n              required\n              maxlength=\"120\"\n            /><br/>\n          </label>\n\n          <label> workRegime : <br/>\n            <Input\n              id=\"workRegime\"\n              value= {workRegime}\n              onChange={e => updateFormData(e)}\n              placeholder=\" workRegime \"\n              type=\"number\"\n              name=\"workRegime\"\n              required\n              minlength=\"8\"\n              maxlength=\"8\"\n            /><br/>\n          </label>\n          <button onClick={handleSubmit}>Submit</button>\n        </form>\n      );\n    };\n    /*\n  const mapStateToProps = _state => ({\n    store: _state,\n    dogovorData: _state.dogovorData\n    //formOneState: _state.form.formOne\n  });\n  const mapDispatchToProps = _dispatch => ({\n    onDataReady: data => _dispatch(actions.formDataNew(data)),\n    onDogovorData: data => _dispatch(actions.dogovorData(data))\n  });\n  export default connect (\n    mapStateToProps,\n    mapDispatchToProps\n  )(FormOne);  \n  */\n  export default FormObj; \n","  \n  // Objectdic.js\n  import React, {useState,useEffect} from 'react';\n  import {\n    GlobalStyle,Container,Grid,AreaBox,Text,\n    TextBox,Button,ParamBox,naked,\n    NavbarDropdown,NavbarDropdownContent,link\n  } from '../../css/style.js';\n  import FormObj from \"../FORMS/FormObj\";\n  import {connect} from 'react-redux';\n  import * as actions from '../../actions';\n\n  const Selector = props => {\n    const pool = props.content.home.dogTypes;\n    const formSet = <FormObj action={props.action}/>\n    const [select,setSelect] = useState(\"\");\n    //console.log(\"select:\", select);\n    const [newdic,setNewdic] = useState(false);\n    return(\n      <div>\n       <button \n         onClick={()=>setNewdic(!newdic)}\n       >\n         добавить объект\n       </button>\n         {newdic===false ? \"\" : formSet}\n       </div>\n    );\n  };\n  const Article = _props => {\n    const [fold,setFold] = useState(false);\n    const buttonHandler = () => setFold(!fold);\n    return (\n      <div>\n        <div>{_props.name}{\" \"}\n          <button \n            onClick={buttonHandler}\n\t  >\n\t\t        {fold === false ? \"open\" : \"close\"}\n\t\t    </button>            \n                </div>\n                {fold === false ? \"\" : <div>{_props.content}</div>}\n                <br/>\n            </div>        \n        );\n    }\n    const Objectdic =( \n      { majorStore, \n        store,\n        onObjDicSelection,\n        onObjDicCreation}) => (\n          <div>\n          <GlobalStyle/>\n            <Container>\n              <Grid>\n                <AreaBox g={[2,2,10,5]} fd=\"row\" style={naked}> \n                  <TextBox w={\"80%\"}>\n                    <Text>\n                      <div>СПРАВОЧНИК НАШИХ ОБЪЕКТОВ:</div><br/>\n                      {store.objDic.map(object => \n                        <Article \n                          key={object.id} \n                          name={object.name}\n                          content={Object.entries(object)\n\t                        .map(record => <div>{record[0]} : {record[1]}</div>)} \n                        />)} \n                      <Selector \n\t\t                content={majorStore} \n\t\t                action={onObjDicCreation}/>\n                    </Text>\n                  </TextBox>             \n                </AreaBox>\n              </Grid>\n            </Container>\n          </div>\n        );\n\n  const mapStateToProps = _state => ({\n    store: _state,\n    majorStore: _state\n  });\n  const mapDispatchToProps = _dispatch => ({\n    onObjDicSelection: data => _dispatch(actions.objDicSelect(data)),\n    onObjDicCreation: data => _dispatch(actions.objDicCreate(data))\n  });\n\n  export default connect (\n    mapStateToProps,\n    mapDispatchToProps\n  )(Objectdic);\n\n  //export default Ownerdic;\n\n","   \n    import React, {useState,useEffect} from 'react';\n    import { Link,useParams } from 'react-router-dom';\n    import {connect} from 'react-redux';\n    import assert from '../utils/assert';\n    import {\n      GlobalStyle,Container,Grid,AreaBox,Text,\n      TextBox,Button,ParamBox,naked,\n      NavbarDropdown,NavbarDropdownContent,link\n    } from '../css/style.js';\n    const makeDogovorHeadIO = require\n      ('../NOTEBOOK/Doghead/makeDogovorHeadIO');\n    //const dogfoot = require('../NOTEBOOK/Dogfoot/footOut');\n    const dicData = (_state,_dicName,_id) => _state[_dicName].dics.filter(e => e.id===_id)[0].data\n\n    const Dogovor = ({state,store}) => {\n//    console.log(\"state in dogovor: \", state);\n      let {dogovor} = useParams();\n//  Get proper dogovor data\n    //const dicData = (_dicName, _id) => \n    \n    console.log(\"makeDogovorHeadIO:\", makeDogovorHeadIO(state,dogovor));\n\n      return(\n        <div onLoad={console.log(`dogovorId: ${dogovor}`)}>\n        <GlobalStyle/>\n        <Container>\n          <Grid>\n            <AreaBox g={[2,2,11,5]} fd=\"column\" style={naked}>\n              <TextBox h={\"100%\"} w={\"auto%\"}>\n                <Text m={\"2vmin\"}>\n                  <div>\n                   {/*{dogHeadOut}*/}\n                  </div>\n                  <div>makeDogovorHeadIO<br/>\n                    {makeDogovorHeadIO(state,dogovor)}\n                  </div>\n\n                  <div><br/>\n\n                  </div>\n                </Text>\n              </TextBox>\n            </AreaBox>\n          </Grid>\n        </Container>\n        </div>\n      )\n    };\n\n\n  const mapStateToProps = _state => ({\n    state: _state,\n    store: _state.dogDic.dics,\n    //dic: _state.dogDic.dics,\n    //owner: _state.ownerDic,\n    //agent: _state.agentDic,\n    //home: _state.home,\n    //formData: _state.formDataNew,\n    //dogovorData: _state.dogovorData\n  });\n  const mapDispatchToProps = _dispatch => ({\n    //onDogovorData: data => _dispatch(actions.dogovorData(data)),\n    //onLoad: data => _dispatch(actions.setCurrentDogovor(data))\n  });\n\n  export default connect (\n    mapStateToProps,\n    mapDispatchToProps\n  )(Dogovor);\n\n  //export default Dogovor;\n\n","import React from 'react';\nimport { Route, Switch,BrowserRouter as Router,Link } from 'react-router-dom';\nimport Home from './components/Home';\nimport Montaj from './components/MONTAJ/Montaj';\nimport Ownerdic from './components/DICTIONARIES/Ownerdic';\nimport Agentdic from './components/DICTIONARIES/Agentdic';\nimport Dogovordic from './components/DICTIONARIES/Dogovordic';\nimport Objectdic from './components/DICTIONARIES/Objectdic';\nimport Dogovor from './components/Dogovor';\n\nfunction App() {\n  return (\n    <main className=\"container\" >\n            <Router>\n              <div>\n                <ul>\n                  <li>\n                    <Link to=\"/dodoc\">home</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/dodoc/ownerdic\">owners</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/dodoc/agentdic\">agents</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/dodoc/objdic\">objects</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/dodoc/dogdic\">dogovors</Link>\n                  </li>\n                </ul>\n                <hr/>\n            <Switch id=\"main\">\n                <Route exact path=\"/dodoc/\" \n                    component={Home} />\n                <Route exact path=\"/dodoc/ownerdic\" \n                    component={Ownerdic} />\n                <Route exact path=\"/dodoc/agentdic\" \n                    component={Agentdic} />\n                <Route exact path=\"/dodoc/dogdic\" \n                    component={Dogovordic} />\n                <Route exact path=\"/dodoc/objdic\" \n                    component={Objectdic} />\n                <Route exact path=\"/dodoc/dogdic/:dogovor\"\n                    component={Dogovor}/>\n                <Route exact path=\"/dodoc/montaj\" \n                    component={Montaj} />           \n            </Switch>\n           </div>\n        </Router>\n    </main>\n  );\n}\n\nexport default App;\n","import {createStore} from 'redux';\nimport reducer from './reducers'; \n\nconst store = createStore(reducer);\nconsole.log(\"store while initialise in index.js : \", store.getState());\n\nexport default store;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport reducer from './reducers'; \nimport App from './App';\nimport store from './store';\n\n//const store = createStore(reducer);\n//console.log(\"store while initialise in index.js : \", //store.getState());\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nif (window.Cypress) {\n    window.store = store;\n}\n","\n    const assert = (_statement,_function,_positiveOutcome) => {\n        return(\n                JSON.stringify(_function) === JSON.stringify(_positiveOutcome) \n                ? console.log(`YES! ${_statement}, ooph!`) \n                : console.log(`NOPE! ${_statement} works WRONG!!!`)\n        );\n    };\n\n    //export {assert};\n    module.exports = assert;\n"],"sourceRoot":""}