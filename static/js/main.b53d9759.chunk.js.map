{"version":3,"sources":["reducers/home.js","state.js","reducers/index.js","constants/actionTypes.js","css/style.js","components/FormOne.js","components/FormTwo.js","components/FormThree.js","components/Home.js","components/datavector.js","actions/index.js","App.js","index.js"],"names":["initialState","window","Cypress","hello","yurlitzas","dogovorTypes","currentVars","varDialects","basic","make","sell","rootReducer","combineReducers","home","state","action","type","yurlitso","payload","dogovorType","GlobalStyle","createGlobalStyle","Container","styled","div","Grid","AreaBox","p","fd","g","ParamBox","w","h","Text","m","TextBox","img","Input","input","b","FormOne","useState","compFullName","compShortName","INN","KPP","OGRN","OKPO","GosRegDate","YurAdress","FactAdress","GenDirector","Buhgalter","tel","bankName","BIK","BillOne","BillTwo","formData","setFormData","updateFormData","event","target","name","value","FormReport","id","onChange","e","placeholder","required","onClick","preventDefault","console","log","FormTwo","Name","FIO","OGRNIP","FormThree","NameInformal","lastName","firstName","midName","docType","Serial","number","whoGave","whenGave","codeGave","addressGave","inData","main","connect","_state","store","dialects","_dispatch","onYur","data","_yurlitso","setYurlitso","dogType","setDogType","zakazchik","setZakazchik","Elem","_props","set","YurTab","map","DogTab","DialTab","zakTypes","Zakazchik","App","class","exact","path","component","Home","createStore","reducer","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b53d9759.chunk.js","sourcesContent":["import {state} from '../state.js';\nimport {\n    YURLITSO,\n    DOGOVOR_TYPE,\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case YURLITSO:\n            return { yurlitso: action.payload };\n        case DOGOVOR_TYPE:\n            return { dogovorType: action.payload };\n        default:        \n            return state;\n    }\n    return state;\n};\n\n","const state = \n{\n    hello:\"hello\",\n    yurlitzas: [ \"Добровент\", \"Доброклад\", \"Доброход\" ],\n    dogovorTypes:[\"проектирование\",\"поставка\"],\n    currentVars:\n    [\n        \"ourCompanyName\",\n        \"ourDirectorName\",\n        \"theirCompanyName\",\n        \"theirDirectorName\"\n    ],\n    varDialects:\n    {\n        basic:\n        [\n            \"имя нашей компании\",\n            \"имя директора нашей компании\",\n            \"имя их компании\",\n            \"имя директора их компании\"\n        ],\n        make:\n        [\n            \"имя подрядчика\",\n            \"имя директора подрядчика\",\n            \"имя звквзчика\",\n            \"имя директора заказчика\"\n        ],\n        sell:\n        [\n          \"имя поставщик\",\n          \"имя директора поставщика\",\n          \"имя покупателя\",\n          \"имя директора покупателя\"\n        ]\n      \n    }\n};\n\nexport {state};\n","import {combineReducers} from 'redux';\nimport home from './home';\n\nconst rootReducer = combineReducers({\n    home\n});\n\nexport default rootReducer;\n","export const YURLITSO = \"YURLITSO\";\nexport const DOGOVOR_TYPE = \"DOGOVOR_TYPE\";\nexport const VARIABLE = \"VARIABLE\";\n","import styled from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0px;\n    background:white;\n  }\n`;\nconst Container = styled.div`\n    width:100vw;\n    height:100vh;\n`; \nconst Grid = styled.div`\n    display:grid;\n    grid-template-columns: 5% repeat(3,30%) 5%;\n    grid-template-rows: 2.5vh repeat(8,11.9%) 2.5vh;\n    width:100%;\n    height:100%;\n    background:white;\n`;\nconst AreaBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"column\"};\n    grid-area:${p=> p.g[0]+\"/\"+p.g[1]+\"/\"+p.g[2]+\"/\"+p.g[3]};\n    justify-content:center;\n    align-items:center;\n    //border:0.5px solid black;\n    padding:0px;\n    overflow-wrap:normal;\n    background:White;\n`;\nconst ParamBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"row\"};\n    width:${p => p.w || '100%'};\n    height:${p => p.h || '100%'};\n    justify-content:center;\n    align-items:center;\n    overflow-wrap:normal;\n    //overflow:scroll;\n`;\nconst Text = styled.div`\n    margin:${p => p.m};\n`;\nconst Button = styled.div`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    margin:1vmin;\n    padding:5vmin;\n    width:50vw;\n    border:0.5vmin solid DarkSlateGrey;    \n`;\nconst Img = styled.img`\n    width:auto;\n    height:80%;\n`;\nconst TextBox = styled(ParamBox)`\n    display:flex;\n    flex-wrap:wrap;\n    width:100%;\n    height:${p => p.h || \"66%\"};\n    justify-content:flex-start;\n    align-items:flex-start;\n    font-size:1rem;\n    padding:7vmin;\n    overflow:scroll;\n`;\nconst Input = styled.input`\n    color: black;\n    border: 1px solid darkGrey;\n    margin: 0 0 5px 0;\n    width: 300%;\n    background-color: lightGrey;\n        \n    &:hover & {\n        background-color: white;\n        box-shadow: 0px 4px 20px 0px rgba(0, 0, 0, 0.05);\n    }\n\n`\n\nconst Selectable = styled.b`\n    &:hover {\n        background-color: yellow;\n    }\n`\nconst link = {\n  'color': 'black',\n  'text-decoration': 'none'\n};\nconst ghost = {\n  'color': 'grey',\n  'opacity': '50%'\n};\nconst naked = {\n  'border': '0px',\n};\n\nexport {\n    GlobalStyle,Container,Grid,AreaBox,ParamBox,TextBox,Input,Text,Button,Img,link,naked,Selectable,ghost\n}\n","   \n    import React, {useState} from 'react';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Input,Button,link,naked,Selectable,ghost\n    } from '../css/style.js';\n    import * as actions from '../actions';\n\n    const FormOne = () => {\n        const [formData, setFormData] = useState({\n            compFullName: \"\",\n            compShortName: \"\",\n            INN: \"\",\n            KPP:\"\",\n            OGRN:\"\",\n            OKPO:\"\",\n            GosRegDate:\"\",\n            YurAdress:\"\",\n            FactAdress:\"\",\n            GenDirector:\"\",\n            Buhgalter:\"\",\n            tel:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            compFullName, \n            compShortName,\n            INN,\n            KPP,\n            OGRN,\n            OKPO,\n            GosRegDate,\n            YurAdress,\n            FactAdress,\n            GenDirector,\n            Buhgalter,\n            tel,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            console.log(\"formData after submit: \", formData);\n        };\n    const FormReport = () => (\n        <Text m={\"2vmin\"}>\n            <div>\n                {\"FORM REPORT: coming soon\"}\n            </div>\n        </Text>\n      \n    );\n    return (\n        <form>\n            <br/>\n                <label> Полное название организации : <br/>\n                    <Input\n                        id=\"compFullName\"\n                        value= {compFullName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Полное название организации \"\n                        type=\"text\"\n                        name=\"compFullName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Краткое название организации : <br/>\n                    <Input\n                        id=\"compShortName\"\n                        value= {compShortName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Краткое название организации \"\n                        type=\"text\"\n                        name=\"compShortName\"\n                        required\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"text\"\n                        name=\"INN\"\n                        required\n                    /><br/>\n               </label>\n               <label> КПП : <br/>\n                    <Input\n                        id=\"KPP\"\n                        value= {KPP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" КПП \"\n                        type=\"text\"\n                        name=\"KPP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРН : <br/>\n                    <Input\n                        id=\"OGRN\"\n                        value= {OGRN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРН \"\n                        type=\"text\"\n                        name=\"OGRN\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"text\"\n                        name=\"OKPO\"\n                        required\n                    /><br/>\n               </label>\n               <label> Дата государственной регистрации : <br/>\n                    <Input\n                        id=\"GosRegDate\"\n                        value= {GosRegDate}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Дата государственной регистрации \"\n                        type=\"text\"\n                        name=\"GosRegDate\"\n                        required\n                    /><br/>\n               </label>\n               <label> Юридический адрес : <br/>\n                    <Input\n                        id=\"YurAdress\"\n                        value= {YurAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Юридический адрес \"\n                        type=\"text\"\n                        name=\"YurAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Ген. директор (ФИО) : <br/>\n                    <Input\n                        id=\"GenDirector\"\n                        value= {GenDirector}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Ген. директор (ФИО) \"\n                        type=\"text\"\n                        name=\"GenDirector\"\n                        required\n                    /><br/>\n               </label>\n               <label> Бухгалтер (ФИО) : <br/>\n                    <Input\n                        id=\"Buhgalter\"\n                        value= {Buhgalter}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Бухгалтер (ФИО) \"\n                        type=\"text\"\n                        name=\"Buhgalter\"\n                        required\n                    /><br/>\n               </label>\n               <label> телефон : <br/>\n                    <Input\n                        id=\"tel\"\n                        value= {tel}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" телефон \"\n                        type=\"text\"\n                        name=\"tel\"\n                        required\n                    /><br/>\n               </label><br/>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n          <div>\n            <Text>\n                <FormReport/>\n            </Text>\n          </div>\n        \n        </form>\n    );\n    };\n\n        \n    export default FormOne;\n","   \n    import React, {useState} from 'react';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Input,Button,link,naked,Selectable,ghost\n    } from '../css/style.js';\n    import * as actions from '../actions';\n\n    const FormTwo = () => {\n        const [formData, setFormData] = useState({\n            Name: \"\",\n            FIO: \"\",\n            INN: \"\",\n            OGRNIP:\"\",\n            OKPO:\"\",\n            FactAdress:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            Name, \n            FIO,\n            INN,\n            OGRNIP,\n            OKPO,\n            FactAdress,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            console.log(\"formData after submit: \", formData);\n        };\n    const FormReport = () => (\n        <Text m={\"2vmin\"}>\n            <div>\n                {\"FORM REPORT: coming soon\"}\n            </div>\n        </Text>\n      \n    );\n    return (\n        <form>\n            <br/>\n                <label> Название : <br/>\n                    <Input\n                        id=\"Name\"\n                        value= {Name}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название \"\n                        type=\"text\"\n                        name=\"Name\"\n                        required\n                    /><br/>\n               </label>\n               <label> ФИО : <br/>\n                    <Input\n                        id=\"FIO\"\n                        value= {FIO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ФИО \"\n                        type=\"text\"\n                        name=\"FIO\"\n                        required\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"text\"\n                        name=\"INN\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРНИП : <br/>\n                    <Input\n                        id=\"OGRNIP\"\n                        value= {OGRNIP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРНИП \"\n                        type=\"text\"\n                        name=\"OGRNIP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"text\"\n                        name=\"OKPO\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n          <div>\n            <Text>\n                <FormReport/>\n            </Text>\n          </div>\n        \n        </form>\n    );\n    };\n\n        \n    export default FormTwo;\n","   \n    import React, {useState} from 'react';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Input,Button,link,naked,Selectable,ghost\n    } from '../css/style.js';\n    import * as actions from '../actions';\n/*\n1. Название (то, как будет отображаться контакт в системе, неформальное название)\n2. Фамилия\n3. Имя\n4. Отчество\n5. Вид документа (чаще всего паспорт, но может быть загранник, военный билет)\n6. Серия\n7. Номер\n8. Кем выдан\n9. Дата выдачи\n10. Код подразделения\n11. Адрес прописки\n*/\n    const FormThree = () => {\n        const [formData, setFormData] = useState({\n            NameInformal: \"\",\n            lastName: \"\",\n            firstName: \"\",\n            midName:\"\",\n            docType:\"\",\n            Serial:\"\",\n            number:\"\",\n            whoGave:\"\",\n            whenGave:\"\",\n            codeGave:\"\",\n            addressGave:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            NameInformal, \n            lastName,\n            firstName,\n            midName,\n            docType,\n            Serial,\n            number,\n            whoGave,\n            whenGave,\n            codeGave,\n            addressGave\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            console.log(\"formData after submit: \", formData);\n        };\n    const FormReport = () => (\n        <Text m={\"2vmin\"}>\n            <div>\n                {\"FORM REPORT: coming soon\"}\n            </div>\n        </Text>\n      \n    );\n    return (\n        <form>\n            <br/>\n                <label> Название (неформальное) : <br/>\n                    <Input\n                        id=\"NameInformal\"\n                        value= {NameInformal}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название (неформальное) \"\n                        type=\"text\"\n                        name=\"NameInformal\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фамилия : <br/>\n                    <Input\n                        id=\"lastName\"\n                        value= {lastName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фамилия \"\n                        type=\"text\"\n                        name=\"lastName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Имя : <br/>\n                    <Input\n                        id=\"firstName\"\n                        value= {firstName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Имя \"\n                        type=\"text\"\n                        name=\"firstName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Отчество : <br/>\n                    <Input\n                        id=\"midName\"\n                        value= {midName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Отчество \"\n                        type=\"text\"\n                        name=\"midName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Вид документа : <br/>\n                    <Input\n                        id=\"docType\"\n                        value= {docType}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Вид документа \"\n                        type=\"text\"\n                        name=\"docType\"\n                        required\n                    /><br/>\n               </label>\n               <label> Серия : <br/>\n                    <Input\n                        id=\"Serial\"\n                        value= {Serial}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Серия \"\n                        type=\"text\"\n                        name=\"Serial\"\n                        required\n                    /><br/>\n               </label>\n               <label> Номер : <br/>\n                   <Input\n                       id=\"number\"\n                       value= {number}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Номер \"\n                       type=\"text\"\n                       name=\"number\"\n                       required\n                   /><br/>\n               </label>\n               <label> Кем выдан : <br/>\n                   <Input\n                       id=\"whoGave\"\n                       value= {whoGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Кем выдан \"\n                       type=\"text\"\n                       name=\"whoGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Дата выдачи : <br/>\n                   <Input\n                       id=\"whenGave\"\n                       value= {whenGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Дата выдачи \"\n                       type=\"text\"\n                       name=\"whenGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Код подразделения : <br/>\n                   <Input\n                       id=\"codeGave\"\n                       value= {codeGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Код подразделени \"\n                       type=\"text\"\n                       name=\"codeGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Адрес прописки : <br/>\n                   <Input\n                       id=\"addressGave\"\n                       value= {addressGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Адрес прописки \"\n                       type=\"text\"\n                       name=\"addressGave\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n          <div>\n            <Text>\n                <FormReport/>\n            </Text>\n          </div>\n        \n        </form>\n    );\n    };\n\n        \n    export default FormThree;\n","import React, {useState, useEffect} from 'react';\nimport {\n    GlobalStyle,Container,Grid,AreaBox,Text,\n    TextBox,Input,Button,link,naked,Selectable,ghost\n} from '../css/style.js';\nimport * as actions from '../actions';\nimport {connect} from 'react-redux';\nimport { useForm } from \"react-hook-form\";\nimport * as data from \"./datavector\";\nimport FormOne from \"./FormOne\";\nimport FormTwo from \"./FormTwo\";\nimport FormThree from \"./FormThree\";\nconst inData = data.datavectorOne;\nconsole.log(\"inData : \", inData);\n\n\n\nconst Home = ({store,home,yurlitzas,dogovorTypes,dialects,onYur}) => { \n\n    const [yurlitso,setYurlitso] = useState(\"unknown\");\n    const [dogType,setDogType] = useState(\"unknown\");\n    const [outerdata,setOuterdata] = useState(\"formDataDefault\");\n    const [zakazchik,setZakazchik] = useState(\"unknown\");\n    \n    \n    \n    const Elem = _props => {\n        const handleClick = () => {\n            console.log(\"data : \", _props.data);\n            _props.set(_props.data);\n        };\n        return (<b onClick={handleClick}>{_props.data}{\" | \"}</b>\n    )};\n    const YurTab = () => (\n        <Text m={\"2vmin\"}>\n            <div id=\"yurfacesPanel\">\n                ЮРЛИЦО: <b>{yurlitso}</b> <br/>\n                {yurlitzas.map(e => <Elem data={e} set={setYurlitso}/>)}<br/>  \n            </div>\n        </Text>\n    ); \n    const DogTab = () => (\n        <Text m={\"2vmin\"}>\n            <div id=\"contractTypesPanel\">\n                ТИП ДОГОВОРА: <b>{dogType}</b> <br/>\n                {dogovorTypes.map(e => <Elem data={e} set={setDogType}/>)}<br/>  \n            </div>\n        </Text>\n    );\n    const DialTab = () => {\n        //console.log(\"dialects : \", dialects);\n        let current = () => {\n            return ((dogType == \"проектирование\") ? [...dialects.make] :\n                (dogType == \"поставка\") ? [...dialects.sell] :\n                dialects.basic\n            );\n        };\n        //console.log(\"current : \", current());\n        return (\n            <Text m={\"2vmin\"}>\n                <div id=\"varsPanel\">\n                    НАБОР ПЕРЕМЕННЫХ: <b>{dogType}</b> <br/>\n                    {current().map(e => <b>{e}{\" | \"}</b>)}\n                </div>\n            </Text>\n    )};\n\n    const zakTypes = [\"организация\",\"ИП\",\"физическое лицо\"];\n    const Zakazchik = () => (\n        <Text m={\"2vmin\"}>\n            <div id=\"zakazchik\">\n                ТИП ЗАКАЗЧИКА: <b>{zakazchik}</b> <br/>\n                {zakTypes.map(e => <Elem data={e} set={setZakazchik}/>)}<br/>  \n            </div>\n        </Text>        \n    );\n\n  return (\n    <div>\n        <GlobalStyle/>\n        <Container>\n            <Grid>\n                <AreaBox g={[2,2,5,5]} fd=\"row\">\n                    <TextBox h={\"100%\"}>\n                        <Text m={\"2vmin\"}>\n                            <YurTab/>\n                            <DogTab/>\n                            <DialTab/>\n                            <Zakazchik/>\n                        </Text>\n                    </TextBox>\n                </AreaBox>\n                <AreaBox g={[5,2,10,5]} fd=\"row\">\n                    <TextBox h={\"100%\"}>\n                        {zakazchik===\"организация\"\n                                ? <FormOne/> \n                                : zakazchik===\"ИП\"\n                                    ? <FormTwo/>\n                                    : zakazchik===\"физическое лицо\"\n                                        ? <FormThree/> \n                                        : \"who knows\"\n                        }<br/>\n                    </TextBox>\n                </AreaBox>\n            </Grid>\n        </Container>    \n    </div>\n  );\n}\n\n//const mapStateToProps = state => ({\n//    store: state.home\n//},console.log(\"mapState state : \", state));\nconst mapStateToProps = _state => ({\n    store: _state,\n    home: _state.home,\n    yurlitzas: _state.home.yurlitzas,\n    dogovorTypes: _state.home.dogovorTypes,\n    dialects: _state.home.varDialects\n});\nconst mapDispatchToProps = _dispatch => ({\n    onYur: data => _dispatch(actions.yurlitso(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(Home);\n\n//export default Home;\n\n","const datavectorOne = \n{\n    main:\n        [\n            \"Полное название организации\",\n            \"Краткое название организации\",\n            \"ИНН\",\n            \"КПП\",\n            \"ОГРН\",\n            \"ОКПО\",\n            \"Дата государственной регистрации\",\n            \"Юридический адрес\",\n            \"Фактический адрес\",\n            \"Ген. директор (ФИО)\",\n            \"Бухгалтер (ФИО)\",\n            \"телефон\",\n        ]\n    ,\n    \"Банковские реквизиты\":\n        [\n            \"Наименование банка\",\n            \"БИК\",\n            \"Расчетный счёт\",\n            \"Корр. счёт\"\n        ]\n    \n};\n\nexport {datavectorOne};\n","import * as types from \"../constants/actionTypes\";\n\nexport const yurlitso = _yurlitso => {\n    console.log({type:types.YURLITSO, payload: _yurlitso});\n    return {type:types.YURLITSO, payload: _yurlitso};\n};\n\nexport const dogovorType = _dogovor => {\n    console.log({type:types.DOGOVOR_TYPE, payload: _dogovor});\n    return {type:types.DOGOVOR_TYPE, payload: _dogovor};\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <main class=\"container\" >\n        <Switch id=\"main\">\n            <Route exact path=\"/dodoc/\" \n                component={Home} />          \n        </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport reducer from './reducers'; \nimport App from './App';\n\nconst store = createStore(reducer);\nconsole.log(\"store while initialise in index.js : \", store.getState());\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nif (window.Cypress) {\n    window.store = store;\n}\n"],"sourceRoot":""}