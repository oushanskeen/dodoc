{"version":3,"sources":["css/Roboto_Mono/RobotoMono-Medium.ttf","reducers/home.js","state.js","reducers/index.js","constants/actionTypes.js","css/style.js","components/BeautyText.js","components/FormOne.js","components/FormTwo.js","components/FormThree.js","components/Home.js","components/datavector.js","actions/index.js","App.js","index.js"],"names":["module","exports","initialState","window","Cypress","hello","yurlitzas","dogovorTypes","currentVars","varDialects","basic","make","sell","rootReducer","combineReducers","home","state","action","type","yurlitso","payload","dogovorType","GlobalStyle","createGlobalStyle","Container","styled","div","Grid","AreaBox","p","fd","g","ParamBox","w","h","Text","m","TextBox","img","Input","input","b","Font","register","family","src","font","styles","StyleSheet","create","page","margin","fontFamily","display","wordBreak","border","hyphens","section","padding","content","PdfDocument","_props","style","text","BeautyText","document","fileName","blob","url","loading","error","FormOne","useState","compFullName","compShortName","INN","KPP","OGRN","OKPO","GosRegDate","YurAdress","FactAdress","GenDirector","Buhgalter","tel","bankName","BIK","BillOne","BillTwo","formData","setFormData","formString","JSON","stringify","updateFormData","event","target","name","value","id","onChange","e","placeholder","required","onClick","preventDefault","console","log","FormTwo","Name","FIO","OGRNIP","FormThree","NameInformal","lastName","firstName","midName","docType","Serial","number","whoGave","whenGave","codeGave","addressGave","inData","main","connect","_state","store","dialects","_dispatch","onYur","data","_yurlitso","setYurlitso","dogType","setDogType","zakazchik","setZakazchik","Elem","set","YurTab","map","DogTab","DialTab","zakTypes","Zakazchik","Basic","App","class","exact","path","component","Home","createStore","reducer","getState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a5ede2d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RobotoMono-Medium.7cfbd428.ttf\";","import {state} from '../state.js';\nimport {\n    YURLITSO,\n    DOGOVOR_TYPE,\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case YURLITSO:\n            return { yurlitso: action.payload };\n        case DOGOVOR_TYPE:\n            return { dogovorType: action.payload };\n        default:        \n            return state;\n    }\n    return state;\n};\n\n","const state = \n{\n    hello:\"hello\",\n    yurlitzas: [ \"Добровент\", \"Доброклад\", \"Доброход\" ],\n    dogovorTypes:[\"проектирование\",\"поставка\"],\n    currentVars:\n    [\n        \"ourCompanyName\",\n        \"ourDirectorName\",\n        \"theirCompanyName\",\n        \"theirDirectorName\"\n    ],\n    varDialects:\n    {\n        basic:\n        [\n            \"имя нашей компании\",\n            \"имя директора нашей компании\",\n            \"имя их компании\",\n            \"имя директора их компании\"\n        ],\n        make:\n        [\n            \"имя подрядчика\",\n            \"имя директора подрядчика\",\n            \"имя звквзчика\",\n            \"имя директора заказчика\"\n        ],\n        sell:\n        [\n          \"имя поставщик\",\n          \"имя директора поставщика\",\n          \"имя покупателя\",\n          \"имя директора покупателя\"\n        ]\n      \n    }\n};\n\nexport {state};\n","import {combineReducers} from 'redux';\nimport home from './home';\n\nconst rootReducer = combineReducers({\n    home\n});\n\nexport default rootReducer;\n","export const YURLITSO = \"YURLITSO\";\nexport const DOGOVOR_TYPE = \"DOGOVOR_TYPE\";\nexport const VARIABLE = \"VARIABLE\";\n","import styled from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0px;\n    background:white;\n  }\n`;\nconst Container = styled.div`\n    width:100vw;\n    height:100vh;\n`; \nconst Grid = styled.div`\n    display:grid;\n    grid-template-columns: 5% repeat(3,30%) 5%;\n    grid-template-rows: 2.5vh repeat(8,11.9%) 2.5vh;\n    width:100%;\n    height:100%;\n    background:white;\n`;\nconst AreaBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"column\"};\n    grid-area:${p=> p.g[0]+\"/\"+p.g[1]+\"/\"+p.g[2]+\"/\"+p.g[3]};\n    justify-content:center;\n    align-items:center;\n    border:0.5px solid black;\n    padding:0px;\n    overflow-wrap:normal;\n    background:White;\n`;\nconst ParamBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"row\"};\n    width:${p => p.w || '100%'};\n    height:${p => p.h || '100%'};\n    justify-content:center;\n    align-items:center;\n    overflow-wrap:normal;\n    //overflow:scroll;\n`;\nconst Text = styled.div`\n    margin:${p => p.m};\n`;\nconst Button = styled.div`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    margin:1vmin;\n    padding:5vmin;\n    width:50vw;\n    border:0.5vmin solid DarkSlateGrey;    \n`;\nconst Img = styled.img`\n    width:auto;\n    height:80%;\n`;\nconst TextBox = styled(ParamBox)`\n    display:flex;\n    flex-wrap:wrap;\n    width:100%;\n    height:${p => p.h || \"66%\"};\n    justify-content:flex-start;\n    align-items:flex-start;\n    font-size:1rem;\n    margin:1vmin;\n    overflow:scroll;\n`;\nconst Input = styled.input`\n    color: black;\n    border: 1px solid darkGrey;\n    margin: 0 0 5px 0;\n    width: 300%;\n    background-color: lightGrey;\n        \n    &:hover & {\n        background-color: white;\n        box-shadow: 0px 4px 20px 0px rgba(0, 0, 0, 0.05);\n    }\n\n`\n\nconst Selectable = styled.b`\n    &:hover {\n        background-color: yellow;\n    }\n`\nconst link = {\n  'color': 'black',\n  'text-decoration': 'none'\n};\nconst ghost = {\n  'color': 'grey',\n  'opacity': '50%'\n};\nconst naked = {\n  'border': '0px',\n};\n\nexport {\n    GlobalStyle,Container,Grid,AreaBox,ParamBox,TextBox,Input,Text,Button,Img,link,naked,Selectable,ghost\n}\n","\n    import React, {useState} from 'react';\n    //import '../css/latex.css';\n    //import Pdf from \"react-to-pdf\";\n    import font from '../css/Roboto_Mono/RobotoMono-Medium.ttf'\n\n    import {\n        Page,\n        Text,\n        View,\n        Document,\n        StyleSheet,\n        Image,\n        PDFDownloadLink,\n        Font,\n        BlobProvider\n    } from \"@react-pdf/renderer\";\n    //import { StyleSheet, Font } from '@react-pdf/renderer'\n\n    // Register font\n    Font.register({\n      family: 'Roboto Mono',\n      src: font\n    })\n\n    // Reference font\n    //const styles = StyleSheet.create({\n    //  title: {\n    //    fontFamily: 'Roboto'\n    //  }\n    //})\n    //import { PDFDownloadLink } from \"@react-pdf/renderer\";\n\n    const styles = StyleSheet.create({\n        page: {\n            //minWidth: \"43.75em\",\n\t        margin: \"2em auto\",\n            fontFamily: \"Roboto Mono\",\n            display: \"flex\",\n            wordBreak: \"break-word\",\n            //backgroundColor: \"lightGrey\",\n            border:\"1px solid black\",\n\t        hyphens: \"auto\"\n        },\n        section: {\n            margin: 10,\n            padding: 10,\n            //textAlign: \"start\",\n            //border:\"1px solid red\"\n        },\n        content: {\n            display: \"block\",\n            //border:\"1px solid grey\"\n        }\n    });\n    //\n\n    const inputText = \" Ut turpis mi, hendrerit rutrum nibh eget, porttitor feugiat ligula. Nullam tempus facilisis laoreet. Donec ac est ut diam auctor vestibulum ac ut mi. Aenean ut est massa. Ut eleifend auctor neque, ut ultrices lacus vestibulum vitae. Ut eleifend diam quis orci finibus tristique. Aenean mattis vel libero sit amet auctor. Nam ut felis magna. Nunc ullamcorper quam eget iaculis facilisis. Maecenas consectetur  hendrerit lectus, eget dictum enim venenatis a. Ut turpis mi, hendrerit rutrum nibh eget, porttitor feugiat ligula. Nullam tempus facilisis laoreet. Donec ac est ut diam auctor vestibulum ac ut mi. Aenean ut est massa. Ut eleifend auctor neque, ut ultrices lacus vestibulum vitae. Ut eleifend diam quis orci finibus tristique. Aenean mattis vel libero sit amet auctor. Nam ut felis magna. Nunc ullamcorper quam eget iaculis facilisis. Maecenas consectetur  hendrerit lectus, eget dictum enim venenatis a. Ut turpis mi, hendrerit rutrum nibh eget, porttitor feugiat ligula. Nullam tempus facilisis laoreet. Donec ac est ut diam auctor vestibulum ac ut mi. Aenean ut est massa. Ut eleifend auctor neque, ut ultrices lacus vestibulum vitae. Ut eleifend diam quis orci finibus tristique. Aenean mattis vel libero sit amet auctor. Nam ut felis magna. Nunc ullamcorper quam eget iaculis facilisis. Maecenas consectetur  hendrerit lectus, eget dictum enim venenatis a. Ut turpis mi, hendrerit rutrum nibh eget, porttitor feugiat ligula. Nullam tempus facilisis laoreet. Donec ac est ut diam auctor vestibulum ac ut mi. Aenean ut est massa. Ut eleifend auctor neque, ut ultrices lacus vestibulum vitae. Ut eleifend diam quis orci finibus tristique. Aenean mattis vel libero sit amet auctor. Nam ut felis magna. Nunc ullamcorper quam eget iaculis facilisis. Maecenas consectetur  hendrerit lectus, eget dictum enim venenatis a. Ut turpis mi, hendrerit rutrum nibh eget, porttitor feugiat ligula. Nullam tempus facilisis laoreet. Donec ac est ut diam auctor vestibulum ac ut mi. Aenean ut est massa. Ut eleifend auctor neque, ut ultrices lacus vestibulum vitae. Ut eleifend diam quis orci finibus tristique. Aenean mattis vel libero sit amet auctor. Nam ut felis magna. Nunc ullamcorper quam eget iaculis facilisis. Maecenas consectetur  hendrerit lectus, eget dictum enim venenatis a. Ut turpis mi, hendrerit rutrum nibh eget, porttitor feugiat ligula. Nullam tempus facilisis laoreet. Donec ac est ut diam auctor vestibulum ac ut mi. Aenean ut est massa. Ut eleifend auctor neque, ut ultrices lacus vestibulum vitae. Ut eleifend diam quis orci finibus tristique. Aenean mattis vel libero sit amet auctor. Nam ut felis magna. Nunc ullamcorper quam eget iaculis facilisis. Maecenas consectetur  hendrerit lectus, eget dictum enim venenatis a.\"\n\n    const PdfDocument = _props => (\n        <Document>\n            <Page style={styles.page}>\n                <View style={styles.section}>\n                    <Text style={styles.content}>\n                        {_props.text}\n                    </Text>\n                </View>\n            </Page>\n        </Document>\n    );\n/*\n    const Downloader = () => ( \n        <div>\n            <PDFDownloadLink \n                document={<PdfDocument />} \n                fileName=\"somename.pdf\"\n            >\n                {\n                    ({ blob, url, loading, error }) => (loading \n                        ? 'Loading document...' \n                        : 'Download now!')}\n            </PDFDownloadLink>\n        </div>\n    );\n\n    const BeautyText = () => (\n        <div>\n            <PdfDocument/>\n            <Downloader/>\n        </div>\n    );\\\n*/\n/*\n    const MyDoc = () => (\n      <Document>\n        <Page>\n            <View>\n                <Text>\n                    {\" Ut turpis mi, hendrerit rutrum nibh eget, porttitor feugiat ligula. Nullam tempus facilisis laoreet. Donec ac est ut diam auctor vestibulum ac ut mi. Aenean ut est massa. Ut eleifend auctor neque, ut ultrices lacus vestibulum vitae. Ut eleifend diam quis orci finibus tristique. Aenean mattis vel libero sit amet auctor. Nam ut felis magna. Nunc ullamcorper quam eget iaculis facilisis. Maecenas consectetur  hendrerit lectus, eget dictum enim venenatis a. Ut turpis mi, hendrerit rutrum nibh eget, porttitor feugiat ligula. Nullam tempus facilisis laoreet. Donec ac est ut diam auctor vestibulum ac ut mi. Aenean ut est massa. Ut eleifend auctor neque, ut ultrices lacus vestibulum vitae. Ut eleifend diam quis orci finibus tristique. Aenean mattis vel libero sit amet auctor. Nam ut felis magna. Nunc ullamcorper quam eget iaculis facilisis. Maecenas consectetur  hendrerit lectus, eget dictum enim venenatis a. Ut turpis mi, hendrerit rutrum nibh eget, porttitor feugiat ligula. Nullam tempus facilisis laoreet. Donec ac est ut diam auctor vestibulum ac ut mi. Aenean ut est massa. Ut eleifend auctor neque, ut ultrices lacus vestibulum vitae. Ut eleifend diam quis orci finibus tristique. Aenean mattis vel libero sit amet auctor. Nam ut felis magna. Nunc ullamcorper quam eget iaculis facilisis. Maecenas consectetur  hendrerit lectus, eget dictum enim venenatis a. Ut turpis mi, hendrerit rutrum nibh eget, porttitor feugiat ligula. Nullam tempus facilisis laoreet. Donec ac est ut diam auctor vestibulum ac ut mi. Aenean ut est massa. Ut eleifend auctor neque, ut ultrices lacus vestibulum vitae. Ut eleifend diam quis orci finibus tristique. Aenean mattis vel libero sit amet auctor. Nam ut felis magna. Nunc ullamcorper quam eget iaculis facilisis. Maecenas consectetur  hendrerit lectus, eget dictum enim venenatis a. Ut turpis mi, hendrerit rutrum nibh eget, porttitor feugiat ligula. Nullam tempus facilisis laoreet. Donec ac est ut diam auctor vestibulum ac ut mi. Aenean ut est massa. Ut eleifend auctor neque, ut ultrices lacus vestibulum vitae. Ut eleifend diam quis orci finibus tristique. Aenean mattis vel libero sit amet auctor. Nam ut felis magna. Nunc ullamcorper quam eget iaculis facilisis. Maecenas consectetur  hendrerit lectus, eget dictum enim venenatis a. Ut turpis mi, hendrerit rutrum nibh eget, porttitor feugiat ligula. Nullam tempus facilisis laoreet. Donec ac est ut diam auctor vestibulum ac ut mi. Aenean ut est massa. Ut eleifend auctor neque, ut ultrices lacus vestibulum vitae. Ut eleifend diam quis orci finibus tristique. Aenean mattis vel libero sit amet auctor. Nam ut felis magna. Nunc ullamcorper quam eget iaculis facilisis. Maecenas consectetur  hendrerit lectus, eget dictum enim venenatis a.\"}\n                </Text>\n            </View>\n        </Page>\n      </Document>\n    )\n*/\n    const BeautyText = _props => (\n      <div>\n        <PdfDocument text={_props.text}/>\n        <PDFDownloadLink document={<PdfDocument text={_props.text}/>} fileName=\"somename.pdf\">\n          {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Забери PDF если считаешь что он ок.')}\n        </PDFDownloadLink>\n      </div>\n    )\n\n    export default BeautyText;\n","   \n    import React, {useState} from 'react';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Input,Button,link,naked,Selectable,ghost\n    } from '../css/style.js';\n    import * as actions from '../actions';\n    import BeautyText from \"./BeautyText\";\n\n    const FormOne = () => {\n        const [formData, setFormData] = useState({\n            compFullName: \"\",\n            compShortName: \"\",\n            INN: \"\",\n            KPP:\"\",\n            OGRN:\"\",\n            OKPO:\"\",\n            GosRegDate:\"\",\n            YurAdress:\"\",\n            FactAdress:\"\",\n            GenDirector:\"\",\n            Buhgalter:\"\",\n            tel:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const formString = JSON.stringify(formData);\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            compFullName, \n            compShortName,\n            INN,\n            KPP,\n            OGRN,\n            OKPO,\n            GosRegDate,\n            YurAdress,\n            FactAdress,\n            GenDirector,\n            Buhgalter,\n            tel,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            console.log(\"formData after submit: \", formData);\n        };\n    const FormReport = () => (\n        <Text m={\"2vmin\"}>\n            <div>\n                {\"FORM REPORT: coming soon\"}\n            </div>\n        </Text>\n      \n    );\n    return (\n        <form>\n            <br/>\n                <label> Полное название организации : <br/>\n                    <Input\n                        id=\"compFullName\"\n                        value= {compFullName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Полное название организации \"\n                        type=\"text\"\n                        name=\"compFullName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Краткое название организации : <br/>\n                    <Input\n                        id=\"compShortName\"\n                        value= {compShortName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Краткое название организации \"\n                        type=\"text\"\n                        name=\"compShortName\"\n                        required\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"text\"\n                        name=\"INN\"\n                        required\n                    /><br/>\n               </label>\n               <label> КПП : <br/>\n                    <Input\n                        id=\"KPP\"\n                        value= {KPP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" КПП \"\n                        type=\"text\"\n                        name=\"KPP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРН : <br/>\n                    <Input\n                        id=\"OGRN\"\n                        value= {OGRN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРН \"\n                        type=\"text\"\n                        name=\"OGRN\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"text\"\n                        name=\"OKPO\"\n                        required\n                    /><br/>\n               </label>\n               <label> Дата государственной регистрации : <br/>\n                    <Input\n                        id=\"GosRegDate\"\n                        value= {GosRegDate}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Дата государственной регистрации \"\n                        type=\"text\"\n                        name=\"GosRegDate\"\n                        required\n                    /><br/>\n               </label>\n               <label> Юридический адрес : <br/>\n                    <Input\n                        id=\"YurAdress\"\n                        value= {YurAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Юридический адрес \"\n                        type=\"text\"\n                        name=\"YurAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Ген. директор (ФИО) : <br/>\n                    <Input\n                        id=\"GenDirector\"\n                        value= {GenDirector}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Ген. директор (ФИО) \"\n                        type=\"text\"\n                        name=\"GenDirector\"\n                        required\n                    /><br/>\n               </label>\n               <label> Бухгалтер (ФИО) : <br/>\n                    <Input\n                        id=\"Buhgalter\"\n                        value= {Buhgalter}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Бухгалтер (ФИО) \"\n                        type=\"text\"\n                        name=\"Buhgalter\"\n                        required\n                    /><br/>\n               </label>\n               <label> телефон : <br/>\n                    <Input\n                        id=\"tel\"\n                        value= {tel}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" телефон \"\n                        type=\"text\"\n                        name=\"tel\"\n                        required\n                    /><br/>\n               </label><br/>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {BIK}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n          <div>\n          </div>\n            <div>\n                <BeautyText text={formString}/>\n            </div>\n        </form>\n    );\n    };\n\n        \n    export default FormOne;\n","   \n    import React, {useState} from 'react';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Input,Button,link,naked,Selectable,ghost\n    } from '../css/style.js';\n    import * as actions from '../actions';    \n    import BeautyText from \"./BeautyText\";\n\n    const FormTwo = () => {\n        const [formData, setFormData] = useState({\n            Name: \"\",\n            FIO: \"\",\n            INN: \"\",\n            OGRNIP:\"\",\n            OKPO:\"\",\n            FactAdress:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const formString = JSON.stringify(formData);\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            Name, \n            FIO,\n            INN,\n            OGRNIP,\n            OKPO,\n            FactAdress,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            console.log(\"formData after submit: \", formData);\n        };\n    const FormReport = () => (\n        <Text m={\"2vmin\"}>\n            <div>\n                {\"FORM REPORT: coming soon\"}\n            </div>\n        </Text>\n      \n    );\n    return (\n        <form>\n            <br/>\n                <label> Название : <br/>\n                    <Input\n                        id=\"Name\"\n                        value= {Name}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название \"\n                        type=\"text\"\n                        name=\"Name\"\n                        required\n                    /><br/>\n               </label>\n               <label> ФИО : <br/>\n                    <Input\n                        id=\"FIO\"\n                        value= {FIO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ФИО \"\n                        type=\"text\"\n                        name=\"FIO\"\n                        required\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"text\"\n                        name=\"INN\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРНИП : <br/>\n                    <Input\n                        id=\"OGRNIP\"\n                        value= {OGRNIP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРНИП \"\n                        type=\"text\"\n                        name=\"OGRNIP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"text\"\n                        name=\"OKPO\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n\n            <div>\n                <BeautyText text={formString}/>\n            </div>\n\n        \n        </form>\n    );\n    };\n\n        \n    export default FormTwo;\n","   \n    import React, {useState} from 'react';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Input,Button,link,naked,Selectable,ghost\n    } from '../css/style.js';\n    import * as actions from '../actions';\n    import BeautyText from \"./BeautyText\";\n/*\n1. Название (то, как будет отображаться контакт в системе, неформальное название)\n2. Фамилия\n3. Имя\n4. Отчество\n5. Вид документа (чаще всего паспорт, но может быть загранник, военный билет)\n6. Серия\n7. Номер\n8. Кем выдан\n9. Дата выдачи\n10. Код подразделения\n11. Адрес прописки\n*/\n    const FormThree = () => {\n        const [formData, setFormData] = useState({\n            NameInformal: \"\",\n            lastName: \"\",\n            firstName: \"\",\n            midName:\"\",\n            docType:\"\",\n            Serial:\"\",\n            number:\"\",\n            whoGave:\"\",\n            whenGave:\"\",\n            codeGave:\"\",\n            addressGave:\"\"\n        });\n        const formString = JSON.stringify(formData);\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            NameInformal, \n            lastName,\n            firstName,\n            midName,\n            docType,\n            Serial,\n            number,\n            whoGave,\n            whenGave,\n            codeGave,\n            addressGave\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            console.log(\"formData after submit: \", formData);\n        };\n    const FormReport = () => (\n        <Text m={\"2vmin\"}>\n            <div>\n                {\"FORM REPORT: coming soon\"}\n            </div>\n        </Text>\n      \n    );\n    return (\n        <form>\n            <br/>\n                <label> Название (неформальное) : <br/>\n                    <Input\n                        id=\"NameInformal\"\n                        value= {NameInformal}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название (неформальное) \"\n                        type=\"text\"\n                        name=\"NameInformal\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фамилия : <br/>\n                    <Input\n                        id=\"lastName\"\n                        value= {lastName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фамилия \"\n                        type=\"text\"\n                        name=\"lastName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Имя : <br/>\n                    <Input\n                        id=\"firstName\"\n                        value= {firstName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Имя \"\n                        type=\"text\"\n                        name=\"firstName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Отчество : <br/>\n                    <Input\n                        id=\"midName\"\n                        value= {midName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Отчество \"\n                        type=\"text\"\n                        name=\"midName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Вид документа : <br/>\n                    <Input\n                        id=\"docType\"\n                        value= {docType}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Вид документа \"\n                        type=\"text\"\n                        name=\"docType\"\n                        required\n                    /><br/>\n               </label>\n               <label> Серия : <br/>\n                    <Input\n                        id=\"Serial\"\n                        value= {Serial}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Серия \"\n                        type=\"text\"\n                        name=\"Serial\"\n                        required\n                    /><br/>\n               </label>\n               <label> Номер : <br/>\n                   <Input\n                       id=\"number\"\n                       value= {number}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Номер \"\n                       type=\"text\"\n                       name=\"number\"\n                       required\n                   /><br/>\n               </label>\n               <label> Кем выдан : <br/>\n                   <Input\n                       id=\"whoGave\"\n                       value= {whoGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Кем выдан \"\n                       type=\"text\"\n                       name=\"whoGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Дата выдачи : <br/>\n                   <Input\n                       id=\"whenGave\"\n                       value= {whenGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Дата выдачи \"\n                       type=\"text\"\n                       name=\"whenGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Код подразделения : <br/>\n                   <Input\n                       id=\"codeGave\"\n                       value= {codeGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Код подразделени \"\n                       type=\"text\"\n                       name=\"codeGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Адрес прописки : <br/>\n                   <Input\n                       id=\"addressGave\"\n                       value= {addressGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Адрес прописки \"\n                       type=\"text\"\n                       name=\"addressGave\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n          <div>\n            <div>\n                <BeautyText text={formString}/>\n            </div>\n          </div>\n        \n        </form>\n    );\n    };\n\n        \n    export default FormThree;\n","import React, {useState, useEffect} from 'react';\nimport {\n    GlobalStyle,Container,Grid,AreaBox,Text,\n    TextBox,Input,Button,link,naked,Selectable,ghost\n} from '../css/style.js';\nimport * as actions from '../actions';\nimport {connect} from 'react-redux';\nimport { useForm } from \"react-hook-form\";\nimport * as data from \"./datavector\";\nimport FormOne from \"./FormOne\";\nimport FormTwo from \"./FormTwo\";\nimport FormThree from \"./FormThree\";\nimport BeautyText from \"./BeautyText\";\nconst inData = data.datavectorOne;\nconsole.log(\"inData : \", inData);\n\n\n\nconst Home = ({store,home,yurlitzas,dogovorTypes,dialects,onYur}) => { \n\n    const [yurlitso,setYurlitso] = useState(\"unknown\");\n    const [dogType,setDogType] = useState(\"unknown\");\n    const [outerdata,setOuterdata] = useState(\"formDataDefault\");\n    const [zakazchik,setZakazchik] = useState(\"unknown\");\n    \n    \n    \n    const Elem = _props => {\n        const handleClick = () => {\n            console.log(\"data : \", _props.data);\n            _props.set(_props.data);\n        };\n        return (<b onClick={handleClick}>{_props.data}{\" | \"}</b>\n    )};\n    const YurTab = () => (\n        <Text m={\"2vmin\"}>\n            <div id=\"yurfacesPanel\">\n                ЮРЛИЦО: <b>{yurlitso}</b> <br/>\n                {yurlitzas.map(e => <Elem data={e} set={setYurlitso}/>)}<br/>  \n            </div>\n        </Text>\n    ); \n    const DogTab = () => (\n        <Text m={\"2vmin\"}>\n            <div id=\"contractTypesPanel\">\n                ТИП ДОГОВОРА: <b>{dogType}</b> <br/>\n                {dogovorTypes.map(e => <Elem data={e} set={setDogType}/>)}<br/>  \n            </div>\n        </Text>\n    );\n    const DialTab = () => {\n        //console.log(\"dialects : \", dialects);\n        let current = () => {\n            return ((dogType == \"проектирование\") ? [...dialects.make] :\n                (dogType == \"поставка\") ? [...dialects.sell] :\n                dialects.basic\n            );\n        };\n        //console.log(\"current : \", current());\n        return (\n            <Text m={\"2vmin\"}>\n                <div id=\"varsPanel\">\n                    НАБОР ПЕРЕМЕННЫХ: <b>{dogType}</b> <br/>\n                    {current().map(e => <b>{e}{\" | \"}</b>)}\n                </div>\n            </Text>\n    )};\n\n    const zakTypes = [\"организация\",\"ИП\",\"физическое лицо\"];\n    const Zakazchik = () => (\n        <Text m={\"2vmin\"}>\n            <div id=\"zakazchik\">\n                ТИП ЗАКАЗЧИКА: <b>{zakazchik}</b> <br/>\n                {zakTypes.map(e => <Elem data={e} set={setZakazchik}/>)}<br/>  \n            </div>\n        </Text>        \n    );\n  const Basic = () => (\n    <div>\n    <GlobalStyle/>\n        <Container>\n            <Grid>\n                <AreaBox g={[2,2,5,5]} fd=\"row\">\n                    <TextBox h={\"100%\"}>\n                        <Text m={\"2vmin\"}>\n                            <YurTab/>\n                            <DogTab/>\n                            <DialTab/>\n                            <Zakazchik/>\n                        </Text>\n                    </TextBox>\n                </AreaBox>\n                <AreaBox g={[5,2,10,5]} fd=\"row\">\n                    \n                    <TextBox h={\"100%\"}>\n                        {zakazchik===\"организация\"\n                                ? <FormOne/> \n                                : zakazchik===\"ИП\"\n                                    ? <FormTwo/>\n                                    : zakazchik===\"физическое лицо\"\n                                        ? <FormThree/> \n                                        : \"who knows\"\n                        }<br/>\n                    </TextBox>\n                </AreaBox>\n                \n            </Grid>\n        </Container>\n    </div>\n  );\n  return (\n    <div>\n        <Basic/>   \n    </div>\n  );\n}\n\n//const mapStateToProps = state => ({\n//    store: state.home\n//},console.log(\"mapState state : \", state));\nconst mapStateToProps = _state => ({\n    store: _state,\n    home: _state.home,\n    yurlitzas: _state.home.yurlitzas,\n    dogovorTypes: _state.home.dogovorTypes,\n    dialects: _state.home.varDialects\n});\nconst mapDispatchToProps = _dispatch => ({\n    onYur: data => _dispatch(actions.yurlitso(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(Home);\n\n//export default Home;\n\n","const datavectorOne = \n{\n    main:\n        [\n            \"Полное название организации\",\n            \"Краткое название организации\",\n            \"ИНН\",\n            \"КПП\",\n            \"ОГРН\",\n            \"ОКПО\",\n            \"Дата государственной регистрации\",\n            \"Юридический адрес\",\n            \"Фактический адрес\",\n            \"Ген. директор (ФИО)\",\n            \"Бухгалтер (ФИО)\",\n            \"телефон\",\n        ]\n    ,\n    \"Банковские реквизиты\":\n        [\n            \"Наименование банка\",\n            \"БИК\",\n            \"Расчетный счёт\",\n            \"Корр. счёт\"\n        ]\n    \n};\n\nexport {datavectorOne};\n","import * as types from \"../constants/actionTypes\";\n\nexport const yurlitso = _yurlitso => {\n    console.log({type:types.YURLITSO, payload: _yurlitso});\n    return {type:types.YURLITSO, payload: _yurlitso};\n};\n\nexport const dogovorType = _dogovor => {\n    console.log({type:types.DOGOVOR_TYPE, payload: _dogovor});\n    return {type:types.DOGOVOR_TYPE, payload: _dogovor};\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <main class=\"container\" >\n        <Switch id=\"main\">\n            <Route exact path=\"/dodoc/\" \n                component={Home} />          \n        </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport reducer from './reducers'; \nimport App from './App';\n\nconst store = createStore(reducer);\nconsole.log(\"store while initialise in index.js : \", store.getState());\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nif (window.Cypress) {\n    window.store = store;\n}\n"],"sourceRoot":""}