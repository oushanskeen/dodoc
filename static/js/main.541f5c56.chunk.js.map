{"version":3,"sources":["utils/assert.js","css/Roboto_Mono/RobotoMono-Medium.ttf","utils/dognums.js","state.js","reducers/home.js","reducers/formDataNew.js","reducers/formOne.js","reducers/formTwo.js","reducers/formThree.js","reducers/dogovorData.js","reducers/index.js","constants/actionTypes.js","css/style.js","actions/index.js","components/BeautyText.js","components/FormOne.js","components/FormTwo.js","components/FormThree.js","store.js","components/MontajSampleData.js","components/FormMap.js","components/HsFs.js","components/HeadFoot.js","components/Montaj.js","components/MontajDefault.js","components/Ownerdic.js","components/Home.js","App.js","index.js"],"names":["module","exports","_statement","_function","_positiveOutcome","JSON","stringify","console","log","assert","require","dogs","date","link","name","nameExtractor","out","Object","keys","map","dog","key","push","latestExtractor","_dogName","length","match","sampleNy","year","month","day","newDogGen","_date","sampleDate","_letter","state","hello","formData","dogovorData","zakazchikTypes","z1","sampleData","type","compFullName","compShortName","INN","KPP","OGRN","OKPO","GosRegDate","YurAdress","FactAdress","GenDirector","Buhgalter","tel","bankName","BIK","BillOne","BillTwo","z2","Name","FIO","OGRNIP","z3","NameInformal","lastName","firstName","midName","docType","Serial","number","whoGave","whenGave","codeGave","addressGave","initialState","window","Cypress","selectors","objNameSel","dogTypeSel","sysTypeSel","servTypeSel","clientTypeSel","hub","rootReducer","combineReducers","home","action","yurlitso","payload","dogovorType","formDataNew","clientType","data","GlobalStyle","createGlobalStyle","Container","styled","div","Grid","AreaBox","p","fd","g","b","ParamBox","w","h","Text","m","TextBox","img","Input","input","naked","NavbarDropdownContent","_data","Font","register","family","src","font","styles","StyleSheet","create","page","margin","fontFamily","display","wordBreak","border","hyphens","section","padding","content","sampleDataOne","sampleDataTwo","zakazchik","template","data_to_text","_store","hold","parse","PdfDocument","_props","style","text","BeautyText","store","document","fileName","blob","url","loading","error","connect","_state","_dispatch","onDataReady","onDogovorData","actions","onNewdogData","useState","is","setDataSent","Dogovors","to","setFormData","updateFormData","event","target","value","id","onChange","e","placeholder","required","maxlength","minlength","onClick","preventDefault","createStore","reducer","getState","formOrgDataSample","formFLDataSample","serverData","varOne","CompName","yurAdress","bank","firstBill","secondBill","varTwo","ClientDataFL","_d","FLHeader","_clientData","_serverData","ClientOrgFooter","ClientIPFooter","ClientFLFooter","ServerFooter","DataMapper","Cmap","Smap","actualInput","ct","cd","st","defaultInput","ai","di","cmap","smap","a","c","HFROuter","ClientType","_clientType","ClientData","ORG","IP","FL","ServerData","_serverType","aa","bb","cc","HeadFoot","_a","_b","_c","divStyle","selection","width","wordWrap","MontajHead","Ownerdic","newDogData","setSelection","setHub","output","updateSelection","objectsDataVector","dogovorsDataVector","systemsDataVector","serversDataVector","clientDataVector","ObjectSelector","for","DogovorSelector","ServerSelector","ClientSelector","SystemSelector","checked","updateHub","FormTab","Basic","App","className","exact","path","component","Home","Montaj","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.541f5c56.chunk.js","sourcesContent":["\n    const assert = (_statement,_function,_positiveOutcome) => {\n        return(\n                JSON.stringify(_function) === JSON.stringify(_positiveOutcome) \n                ? console.log(`YES! ${_statement}, ooph!`) \n                : console.log(`NOPE! ${_statement} works WRONG!!!`)\n        );\n    };\n\n    //export {assert};\n    module.exports = assert;\n","module.exports = __webpack_public_path__ + \"static/media/RobotoMono-Medium.7cfbd428.ttf\";","\n//  IMPORTS ---------------------------------------------------------------------------------------\n\n    const assert = require(\"./assert\");\n    \n//   TASK -----------------------------------------------------------------------------------------\n\n    /*\n    В процессе создания договоров им присваивается {название} по формуле:\n    + 1. Договор проектирования. {Договор проектирования №{текущийгод}А{порядковыйномер} от {дд-месяц-гггг}}\n    + 2. Договор поставки. {Договор поставки №{текущийгод}Б{порядковыйномер}. от {дд-месяц-гггг}}\n    + 3. Договор монтажа {Договор монтажа №{текущийгод}В{порядковыйномер}. от {дд-месяц-гггг}}\n    + 4. Договор сервисного обслуживания. {Договор сервисного обслуживания №{текущийгод}СО{порядковыйномер} от {дд-месяц-гггг}}\n    + 5. Договор субподряда {Договор монтажа №{текущийгод}ВСУБ{порядковыйномер}. от {дд-месяц-гггг}}\n\n    + С началом нового года {порядковый_номер} обнуляется и счет начинается заново с 1.\n    + {название} является названием файла при выгрузке в формате {название}.pdf или {название}.doc\n    */\n\n//  INPUT DATA: DOGS data (DOGOVORS) -------------------------------------------------------------------\n\n    const dogs = {\n        \"Договор проектирования\":\n            {\n                \"1999_1\": {date:\"1999/2/2\", link:\"link\", name: \"Договор проектирования №1999А1. от 1999/2/2\"},\n                \"1999_2\": {date:\"1999/12/5\", link:\"link\", name: \"Договор проектирования №1999A2. от 1999/12/5\"},\n                \"2000_1\": {date:\"2000/24/7\", link:\"link\", name: \"Договор проектирования №2000A1. от 2000/24/7\"}\n            },\n        \"Договор поставки\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор поставки №1999Б1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор поставки №1999Б2. oт 1999/12/5\"},\n                \"2019_2\": {date:\"24/7/2000\", link:\"link\", name: \"Договор поставки №2019Б2. от 2019/24/7\"}\n            },        \n        \"Договор монтажа\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор монтажа №1999В1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор монтажа №1999В2. от 1999/12/5\"},\n                \"2000_3\": {date:\"24/7/2000\", link:\"link\", name: \"Договор монтажа №1999В3. от 2000/24/7\"}\n            },\n        \"Договор сервисного обслуживания\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор сервисного обслуживания №1999СО1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор сервисного обслуживания №1999СО2. от 1999/12/5\"},\n                \"2000_4\": {date:\"24/7/2000\", link:\"link\", name: \"Договор сервисного обслуживания №2000СО4. от 2000/24/7\"}\n            },\n        \"Договор субподряда\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор субподряда №1999ВСУБ1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор субподряда №1999ВСУБ2. от 1999/12/5\"},\n                \"2000_5\": {date:\"24/7/2000\", link:\"link\", name: \"Договор субподряда №2000ВСУБ5. от 2000/24/7\"}        \n            }\n    };\n\n//  FUNCTIONS ----------------------------------------------------------------------------------------------------\n\n    //  1 NAME EXTRACTOR ---------------------------------------------------------------------------------------------\n\n    const nameExtractor = (_dogs=dogs) => {\n        let out = [];\n        Object.keys(dogs).map(dog => {for (let key in dogs[dog]) out.push(dogs[dog][key].name)});\n        return out;\n    };\n    assert(\n        \"Name extractor extracts names\",\n        nameExtractor(),\n        [\n            \"Договор проектирования №1999A1. от 1999/2/2\",\n            \"Договор проектирования 1999A2. от №1999/12/5\",\n            \"Договор проектирования №2000A1. от 2000/24/7\",\n            \"Договор поставки №1999Б1. от 1999/2/2\",\n            \"Договор поставки 1999Б2. от №1999/12/5\",\n            \"Договор поставки №2019Б2. от 2019/24/7\",\n            \"Договор монтажа №1999В1. от 1999/2/2\",\n            \"Договор монтажа 1999В2. от №1999/12/5\",\n            \"Договор монтажа №1999В3. от 2000/24/7\",\n            \"Договор сервисного обслуживания №1999СО1. от 1999/2/2\",\n            \"Договор сервисного обслуживания 1999СО2. от №1999/12/5\",\n            \"Договор сервисного обслуживания №2000СО4. от 2000/24/7\",\n            \"Договор субподряда №1999ВСУБ1. от 1999/2/2\",\n            \"Договор субподряда 1999ВСУБ2. от №1999/12/5\",\n            \"Договор субподряда №2000ВСУБ5. от 2000/24/7\"\n        ]\n    );\n\n    //  2 LATEST DOGOVORTYPE NUMBER EXTRACTOR ------------------------------------------------------------------------------\n\n    const latestExtractor = _dogName => {\n        let keys = Object.keys(dogs[_dogName]); \n        let out = keys[keys.length-1].match(/(?<=\\_)\\d+/g)[0];\n        return out;\n    };\n    assert(\n        \"IN: dogType & dogs pool, OUT: latest #num of required dogtype \",\n        latestExtractor(\"Договор проектирования\"),\n        \"1\"\n    );\n    \n    //  3 NEW DOGOVOR GENERATOR ---------------------------------------------------------------------------------------\n\n    const sampleNy = { year:2020, month:1, day:1};\n    \n    const newDogGen = (_dogName,_date=sampleNy) => {\n        const sampleDate = `${_date.year}/${_date.day}/${_date.month}`;   \n        const out = _letter => {\n            return ( (_date.month === 1 && _date.day === 1) && (latestExtractor(_dogName) === 1)\n                ? `${_dogName} №${_date.year}${_letter}${+latestExtractor(_dogName)+1}. ot ${sampleDate}`\n                : `${_dogName} №${_date.year}${_letter}1. ot ${sampleDate}` \n            );\n        };\n        switch(_dogName){\n            case \"Договор проектирования\": return out(\"A\");\n            case \"Договор поставки\": return out(\"Б\");\n            case \"Договор монтажа\": return out(\"В\");\n            case \"Договор сервисного обслуживания\": return out(\"СО\");\n            case \"Договор субподряда\": return out(\"ВСУБ\");\n            default : return \"who knows\";\n        };\n        \n    };\n    assert(\n            \"IN: dog name, OUT: new dog name\",\n            newDogGen(\"nameOne\",sampleNy),\n            \"nameOne №2020A2. ot 2020/1/1\" // prev = \"nameOne 2000 A1 2000/24/7\"\n        );\n    assert(\n        \"IN: dog name, OUT: new dog name\",\n        newDogGen(\"nameTwo\",sampleNy),\n        \"nameTwo №2020B1. ot 2020/1/1\" //prev === \"nameTwo 2019 B2 2019/24/7\"\n    );\n\n//  EXPORTS ---------------------------------------------------------------------------------------------------------\n\n    exports.newDogGen = newDogGen;\n    exports.nameExtractor = nameExtractor;\n\n","const z1 =\n{ \n    sampleData:{type:\n        {\n            compFullName: \"-\",\n            compShortName: \"-\",\n            INN: \"-\",\n            KPP:\"-\",\n            OGRN:\"-\",\n            OKPO:\"-\",\n            GosRegDate:\"-\",\n            YurAdress:\"-\",\n            FactAdress:\"-\",\n            GenDirector:\"-\",\n            Buhgalter:\"-\",\n            tel:\"-\",\n            bankName:\"-\",\n            BIK:\"-\",\n            BillOne:\"-\",\n            BillTwo:\"-\"\n        }\n    }\n}\nconst z2 = \n{\n    Name: \"-\",\n    FIO: \"-\",\n    INN: \"-\",\n    OGRNIP:\"-\",\n    OKPO:\"-\",\n    FactAdress:\"-\",\n    bankName:\"-\",\n    BIK:\"-\",\n    BillOne:\"-\",\n    BillTwo:\"-\"\n};\nconst z3 = \n{\n    NameInformal: \"-\",\n    lastName: \"-\",\n    firstName: \"-\",\n    midName:\"-\",\n    docType:\"-\",\n    Serial:\"-\",\n    number:\"-\",\n    whoGave:\"-\",\n    whenGave:\"-\",\n    codeGave:\"-\",\n    addressGave:\"-\"\n};\nconst formDefaultData = \"formDefaultData\";\n\n\nconst state = \n{\n    hello:\"hello\",\n    formData: formDefaultData,\n    dogovorData:{},\n    zakazchikTypes: {z1:z1,z2:z2,z3:z3}\n};\n\nexport {state};\n","import {state} from '../state.js';\nimport {\n    YURLITSO,\n    DOGOVOR_TYPE,\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case YURLITSO:\n            return { yurlitso: action.payload };\n        case DOGOVOR_TYPE:\n            return { dogovorType: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    FORM_DATA_NEW\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case FORM_DATA_NEW:\n            return {clientType:action.payload.clientType, data:action.payload.data};\n        default:        \n            return state;\n    };\n};\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPEONE_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPEONE_DATA:\n            return { zakazchikTypeOneData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPETWO_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPETWO_DATA:\n            return { zakazchikTypeTwoData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPETHREE_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPETHREE_DATA:\n            return { zakazchikTypeThreeData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    DOGOVOR_DATA,\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\n{\n    selectors:{objNameSel:\"-\",dogTypeSel:\"-\",sysTypeSel: \"-\",servTypeSel: \"-\",clientTypeSel: \"-\",hub: {}},\n    formData:{\n        NameInformal:\"-\",\n        lastName:\"-\",\n        firstName:\"-\",\n        midName:\"-\",\n        docType:\"-\",\n        Serial:\"-\",\n        number:\"-\",\n        whoGave:\"-\",\n        whenGave:\"-\",\n        codeGave:\"-\",\n        addressGave:\"-\"\n    }\n};\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case DOGOVOR_DATA:\n            return action.payload;\n        default:        \n            return state;\n    };\n};\n\n","import {combineReducers} from 'redux';\nimport home from './home';\nimport formOne from './formOne';\nimport formTwo from './formTwo';\nimport formThree from './formThree';\nimport formDataNew from './formDataNew';\nimport dogovorData from './dogovorData';\n\nconst rootReducer = combineReducers({\n    home,\n    formDataNew,\n    dogovorData\n});\n\nexport default rootReducer;\n","export const YURLITSO = \"YURLITSO\";\nexport const DOGOVOR_TYPE = \"DOGOVOR_TYPE\";\nexport const VARIABLE = \"VARIABLE\";\nexport const FORM_DATA_NEW = \"FORM_DATA_NEW\";\nexport const DOGOVOR_DATA = \"DOGOVOR_DATA\";\nexport const ZAKAZCHIK_TYPEONE_DATA = \"ZAKAZCHIK_TYPEONE_DATA\";\nexport const ZAKAZCHIK_TYPETWO_DATA = \"ZAKAZCHIK_TYPETWO_DATA\";\nexport const ZAKAZCHIK_TYPETHREE_DATA = \"ZAKAZCHIK_TYPETHREE_DATA\";\n","import styled from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0px;\n    background:white;\n  }\n`;\nconst Container = styled.div`\n    width:100vw;\n    height:100vh;\n`; \nconst Grid = styled.div`\n    display:grid;\n    grid-template-columns: 5% repeat(3,30%) 5%;\n    grid-template-rows: 2.5vh repeat(8,11.9%) 2.5vh;\n    width:100%;\n    height:100%;\n    background:white;\n`;\nconst AreaBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"column\"};\n    grid-area:${p=> p.g[0]+\"/\"+p.g[1]+\"/\"+p.g[2]+\"/\"+p.g[3]};\n    justify-content:center;\n    align-items:center;\n    border:${p=> p.b || \"0.5px solid black\"};\n    padding:0px;\n    overflow-wrap:normal;\n    background:White;\n`;\nconst ParamBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"row\"};\n    width:${p => p.w || '100%'};\n    height:${p => p.h || '100%'};\n    justify-content:center;\n    align-items:center;\n    overflow-wrap:normal;\n    //overflow:scroll;\n`;\nconst Text = styled.div`\n    margin:${p => p.m};\n`;\nconst Button = styled.div`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    margin:1vmin;\n    padding:5vmin;\n    width:30vw;\n    border:0.5vmin solid DarkSlateGrey;    \n`;\nconst Img = styled.img`\n    width:auto;\n    height:80%;\n`;\nconst TextBox = styled(ParamBox)`\n    display:flex;\n    flex-wrap:wrap;\n    width:100%;\n    height:${p => p.h || \"66%\"};\n    justify-content:flex-start;\n    align-items:flex-start;\n    font-size:1rem;\n    margin:1vmin;\n    //overflow:scroll;\n`;\nconst Input = styled.input`\n    color: black;\n    border: 1px solid darkGrey;\n    margin: 0 0 5px 0;\n    width: 300%;\n    background-color: lightGrey;\n        \n    &:hover & {\n        background-color: white;\n        box-shadow: 0px 4px 20px 0px rgba(0, 0, 0, 0.05);\n    }\n\n`\n\nconst Selectable = styled.b`\n    &:hover {\n        background-color: yellow;\n    }\n`\nconst link = {\n  'color': 'black',\n  'text-decoration': 'none'\n};\nconst ghost = {\n  'color': 'grey',\n  'opacity': '50%'\n};\nconst naked = {\n  'border': '0px',\n};\n\nconst NavbarDropdownContent = styled.div`\n    display: none;\n    position: absolute;\n    background-color: #f9f9f9;\n    opacity:90%;\n    min-width: 300px;\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0, 2);\n    padding: 12px 16px;\n    z-index: 1;\n`;\n\nconst NavbarDropdown = styled.div`\nposition: relative;\ndisplay: inline-block;\n&:hover ${NavbarDropdownContent} {\n  display: block;\n}\n`;\n\n\nexport {\n    GlobalStyle,NavbarDropdown,NavbarDropdownContent,Container,Grid,AreaBox,ParamBox,TextBox,Input,Text,Button,Img,link,naked,Selectable,ghost\n}\n","import * as types from \"../constants/actionTypes\";\n\nexport const dogovorData = _data => {\n    console.log({type:types.DOGOVOR_DATA, payload: _data});\n    return {type:types.DOGOVOR_DATA, payload: _data}\n};\n\nexport const formDataNew = _data => {\n    console.log({type:types.FORM_DATA_NEW, payload: _data});\n    return {type:types.FORM_DATA_NEW, payload: _data};\n};\n\nexport const yurlitso = _yurlitso => {\n    console.log({type:types.YURLITSO, payload: _yurlitso});\n    return {type:types.YURLITSO, payload: _yurlitso};\n};\n\nexport const dogovorType = _dogovor => {\n    console.log({type:types.DOGOVOR_TYPE, payload: _dogovor});\n    return {type:types.DOGOVOR_TYPE, payload: _dogovor};\n};\n\nexport const zakazchikTypeOneData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPEONE_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPEONE_DATA,\n            payload:_data\n       }\n    );\n};\nexport const zakazchikTypeTwoData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPETWO_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPETWO_DATA,\n            payload:_data\n       }\n    );\n};\nexport const zakazchikTypeThreeData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPETHREE_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPETHREE_DATA,\n            payload:_data\n       }\n    );\n};\n","\n    import React from 'react';\n    import font from '../css/Roboto_Mono/RobotoMono-Medium.ttf'\n    import {\n        Page,\n        Text,\n        View,\n        Document,\n        StyleSheet,\n        PDFDownloadLink,\n        Font,\n    } from \"@react-pdf/renderer\";\n\n    // Register font\n    Font.register({\n      family: 'Roboto Mono',\n      src: font\n    })\n\n    const styles = StyleSheet.create({\n        page: {\n\t        margin: \"2em auto\",\n            fontFamily: \"Roboto Mono\",\n            display: \"flex\",\n            wordBreak: \"break-word\",\n            border:\"1px solid black\",\n\t        hyphens: \"auto\"\n        },\n        section: {\n            margin: 10,\n            padding: 10,\n        },\n        content: {\n            display: \"block\"\n        }\n    });\n\n    let sampleDataOne = {type:\n        {\n            compFullName: \" - \",\n            compShortName: \" - \",\n            INN: \" - \",\n            KPP: \" - \",\n            OGRN: \" - \",\n            OKPO: \" - \",\n            GosRegDate: \" - \",\n            YurAdress: \" - \",\n            FactAdress: \" - \",\n            GenDirector: \" - \",\n            Buhgalter: \" - \",\n            tel: \" - \",\n            bankName: \" - \",\n            BIK: \" - \",\n            BillOne: \" - \",\n            BillTwo: \" - \",\n        }\n    };\n    let sampleDataTwo = {type:\n        {\n            Name: \"-\",\n            FIO: \"-\",\n            INN: \"-\",\n            OGRNIP:\"-\",\n            OKPO:\"-\",\n            FactAdress:\"-\",\n            bankName:\"-\",\n            BIK:\"-\",\n            BillOne:\"-\",\n            BillTwo:\"-\"\n        }\n    };\n    let sampleDataThree = {type:\n        {\n            NameInformal: \"-\",\n            lastName: \"-\",\n            firstName: \"-\",\n            midName:\"-\",\n            docType:\"-\",\n            Serial:\"-\",\n            number:\"-\",\n            whoGave:\"-\",\n            whenGave:\"-\",\n            codeGave:\"-\",\n            addressGave:\"-\"\n        }\n    };\n    \n    const templateOne = (_data = sampleDataOne.type) => {\n        return (\"Нашакомпания ,в лице директора ФИОдиректора Нашей Компании действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" +\n        _data.compFullName + \" , в лице генерального директора  ФИО второй стороны , действующего(ей) на основании Устава, именуемое в дальнейшем 'Покупатель',РЕКВИЗИТЫ СТОРОН: \" + \n        \" Покупатель: \" + _data.compShortName  +\n        \" ИНН: \" + _data.INN +\n        \" КПП: \" + _data.KPP +\n        \" ОГРН: \" + _data.OGRN + \n        \" Юр.адрес: \" + _data.YurAdress +\n        \" Факт.адрес: \" + _data.FactAdress +\n        \" Банк: \" +  _data.bankName +\n        \" БИК: \" +  _data.BIK +\n        \" р/с: \" +  _data.BillOne +\n        \" к/с: \" +  _data.BillTwo +\n        \" \")\n    };\n    const templateTwo = (_data = sampleDataTwo.type) => {\n        return(\"Наша компания, в лице директора ФИОдиректора нашей компании, действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" + _data.Name + \" , в лице генерального директора \" + _data.FIO + \", действующего(ей) на основании Устава, именуемое в дальнейшем 'Покупатель', РЕКВИЗИТЫ СТОРОН: Покупатель: \" + \n_data.Name + \" ИНН: \" + _data.INN + \" ОГРНИП: \" + _data.OGRNIP + \" Факт.адрес: \" +  _data.FactAdress + \" Банк: \" + _data.bankName +\n\" БИК: \" +  _data.BIK + \" р/с: \" + _data.BillOne + \" к/с: \" +  _data.BillTwo + \" подписи \" + _data.Name + \" _/инициалы(ФИО)/ \" + _data.FIO + \"\"\n        )\n    };\n    const templateThree = (_data = sampleDataTwo.type) => {\n        return(\"Нашакомпания, в лице директора ФИОдиректора нашей компании, действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" + _data.lastName + \" \" + _data.firstName + \" \" + _data.midName + \" , \" + _data.docType + \" серия \" + _data.Serial + \" номер \" +  _data.number + \" , выдан \" +  _data.whoGave + \" \" +  _data.whenGave + \" код подразделения \" +  _data.codeGave + \" , именуемый(ая) в дальнейшем 'Покупатель', РЕКВИЗИТЫ СТОРОН: Покупатель: \"  + _data.lastName + \" \" + _data.firstName + \" \" + _data.midName + \" , \" + _data.docType + \" серия \" + _data.Serial + \" номер \" +  _data.number + \" , выдан \" +  _data.whoGave + \" \" +  _data.whenGave + \" код подразделения \" +  _data.codeGave + \" подписи \" + \"_/инициалы(ФИО)/\"\n        );\n    };\n\n    const zakazchik = {\n        one:{ template: templateOne, data: sampleDataOne },\n        two:{ template: templateTwo, data: sampleDataTwo },\n        three:{ template: templateThree, data: sampleDataThree }\n    };\n\n    const data_to_text = (_data,_store) => {\n        console.log(\"data_to_text on load : \", _store);\n        const hold = Object.keys(JSON.parse(_data))[0];\n        switch (hold) {\n            case 'zakazchikTypeOneData':\n                return JSON.stringify(zakazchik.one.template(JSON.parse(_data)[hold]));\n            case 'zakazchikTypeTwoData':\n                return JSON.stringify(zakazchik.two.template(JSON.parse(_data)[hold]));\n            case 'zakazchikTypeThreeData':\n                return JSON.stringify(zakazchik.three.template(JSON.parse(_data)[hold]));\n            default:\n                return \"whatever\";\n        }\n    };\n\n    const PdfDocument = _props => (\n        <Document>\n            <Page style={styles.page}>\n                <View style={styles.section}>\n                    <Text style={styles.content}>\n                        {_props.text}\n                    </Text>\n                </View>\n            </Page>\n        </Document>\n    );\n\n    const BeautyText = (_props) => (\n      <div>\n        <PdfDocument text={data_to_text(_props.text,_props.store)}/>\n        <PDFDownloadLink \n            document={<PdfDocument \n                text={data_to_text(_props.text,_props.store)}/>\n            } \n            fileName=\"somename.pdf\"\n        >\n            {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Забери PDF если считаешь что он ок.')}\n        </PDFDownloadLink>\n      </div>\n    );\n\n    export default BeautyText;\n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';\n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../css/style.js'\n\n    const FormOne = ({store,onDataReady,onNewdogData,onDogovorData,dogovorData}) => {\n        console.log(\"store visible in FormOne : \", store);\n        console.log(\"onDataReady inside form one : \", onDataReady);\n    const [dataSent,setDataSent] = useState({is:\"not ok\"});\n    const [isOk, setIsOk] = useState(\"isNotOk\")\n    const Dogovors = () => (\n        <button>\n            <Link \n                to=\"/dodoc/montaj\"\n                style={link}\n            >\n                CОЗДАТЬ ДОГОВОР\n            </Link>\n        </button>  \n    );\n        const [formData, setFormData] = useState({\n            compFullName: \"\",\n            compShortName: \"\",\n            INN: \"\",\n            KPP:\"\",\n            OGRN:\"\",\n            OKPO:\"\",\n            GosRegDate:\"\",\n            YurAdress:\"\",\n            FactAdress:\"\",\n            GenDirector:\"\",\n            Buhgalter:\"\",\n            tel:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            setDataSent(\"OK\");\n            console.log(\"form data : \", formData);\n        }\n        const \n        { \n            compFullName, \n            compShortName,\n            INN,\n            KPP,\n            OGRN,\n            OKPO,\n            GosRegDate,\n            YurAdress,\n            FactAdress,\n            GenDirector,\n            Buhgalter,\n            tel,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            onDogovorData({...dogovorData,formData:formData});\n        };\n    return (\n        <form>\n            <br/>\n                <label> Полное название организации : <br/>\n                    <Input\n                        id=\"compFullName\"\n                        value= {compFullName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Полное название организации \"\n                        type=\"text\"\n                        name=\"compFullName\"\n                        required\n                        maxlength=\"120\"\n                    /><br/>\n               </label>\n               <label> Краткое название организации : <br/>\n                    <Input\n                        id=\"compShortName\"\n                        value= {compShortName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Краткое название организации \"\n                        type=\"text\"\n                        name=\"compShortName\"\n                        required\n                        maxlength=\"120\"\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"number\"\n                        name=\"INN\"\n                        required\n                        minlength=\"10\"\n                        maxlength=\"10\"\n                    /><br/>\n               </label>\n               <label> КПП : <br/>\n                    <Input\n                        id=\"KPP\"\n                        value= {KPP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" КПП \"\n                        type=\"text\"\n                        name=\"KPP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРН : <br/>\n                    <Input\n                        id=\"OGRN\"\n                        value= {OGRN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРН \"\n                        type=\"number\"\n                        name=\"OGRN\"\n                        required\n                        minlength=\"13\"\n                        maxlength=\"13\"\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"number\"\n                        name=\"OKPO\"\n                        required\n                        minlength=\"8\"\n                        maxlength=\"8\"\n                    /><br/>\n               </label>\n               <label> Дата государственной регистрации : <br/>\n                    <Input\n                        id=\"GosRegDate\"\n                        value= {GosRegDate}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Дата государственной регистрации \"\n                        type=\"text\"\n                        name=\"GosRegDate\"\n                        required\n                    /><br/>\n               </label>\n               <label> Юридический адрес : <br/>\n                    <Input\n                        id=\"YurAdress\"\n                        value= {YurAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Юридический адрес \"\n                        type=\"text\"\n                        name=\"YurAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Ген. директор (ФИО) : <br/>\n                    <Input\n                        id=\"GenDirector\"\n                        value= {GenDirector}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Ген. директор (ФИО) \"\n                        type=\"text\"\n                        name=\"GenDirector\"\n                        required\n                    /><br/>\n               </label>\n               <label> Бухгалтер (ФИО) : <br/>\n                    <Input\n                        id=\"Buhgalter\"\n                        value= {Buhgalter}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Бухгалтер (ФИО) \"\n                        type=\"text\"\n                        name=\"Buhgalter\"\n                        required\n                    /><br/>\n               </label>\n               <label> телефон : <br/>\n                    <Input\n                        id=\"tel\"\n                        value= {tel}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" телефон \"\n                        type=\"text\"\n                        name=\"tel\"\n                        required\n                    /><br/>\n               </label><br/>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {BIK}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n\n             <button onClick={handleSubmit}>Submit</button>\n             <Dogovors/>\n             <div>\n                <BeautyText \n                    text={JSON.stringify(formData)}\n                    store={store}\n                />\n            </div>\n        </form>\n    );\n    };\n\n    const mapStateToProps = _state => ({\n        store: _state,\n        dogovorData: _state.dogovorData\n        //formOneState: _state.form.formOne\n    });\n    const mapDispatchToProps = _dispatch => ({\n        onDataReady: data => _dispatch(actions.formDataNew(data)),\n        onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(FormOne);   \n\n    \n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';    \n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../css/style.js'\n\n    const FormTwo = ({store,onDataReady,dogovorData,onDogovorData}) => {\n    const Dogovors = () => (\n        <button>\n            <Link \n                to=\"/dodoc/montaj\"\n                style={link}\n            >\n                CОЗДАТЬ ДОГОВОР\n            </Link>\n        </button>  \n    );\n        const [formData, setFormData] = useState({\n            Name: \"\",\n            FIO: \"\",\n            INN: \"\",\n            OGRNIP:\"\",\n            OKPO:\"\",\n            FactAdress:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            Name, \n            FIO,\n            INN,\n            OGRNIP,\n            OKPO,\n            FactAdress,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            //onDataReady(formData);\n            onDogovorData({...dogovorData,formData:formData});\n            console.log(\"formData after submit: \", formData);\n        };\n    console.log(\"store in formTwo : \", store)\n    return (\n        <form>\n            <br/>\n                <label> Название : <br/>\n                    <Input\n                        id=\"Name\"\n                        value= {Name}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название \"\n                        type=\"text\"\n                        name=\"Name\"\n                        required\n                    /><br/>\n               </label>\n               <label> ФИО : <br/>\n                    <Input\n                        id=\"FIO\"\n                        value= {FIO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ФИО \"\n                        type=\"text\"\n                        name=\"FIO\"\n                        required\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"text\"\n                        name=\"INN\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРНИП : <br/>\n                    <Input\n                        id=\"OGRNIP\"\n                        value= {OGRNIP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРНИП \"\n                        type=\"text\"\n                        name=\"OGRNIP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"text\"\n                        name=\"OKPO\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {BIK}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n            <Dogovors/>\n\n            <div>\n                <BeautyText text={JSON.stringify(store)}/>\n            </div>\n\n        \n        </form>\n    );\n    };\n\nconst mapStateToProps = _state => ({\n     store: _state,\n     dogovorData: _state.dogovorData\n    //yurlitzas: _state.home.yurlitzas,\n    //dogovorTypes: _state.home.dogovorTypes,\n    //dialects: _state.home.varDialects,\n    //formData: _state.home.formData\n});\nconst mapDispatchToProps = _dispatch => ({\n    //onYur: data => _dispatch(actions.yurlitso(data))\n    onDataReady: data =>\n        _dispatch(actions.zakazchikTypeTwoData(data)),\n    onDogovorData: data => _dispatch(actions.dogovorData(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(FormTwo); \n\n        \n    //export default FormTwo;\n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';\n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../css/style.js'\n\n    const FormThree = ({store,onDataReady,dogovorData,onDogovorData}) => {\n    const Dogovors = () => (\n        <button>\n            <Link \n                to=\"/dodoc/montaj\"\n                style={link}\n            >\n                CОЗДАТЬ ДОГОВОР\n            </Link>\n        </button>  \n    );\n        const [formData, setFormData] = useState({\n            NameInformal: \"\",\n            lastName: \"\",\n            firstName: \"\",\n            midName:\"\",\n            docType:\"\",\n            Serial:\"\",\n            number:\"\",\n            whoGave:\"\",\n            whenGave:\"\",\n            codeGave:\"\",\n            addressGave:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            NameInformal, \n            lastName,\n            firstName,\n            midName,\n            docType,\n            Serial,\n            number,\n            whoGave,\n            whenGave,\n            codeGave,\n            addressGave\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            onDogovorData({...dogovorData,formData:formData});\n            console.log(\"formData after submit: \", formData);\n        };\n    console.log(\"store in formThree : \", store)\n    return (\n        <form>\n            <br/>\n                <label> Название (неформальное) : <br/>\n                    <Input\n                        id=\"NameInformal\"\n                        value= {NameInformal}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название (неформальное) \"\n                        type=\"text\"\n                        name=\"NameInformal\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фамилия : <br/>\n                    <Input\n                        id=\"lastName\"\n                        value= {lastName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фамилия \"\n                        type=\"text\"\n                        name=\"lastName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Имя : <br/>\n                    <Input\n                        id=\"firstName\"\n                        value= {firstName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Имя \"\n                        type=\"text\"\n                        name=\"firstName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Отчество : <br/>\n                    <Input\n                        id=\"midName\"\n                        value= {midName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Отчество \"\n                        type=\"text\"\n                        name=\"midName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Вид документа : <br/>\n                    <Input\n                        id=\"docType\"\n                        value= {docType}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Вид документа \"\n                        type=\"text\"\n                        name=\"docType\"\n                        required\n                    /><br/>\n               </label>\n               <label> Серия : <br/>\n                    <Input\n                        id=\"Serial\"\n                        value= {Serial}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Серия \"\n                        type=\"text\"\n                        name=\"Serial\"\n                        required\n                    /><br/>\n               </label>\n               <label> Номер : <br/>\n                   <Input\n                       id=\"number\"\n                       value= {number}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Номер \"\n                       type=\"text\"\n                       name=\"number\"\n                       required\n                   /><br/>\n               </label>\n               <label> Кем выдан : <br/>\n                   <Input\n                       id=\"whoGave\"\n                       value= {whoGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Кем выдан \"\n                       type=\"text\"\n                       name=\"whoGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Дата выдачи : <br/>\n                   <Input\n                       id=\"whenGave\"\n                       value= {whenGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Дата выдачи \"\n                       type=\"text\"\n                       name=\"whenGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Код подразделения : <br/>\n                   <Input\n                       id=\"codeGave\"\n                       value= {codeGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Код подразделени \"\n                       type=\"text\"\n                       name=\"codeGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Адрес прописки : <br/>\n                   <Input\n                       id=\"addressGave\"\n                       value= {addressGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Адрес прописки \"\n                       type=\"text\"\n                       name=\"addressGave\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n            <Dogovors/>\n         \n            <div>\n                <BeautyText text={JSON.stringify(store)}/>\n            </div>\n         \n        \n        </form>\n    );\n    };\n\n        const mapStateToProps = _state => ({\n     store: _state,\n     dogovorData: _state.dogovorData\n    });\n    const mapDispatchToProps = _dispatch => ({\n       onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(FormThree); \n\n        \n    //export default FormThree;\n","import {createStore} from 'redux';\nimport reducer from './reducers'; \n\nconst store = createStore(reducer);\nconsole.log(\"store while initialise in index.js : \", store.getState());\n\nexport default store;\n\n","\n    export const dogSampleData = {\n        name:\"Договор монтажа № 2020В07\",\n        start:\"06.04.2020\",\n        end:\"06.10.2020\",\n        money:[315000, \"(триста пятнадцать тысяч рублей 00 копеек)\"],\n        systems:[\"вентиляции, кондиционирования\"],\n    };\n\n    export const formOrgDataSample = {\n        compFullName:\"ORGПОЛНОЕ ИМЯ КОМАНИИ\",\n        compShortName: \"ORGКОРОТКОЕ ИМЯ КОМПАНИИ\",\n        FIO:\"ORGИМЯ ФАМИЛИЯ ОТЧЕСТВО\", \n        INN:\"ORGИНН\",\n        KPP:\"ORGКПП\",\n        OGRN:\"ORGОГРН\",\n        OKPO:\"ORGОКРО\",\n        GosRegDate:\"ORGДАТА ГОС РЕГИСТРАЦИИ\",\n        YurAdress:\"ORGЮРИДИЧЕСКИЙ АДРЕСС\",\n        FactAdress:\"ORGФАКТИЧЕСКИЙ АДРЕСС\",\n        GenDirector:\"ORGГЕН ДИРЕКТОР\",\n        Buhgalter:\"ORGБУХГАЛТЕР\",\n        tel:\"ORGТЕЛЕФОН\",\n        bankName:\"ORGИМЯ БАНКА\",\n        BIK:\"ORGБИК\",\n        BillOne:\"ORGРАСЧЁТНЫЙ СЧЁТ\",\n        BillTwo:\"ORGКОРРЕСПОНДЕНДТСКИЙ СЧЁТ\"\n    };\n    export const formIPDataSample = {\n        Name:\"IPИМЯ ИП\",\n        FIO:\"IPФИО\",\n        INN:\"IPИНН\",\n        OGRNIP:\"IPОГРНИП\",\n        OKPO:\"IPОКРО\",\n        FactAdress:\"IPФАКТИЧЕСКИЙ АДРЕСС\",\n        bankName:\"IPИМЯ БАНКА\",\n        BIK:\"IPБИК\",\n        BillOne:\"IPРАСЧЁТНЫЙ СЧЁТ\",\n        BillTwo:\"IPКОРЕСПОНДЕНТСКИЙ СЧЁТ\"\n    };\n    export const formFLDataSample = {\n        NameInformal:\"FLНЕФОРМАЛЬНОЕ ИМЯ\",\n        lastName:\"FLФАМИЛИЯ\",\n        firstName:\"FLИМЯ\",\n        midName:\"FLОТЧЕСТВО\",\n        docType:\"FLВИД ДОКУМЕНТА\",\n        Serial:\"FLСЕРИЯ\",\n        number:\"FLНОМЕР\",\n        whoGave:\"FLВЫДАН\",\n        whenGave:\"FLДАТА ВЫДАЧИ\",\n        codeGave:\"FLКОД ПОДРАЗДЕЛЕНИЯ\",\n        addressGave:\"FLГДЕ ВЫДАН\"\n    };\n\n    export const serverData = {\n        varOne:{\n            CompName:\"ИП Попов Александр Петрович\",\n            FIO:\"Попов Александр Петрович\",\n            INN: \"1111111111111111\",\n            OGRN: \"11111111111111111\",\n            yurAdress: \"111111 Россия Домодедово г., 1 кв-л, 11\", \n            bank: \"Сбербанк\",\n            BIK: \"1111111111111111\",\n            firstBill: \"111111111111111111111111\",\n            secondBill: \"1111111111111111111111111\"\n        },\n        varTwo:{\n            CompName:\"ЮРЛИЦО ДВА\",\n            FIO:\"Клопов Алексей Ветрович\",\n            INN: '222222222222',\n            OGRN: \"22222222222222222222\",\n            yurAdress: \"22222222 Россия Довобродово г., 222 кв-л, 222\", \n            bank: \"Сбедбанк\",\n            BIK: \"222222222\",\n            firstBill: \"222222222222222222222\",\n            secondBill: \"22222222222222222222222\"\n        },\n        \"-\":{\n            CompName:\"-\",\n            FIO:\"-\",\n            INN: '-',\n            OGRN: \"-\",\n            yurAdress: \"-\", \n            bank: \"-\",\n            BIK: \"-\",\n            firstBill: \"-\",\n            secondBill: \"-\"\n        }     \n    };\n \n"," export const ClientDataORG = _d => {\n            return {\n                compFullName:_d.compFullName,\n                compShortName:_d.compShortName,\n                FIO:_d.FIO, \n                INN:_d.INN,\n                KPP: _d.KPP,\n                OGRN:_d.OGRN,\n                OKPO:_d.OKPO,\n                GosRegDate:_d.GosRegDate,\n                YurAdress:_d.YurAdress,\n                FactAdress:_d.FactAdress,\n                GenDirector:_d.GenDirector,\n                Buhgalter:_d.Buhgalter,\n                tel:_d.tel,\n                bankName:_d.bankName,\n                BIK:_d.BIK,\n                BillOne:_d.BillOne,\n                BillTwo:_d.BillTwo\n            };\n        };\n        // IP data -----------------------------------------------------\n        export const ClientDataIP = _d => {\n            return {\n                Name:_d.Name,\n                FIO:_d.FIO,\n                INN:_d.INN,\n                OGRNIP:_d.OGRNIP,\n                OKPO:_d.OKPO,\n                FactAdress:_d.FactAdress,\n                bankName:_d.bankName,\n                BIK:_d.BIK,\n                BillOne:_d.BillOne,\n                BillTwo:_d.BillTwo\n           };\n        };\n        // FL data -------------------------------------------------------\n        export const ClientDataFL = _d => {\n            return {\n                NameInformal:_d.NameInformal,\n                lastName:_d.lastName,\n                firstName:_d.firstName,\n                midName:_d.midName,\n                docType:_d.docType,\n                Serial:_d.Serial,\n                number:_d.number,\n                whoGave:_d.whoGave,\n                whenGave:_d.whenGave,\n                codeGave:_d.codeGave,\n                addressGave:_d.addressGave\n            };\n        };\n","import React from 'react';\n\n//  HEADER ELEMENTS -------------------------------------\n    // Org -----------------------------------------------\n    export const OrgHeader = (_clientData,_serverData) => (\n        <div> {_serverData.CompName}, в лице \n            директора {_serverData.FIO}, \n            действующего на основании Устава, с одной \n            стороны, именуемое в дальнейшем {\"Поставщик\"}\n            и {_clientData.compFullName}, в лице\n            генерального директора {_clientData.\n            FIO}, действующего(ей) на основании Устава, именуемое в \n            дальнейшем «Покупатель»,\n        </div>\n     );\n    // IP ---------------------------------------------\n    export const IPHeader = (_clientData,_serverData) => (\n        <div>  {_serverData.CompName}, в лице директора  {_serverData.FIO},\n            действующего на основании Устава, с одной стороны, именуемое в\n            дальнейшем \"Поставщик\" и {_clientData.Name}, в лице генерального\n            директора {_clientData.FIO}, действующего(ей) на основании\n            Устава, именуемое в дальнейшем «Покупатель»,\n        </div>\n    );\n    // FL\n    export const FLHeader = (_clientData,_serverData) => (\n        <div> {_serverData.CompName}, в лице директора {_serverData.FIO},   \n            действующего на основании Устава, с одной стороны, именуемое в\n            дальнейшем \"Поставщик\" и {_clientData.lastName}\n            {_clientData.firstName} {_clientData.midName},              \n            {_clientData.lastName} серия {_clientData.Serial} номер\n            {_clientData.number}, выдан {_clientData.whoGave} \n            {_clientData.whenGave} код подразделения    \n            {_clientData.codeGave}, именуемый(ая) в дальнейшем             \n            «Покупатель»,\n        </div>\n    );\n    \n\n    // FOOTERS ------------------------------------------------\n\n        // Org ------------------------------------------------\n        export const ClientOrgFooter = (_clientData,_serverData) => (\n            <div>\n                Покупатель:{_clientData.compShortName}<br/>\n                ИНН: {_clientData.INN}<br/>\n                КПП: {_clientData.KPP}<br/>\n                ОГРН: {_clientData.OGRN}<br/>\n                Юр.адрес: {_clientData.YurAdress}<br/>\n                Факт.адрес: {_clientData.FactAdress}<br/>\n                Банк: {_clientData.bankName}<br/>\n                БИК: {_clientData.BIK}<br/>\n                р/с: {_clientData.BillOne}<br/>\n                к/с: {_clientData.BillTwo}<br/>\n                <br/>\n                подписи<br/>\n                <br/>\n                {_clientData.compShortName}<br/>\n                <br/>\n                _____________/инициалы(Ген. директор {_clientData.FIO})/<br/>\n                <br/>\n                место печати (м.п.)<br/>\n           </div>\n        );\n        \n        // IP ------------------------------------------------\n        export const ClientIPFooter = (_clientData,_serverData) => (\n            <div>\n                Покупатель: {_clientData.Name}<br/>\n                ИНН: {_clientData.INN}<br/>\n                ОГРНИП: {_clientData.OGRNIP}<br/>\n                Факт.адрес: {_clientData.FactAdress}<br/>\n                Банк: {_clientData.bankName}<br/>\n                БИК: {_clientData.BIK}<br/>\n                р/с: {_clientData.BillOne} <br/>\n                к/с: {_clientData.BillTwo}<br/>\n                <br/>\n                подписи<br/>\n                <br/>\n                {_clientData.Name}<br/>\n                <br/>\n                _____________/(инициалы {(_clientData.FIO)})/<br/>\n                <br/>\n                _______________________________________________________\n            </div>\n        );\n        // FL ----------------------------------------------------------------------------\n        export const ClientFLFooter = (_clientData,_serverData) => (\n            <div>\n                Покупатель:<br/>\n                {_clientData.lastName} {_clientData.firstName}\n                {_clientData.midName}<br/>\n                {_clientData.docType} серия {_clientData.Serial}<br/>\n                номер {_clientData.number}<br/>\n                выдан {_clientData.whoGave} {_clientData.whenGave} <br/>\n                код подразделения {_clientData.codeGave}<br/>\n                <br/>\n                подписи<br/>\n                <br/>\n                _____________/(инициалы {_clientData.lastName}\n                {_clientData.firstName} <br/>      \n                {_clientData.midName})/<br/>\n            </div>\n        );\n        export const ServerFooter = _serverData=> {\n            return {\n                varOne:(        \n                    <div>\n                        Имя Компании:{_serverData.CompName}<br/>\n                        ФИО:{_serverData.FIO}<br/>\n                        ИНН: {_serverData.INN}<br/>\n                        ОГРН: {_serverData.OGRN}<br/>\n                        Юридический адрес: {_serverData.yurAdress}<br/>\n                        Банк: {_serverData.bank}<br/>\n                        БИК: {_serverData.BIK}<br/>\n                        р/с: {_serverData.firstBill}<br/>\n                        к/c: {_serverData.secondBill}<br/>\n                    </div>),\n                varTwo:(\n                    <div>\n                        Имя Компании:{_serverData.CompName}<br/>\n                        ФИО:{_serverData.FIO}<br/>\n                        ИНН: {_serverData.INN}<br/>\n                        ОГРН: {_serverData.OGRN}<br/>\n                        Юридический адрес: {_serverData.yurAdress}<br/>\n                        Банк: {_serverData.bank}<br/>\n                        БИК: {_serverData.BIK}<br/>\n                        р/с: {_serverData.firstBill}<br/>\n                        к/c: {_serverData.secondBill}<br/>\n                    </div>),\n                };\n        };\n        \n  \n","    \nimport React from 'react';\nimport {\n    dogSampleData,\n    formOrgDataSample,\n    formIPDataSample,\n    formFLDataSample,\n    serverData\n    } \n    from \"./MontajSampleData\";\nimport {ClientDataORG,ClientDataIP,ClientDataFL} from './FormMap';\nimport {OrgHeader,IPHeader,FLHeader,ClientOrgFooter,ClientIPFooter,ClientFLFooter,ServerFooter} from './HsFs';\nimport * as actions from '../actions';\n//import store from '../store';\nimport {connect} from 'react-redux';\nimport assert from \"../utils/assert\";\n\nconst HeadFootOut = ({store,selectors,formData}) => {\n\n\n\n    const DataMapper = () => {\n        const Cmap = {\n            \"организация\":\"ORG\",\n            \"ИП\":\"IP\",    \n            \"физ лицо\":\"FL\",\n            \"-\":\"-\"\n        };\n        const Smap = {\n            \"сервер один\":\"varOne\",\n            \"cервер два\":\"varTwo\",\n            \"-\":\"-\"        \n        };\n        const actualInput = {ct:selectors.clientTypeSel, cd:formData ,st:selectors.servTypeSel };\n        const defaultInput = {ct:\"FL\", cd:formFLDataSample ,st:\"varOne\"};\n        const input = (ai,di,cmap,smap) => {\n            const DefaultData = () => di;\n            const ActualData = () => {\n                return {\n                ct: cmap[ai.ct],\n                cd: ai.cd,\n                st: smap[ai.st]             \n                }\n            };\n            //return (ai.ct === ai.cd) ? DefaultData() : ActualData();\n            return (ai.ct === \"-\" && ai.cd === \"-\") ? DefaultData() : ActualData();\n        };/*\n        assert(\"Input is properly mapped to relevant object fields\",\n            input(\n                {ct:\"организация\", cd:\"actualTestData\" ,st:\"сервер один\"},\n                {ct:\"FL\", cd:\"defaultTestData\" ,st:\"varOne\"},\n                Cmap,\n                Smap),\n            {ct: \"ORG\",cd: \"actualTestData\",st: \"varOne\"}\n        );\n        */\n        return {\n            a : input(actualInput,defaultInput,Cmap,Smap).ct,\n            b : input(actualInput,defaultInput,Cmap,Smap).cd,\n            c : input(actualInput,defaultInput,Cmap,Smap).st\n        };\n    };\n\n    const a = DataMapper().a;\n    const b = DataMapper().b;\n    const c = DataMapper().c;\n    const d = serverData;\n\n    // 1 \n    const HFROuter = () => {\n        const ClientType = _clientType => _clientType; \n        // 2\n        const ClientData = (_clientType,_clientData) => {\n            const chooseData = {\n                ORG:_clientData => ClientDataORG(_clientData),\n                IP:_clientData => ClientDataIP(_clientData),\n                FL:_clientData => ClientDataFL(_clientData),\n                \"-\":_clientData => ClientDataFL(_clientData),\n            };\n            return chooseData[_clientType](_clientData);        \n        };\n        /*\n        assert(\"Data is properly mapped to local keys\",\n            ClientData(\"ORG\",\n                { compFullName:1, compShortName:2, FIO:3, INN:4, KPP:5, OGRN:6, OKPO:7, GosRegDate:8, YurAdress:9, \n                  FactAdress:10, GenDirector:11, Buhgalter:12, tel:13, bankName:14, BIK:15, BillOne:16, BillTwo:17 }        \n            ),\n            { compFullName:1, compShortName:2, FIO:3, INN:4, KPP:5, OGRN:6, OKPO:7, GosRegDate:8, YurAdress:9, \n              FactAdress:10, GenDirector:11, Buhgalter:12, tel:13, bankName:14, BIK:15, BillOne:16, BillTwo:17 }\n       );\n        */\n        const ServerData = (_serverType,_serverData) => {\n            return  _serverData[_serverType];\n        };\n        /*\n        assert(\"Relevant server data is returned by given key\",\n            ServerData(\"varOne\",{\"varOne\":\"VarOneData\",\"varTwo\":\"VarTwoData\"}),\n            \"VarOneData\"\n        );\n        */\n        console.log(\"hf return : \", {\n            ClientType:ClientType,\n            ClientData:ClientData,\n            ServerData:ServerData\n        });\n        return{\n            ClientType:ClientType,\n            ClientData:ClientData,\n            ServerData:ServerData\n        }\n    };\n\n    // 4\n    const DogData = _d => {\n        return {\n            name:_d.name,\n            start:_d.start,\n            end:_d.end,\n            money:_d.money,\n            systems:_d.systems \n        };\n    };\n        // INPUT:\n    const aa = HFROuter().ClientType(DataMapper().a);\n    const bb = HFROuter().ClientData(DataMapper().a,DataMapper().b);\n    const cc = HFROuter().ServerData(DataMapper().c,serverData);\n    const HeadFoot = (_a,_b,_c) => {\n        const HF = {\n            ORG: (_b,_c) => [OrgHeader(_b,_c),ClientOrgFooter(_b,_c),ServerFooter(_c)[c]],\n            IP:(_b,_c) => [IPHeader(_b,_c),ClientIPFooter(_b,_c),ServerFooter(_c)[c]],\n            FL:(_b,_c) => [FLHeader(_b,_c),ClientFLFooter(_b,_c),ServerFooter(_c)[c]],\n            \"-\":(_b,_c) => [FLHeader(_b,_c),ClientFLFooter(_b,_c),ServerFooter(_c)[c]]        \n        };\n        return HF[_a](_b,_c);\n    };\n    //const aa = ClientType(a);\n    //const bb = ClientData(a,b);\n    //const cc = ServerData(c,d);\n    return(\n        <div>\n            {console.log(\"{HeadFoot(aa,bb,cc)[0]} : \", HeadFoot(aa,bb,cc)[0])}\n            <div>{HeadFoot(aa,bb,cc)[0]}</div>\n            <hr/>\n            <div>{HeadFoot(aa,bb,cc)[1]}</div>\n            <hr/>\n            <div>{HeadFoot(aa,bb,cc)[2]}</div>           \n        </div>\n    );\n    };\n\n    const mapStateToProps = _state => ({\n        store: _state,\n        home: _state.home,\n        selectors: _state.dogovorData.selectors,\n        formData:_state.dogovorData.formData,\n        dogovorData: _state.dogovorData\n    });\n    const mapDispatchToProps = _dispatch => ({\n        onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(HeadFootOut);\n\n    \n","   \n    import React from 'react';\n    import MontajBody from \"./MontajBody\";\n    import {connect} from 'react-redux';\n    import store from '../store';\n    import * as actions from '../actions';\n    //import store from '../store';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../css/style.js';\n    import HeadFootOut from \"./HeadFoot\";\n    import MontajDefault from \"./MontajDefault\";\n\n    const divStyle = {width:'75vw',wordWrap:'break-word',fontFamily:'Roboto Mono'};\n    const headStyle = {textAlign:'center'};\n \n    \n    // HEADER COMPOSER -------------------------------------------------\n    //const MontajHead = _p => (\n    //    <div>{ setDogType(_p.serverType,_p.clientType).head }</div>\n    //);\n        const MontajHead = () => (\n\n            <HeadFootOut/>\n\n    );  \n    // FOOTER ELEMENTS --------------------------------------------------------\n\n    // FOOTER COMPOSER ----------------------------------------------\n\n\n    // \"varOne\", \"IP\", formData -> {header,footer}\n \n\n    //setDogType(\"varOne\",\"IP\",formIPDataSample);\n    //${setDogType(clientType,serverType,data).head}\n    //console.log(montaj(\"varOne\",\"IP\",formIPDataSample));\n    \n    // OUTPUT -----------------------------------------\n    const Montaj = ({store,dogovorData}) => (\n        <div>\n        <GlobalStyle/>\n        <Container>\n            <Grid>\n                 <AreaBox g={[3,2,11,5]} fd=\"row\" style={naked}>\n                    <ParamBox>\n                        <TextBox h={\"100%\"} w={\"80%\"}>\n                            <Text m={\"2vmin\"} style={divStyle}>\n                                {/*Object.keys(dogovorData.formData).map(e\n                                 =>(<div>{dogovorData.formData[e]}</div>))}<br/>*/}\n                                {/*JSON.stringify(dogovorData.selectors)*/}<br/>\n                                {/*JSON.stringify(dogovorData.formData)*/}<br/>\n                                {/*JSON.stringify(store.home)*/}\n                                <MontajHead />\n                                {/*<MontajFoot/>*/}\n                            </Text>\n                        </TextBox>\n                    </ParamBox>\n                </AreaBox>\n            </Grid>\n        </Container>\n        </div>\n    );\n\n    const mapStateToProps = _state => ({\n        store: _state,\n        dogovorData:_state.dogovorData\n        //home: _state.home,\n        //yurlitzas: _state.home.yurlitzas,\n        //dogovorTypes: _state.home.dogovorTypes,\n        //formOneData: _state.form.formOne,\n        //formTwoData: _state.form.formTwo,\n        //formThreeData: _state.form.formThree\n    });\n    //const mapDispatchToProps = _dispatch => ({\n    //    onYur: data => _dispatch(actions.yurlitso(data))\n    //});\n\n    export default connect (\n        mapStateToProps//,\n        //mapDispatchToProps\n    )(Montaj);\n\n    //export default Montaj;\n","\n    import React,{useState,useEffect} from 'react';\n    import store from '../store';\n    import {connect} from 'react-redux';\n    import * as actions from '../actions';\n    import {\n    dogSampleData,\n    formOrgDataSample,\n    formIPDataSample,\n    formFLDataSample,\n    serverData\n    } \n    from \"./MontajSampleData\";  \n    \n    const MontajDefault = ({dogovorData,onDogovorData}) => { \n            // INIT\n        const [selection, setSelection] = useState({\n            objNameSel:\"Lipki\",\n            dogTypeSel:\"PROJ\",\n            sysTypeSel:\"WHO KNOWS\",\n            servTypeSel:\"varTwo\",\n            clientTypeSel:\"IP\"    \n        });\n        const [formData,setFormData] = useState(formOrgDataSample);\n        const [hub,setHub] = useState({\"\":\"\"});\n        const output = {...dogovorData,selectors:{...selection,hub},formData:formData};\n        //useEffect(()=>onDogovorData(output));\n\n    return(null)\n    };\n\n    const mapStateToProps = _state => ({\n        //dogovorData: _state.dogovorData\n    });\n    const mapDispatchToProps = _dispatch => ({\n        onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(MontajDefault);\n\n    \n \n\n    \n","   \n    import React, {useState,useEffect} from 'react';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,\n        NavbarDropdown,NavbarDropdownContent,link\n    } from '../css/style.js';\n    const Ownerdic = () => (\n        <div>\n        <GlobalStyle/>\n        <Container>\n            <Grid>\n                <AreaBox g={[2,2,10,5]} fd=\"column\"> \n                    <div>СПРАВОЧНИК НАШИХ ФИРМ:</div>\n                    <select id=\"ownerDicSelector\">\n                        <option value=\"OOO UKI\">ООО УКИ</option>\n                        <option value=\"IP Popov\">ИП Попов</option>\n                    </select>\n                </AreaBox>\n            </Grid>\n        </Container>\n        </div>\n    );\n    export default Ownerdic;\n\n","   \n    import React, {useState,useEffect} from 'react';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,\n        NavbarDropdown,NavbarDropdownContent,link\n    } from '../css/style.js';\n    import { Link } from 'react-router-dom';\n    import * as actions from '../actions';\n    import {connect} from 'react-redux';\n    import FormOne from \"./FormOne\";\n    import FormTwo from \"./FormTwo\";\n    import FormThree from \"./FormThree\";\n    import Montaj from \"./Montaj\";\n    import Ownerdic from \"./Ownerdic\";\n    const {newDogGen,nameExtractor} = require(\"../utils/dognums\");\n\n    const Home = (\n        {\n            store,\n            home,\n            formData,\n            newDogData,\n            onDogovorData,\n            dogovorData\n        }) => { \n        console.log(\"store inside home : \", store);\n        console.log(\"form data : \", formData);\n        console.log(\"new dogovor data : \", newDogData);\n\n//  STATE -------------------------------------------------------------\n    \n    \n    // INIT\n    const [selection, setSelection] = useState({\n        objNameSel:\"\",\n        dogTypeSel:\"\",\n        sysTypeSel:\"\",\n        servTypeSel:\"\",\n        clientTypeSel:\"\"    \n    });\n    const [hub,setHub] = useState({});\n    const output = {...dogovorData,selectors:{...selection,hub}};\n    \n    console.log(\"output : \", output);\n\n//  REDUCERS -----------------------------------------------------------------------------\n\n    const updateSelection = event => {\n        setSelection({\n          ...selection,\n          [event.target.name]: event.target.value\n        });\n        onDogovorData(output);\n        console.log(\"updateSelection : \", selection);\n    }; \n    const updateHub = event => {\n        const target = event.target;      \n        const value = target.value === \"on\" ? target.checked : !target.checked;\n        const name = target.name;\n        setHub({...hub,[name]: value});\n    }; \n    const { objNameSel,\n            dogTypeSel,\n            sysTypeSel,\n            servTypeSel,\n            clientTypeSel,\n            } = selection;\n\n//  SAMPLE HARDCODED DATA VECTORS -----------------------------------------------------------------------\n\n    const objectsDataVector = [\"Липки\",\"Лапки\",\"Пипки\"];\n    const dogovorsDataVector  = [\n        \"Договор проектирования\",\n        \"Договор поставки\",\n        \"Договор монтажа\",\n        \"Договор сервисного обслуживания\",\n        \"Договор субподряда\"\n    ];\n    const systemsDataVector = [\n        \"Вентиляция и кондиционирование\", \n        \"Отопление\",  \n        \"Котельная\",  \n        \"Водоснабжение и канализация\",  \n        \"ЭОМ\", \n        \"Слаботочные сети\",\n        \" Автоматизация\"\n    ];\n    const serversDataVector = [\"сервер один\", \"сервер два\"];\n    const clientDataVector = [\"организация\",\"ИП\",\"физ лицо\"];\n\n// ----------------------------------------------------------------------------------------------------------\n\n    const ObjectSelector = () => (\n        <label for=\"pet-select\"> выбери объект : <br/> \n        <select\n            value={objNameSel} \n            id=\"objNameSel\" \n            name=\"objNameSel\" \n            onChange={e =>updateSelection(e)}\n        >\n            <option value=\"\"> - - - - - - - - - - - - - - - </option>\n            {objectsDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n        </select><br/>\n        </label>\n    );\n    const DogovorSelector = () => (\n       <label for=\"pet-select\"> выбери тип договора : <br/>\n        <select\n            value={dogTypeSel} \n            id=\"dogTypeSel\" \n            name=\"dogTypeSel\" \n            onChange={e =>updateSelection(e)}\n        >\n            <option value=\"\"> - - - - - - - - - - - - - - - </option>\n            {dogovorsDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n        </select><br/> \n        </label>\n    );\n    const ServerSelector = () => (\n        <div>\n            <label for=\"pet-select\"> выбери тип сервера : </label><br/>\n            <select\n                value={servTypeSel} \n                id=\"servTypeSel\" \n                name=\"servTypeSel\" \n                onChange={e =>updateSelection(e)}\n            >\n                <option value=\"\"> - - - - - - - - - - - - - - - </option>\n                {serversDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n            </select><br/>\n        </div>\n    );\n\n    const ClientSelector = () => (\n        <div>\n           <label for=\"pet-select\"> выбери тип клиента : </label><br/>\n            <select\n                value={clientTypeSel} \n                id=\"clientTypeSel\" \n                name=\"clientTypeSel\" \n                onChange={e =>updateSelection(e)}\n            >\n                <option value=\"\"> - - - - - - - - - - - - - - - </option>\n                {clientDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n            </select><br/> \n        </div>\n    );\n    const SystemSelector = () => (\n        <div>\n            {systemsDataVector.map(e => \n                (<div>                    \n                <input\n                    checked={hub[`${e}`]}\n                    name={`${e}`}\n                    type=\"checkbox\"\n                    onChange={e =>updateHub(e)}\n                /><label>{`${e}`}</label>\n                </div>)\n             )}          \n        </div>\n    );\n\n    const FormTab = _props => {\n        return (clientTypeSel===\"организация\"\n                    ? <FormOne/> \n                    : clientTypeSel===\"ИП\"\n                        ? <FormTwo/>\n                        : clientTypeSel===\"физ лицо\"\n                            ? <FormThree/> \n                            : \"тип контрагента не выбран\"\n            );\n    };\n    const [dataSent,setDataSent] = useState(false);\n    const Dogovors = () => (\n        <button type=\"button\" disabled=\"false\">\n            <Link \n                to=\"/dodoc/montaj\"\n                style={link}\n            >\n                CОЗДАТЬ ДОГОВОР\n            </Link>\n        </button>  \n    );\n \n     \n   \n//  OUTPUT COMPONENT ------------------------------------------\n\n    const Basic = () => (\n        <div>\n        <GlobalStyle/>\n        <Container>\n            <Grid>\n                 <AreaBox g={[2,2,6,4]} fd=\"column\" style={naked}>  \n                     <TextBox h={\"100%\"}>\n                         <Text m={\"2vmin\"}>\n                             <ObjectSelector/>\n                             <DogovorSelector/>\n                             <SystemSelector/>\n                             <ServerSelector/>\n                             <ClientSelector/>\n                         </Text>\n                     </TextBox>\n                     <button onClick={()=>onDogovorData(output)}>SEND SELECTORS DATA</button>\n                     {/*dataSent==true ? <Dogovors/> : \"\"*/}\n                    \n                 </AreaBox>\n                 <AreaBox g={[6,2,11,5]} fd=\"row\" style={naked}>\n                    <ParamBox>\n                        <TextBox h={\"100%\"}>\n                            <Text m={\"2vmin\"}>\n                                <FormTab/>\n                            </Text>\n                        </TextBox>\n                    </ParamBox>\n                </AreaBox>\n            </Grid>\n        </Container>\n        </div>\n        );\n        return <Basic/>;\n}\n\nconst mapStateToProps = _state => ({\n    store: _state,\n    home: _state.home,\n    formData: _state.formDataNew,\n    dogovorData: _state.dogovorData\n});\nconst mapDispatchToProps = _dispatch => ({\n    onDogovorData: data => _dispatch(actions.dogovorData(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(Home);\n\n//export default Home;\n\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Montaj from './components/Montaj';\nimport Ownerdic from './components/Ownerdic';\n\nfunction App() {\n  return (\n    <main className=\"container\" >\n        <Switch id=\"main\">\n            <Route exact path=\"/dodoc/\" \n                component={Home} />\n            <Route exact path=\"/dodoc/ownerdic\" \n                component={Ownerdic} />\n            <Route exact path=\"/dodoc/montaj\" \n                component={Montaj} />           \n        </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport reducer from './reducers'; \nimport App from './App';\nimport store from './store';\n\n//const store = createStore(reducer);\n//console.log(\"store while initialise in index.js : \", //store.getState());\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nif (window.Cypress) {\n    window.store = store;\n}\n"],"sourceRoot":""}