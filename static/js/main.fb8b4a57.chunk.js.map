{"version":3,"sources":["css/Roboto_Mono/RobotoMono-Medium.ttf","utils/dognums.js","utils/assert.js","state.js","reducers/home.js","reducers/formOne.js","reducers/formTwo.js","reducers/formThree.js","reducers/index.js","constants/actionTypes.js","css/style.js","components/BeautyText.js","components/FormOne.js","actions/index.js","components/FormTwo.js","components/FormThree.js","components/Carousel.js","components/Home.js","App.js","index.js"],"names":["module","exports","assert","require","dogs","date","link","name","nameExtractor","out","Object","keys","map","dog","key","push","latestExtractor","_dogName","length","match","sampleNy","year","month","day","newDogGen","_date","sampleDate","_letter","_statement","_function","_positiveOutcome","JSON","stringify","console","log","state","hello","yurlitzas","dogovorTypes","currentVars","varDialects","basic","make","sell","formData","zakazchikTypes","z1","sampleData","type","compFullName","compShortName","INN","KPP","OGRN","OKPO","GosRegDate","YurAdress","FactAdress","GenDirector","Buhgalter","tel","bankName","BIK","BillOne","BillTwo","z2","Name","FIO","OGRNIP","z3","NameInformal","lastName","firstName","midName","docType","Serial","number","whoGave","whenGave","codeGave","addressGave","initialState","window","Cypress","rootReducer","combineReducers","home","action","yurlitso","payload","dogovorType","form","formOne","zakazchikTypeOneData","formTwo","zakazchikTypeTwoData","formThree","zakazchikTypeThreeData","GlobalStyle","createGlobalStyle","Container","styled","div","Grid","AreaBox","p","fd","g","b","ParamBox","w","h","Text","m","Button","TextBox","img","Input","input","naked","Font","register","family","src","font","styles","StyleSheet","create","page","margin","fontFamily","display","wordBreak","border","hyphens","section","padding","content","sampleDataOne","sampleDataTwo","zakazchik","template","_data","data","data_to_text","_store","hold","parse","PdfDocument","_props","style","text","BeautyText","store","document","fileName","blob","url","loading","error","connect","_state","formOneState","_dispatch","onDataReady","useState","setFormData","updateFormData","event","target","value","id","onChange","e","placeholder","required","maxlength","minlength","onClick","preventDefault","Carousel","count","steps","Beerpic","components","CarouselProcess","dialects","onYur","_yurlitso","idScope","i","setCount","obj","setObj","setYurlitso","dogType","setDogType","setZakazchik","dogsList","setDogsList","setDogs","objects","Elem","set","ObjTab","YurTab","FormTab","zakTypes","Zakazchik","dogTypesData","Dogovors","concat","DogTab","handlePrev","_stepId","handleNext","PrevButton","NextButton","ButtonsBox","Basic","App","className","exact","path","component","Home","createStore","reducer","getState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fb8b4a57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RobotoMono-Medium.7cfbd428.ttf\";","\n//  IMPORTS ---------------------------------------------------------------------------------------\n\n    const assert = require(\"./assert\");\n    \n//   TASK -----------------------------------------------------------------------------------------\n\n    /*\n    В процессе создания договоров им присваивается {название} по формуле:\n    + 1. Договор проектирования. {Договор проектирования №{текущийгод}А{порядковыйномер} от {дд-месяц-гггг}}\n    + 2. Договор поставки. {Договор поставки №{текущийгод}Б{порядковыйномер}. от {дд-месяц-гггг}}\n    + 3. Договор монтажа {Договор монтажа №{текущийгод}В{порядковыйномер}. от {дд-месяц-гггг}}\n    + 4. Договор сервисного обслуживания. {Договор сервисного обслуживания №{текущийгод}СО{порядковыйномер} от {дд-месяц-гггг}}\n    + 5. Договор субподряда {Договор монтажа №{текущийгод}ВСУБ{порядковыйномер}. от {дд-месяц-гггг}}\n\n    + С началом нового года {порядковый_номер} обнуляется и счет начинается заново с 1.\n    + {название} является названием файла при выгрузке в формате {название}.pdf или {название}.doc\n    */\n\n//  INPUT DATA: DOGS data (DOGOVORS) -------------------------------------------------------------------\n\n    const dogs = {\n        \"Договор проектирования\":\n            {\n                \"1999_1\": {date:\"1999/2/2\", link:\"link\", name: \"Договор проектирования №1999А1. от 1999/2/2\"},\n                \"1999_2\": {date:\"1999/12/5\", link:\"link\", name: \"Договор проектирования №1999A2. от 1999/12/5\"},\n                \"2000_1\": {date:\"2000/24/7\", link:\"link\", name: \"Договор проектирования №2000A1. от 2000/24/7\"}\n            },\n        \"Договор поставки\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор поставки №1999Б1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор поставки №1999Б2. oт 1999/12/5\"},\n                \"2019_2\": {date:\"24/7/2000\", link:\"link\", name: \"Договор поставки №2019Б2. от 2019/24/7\"}\n            },        \n        \"Договор монтажа\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор монтажа №1999В1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор монтажа №1999В2. от 1999/12/5\"},\n                \"2000_3\": {date:\"24/7/2000\", link:\"link\", name: \"Договор монтажа №1999В3. от 2000/24/7\"}\n            },\n        \"Договор сервисного обслуживания\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор сервисного обслуживания №1999СО1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор сервисного обслуживания №1999СО2. от 1999/12/5\"},\n                \"2000_4\": {date:\"24/7/2000\", link:\"link\", name: \"Договор сервисного обслуживания №2000СО4. от 2000/24/7\"}\n            },\n        \"Договор субподряда\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор субподряда №1999ВСУБ1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор субподряда №1999ВСУБ2. от 1999/12/5\"},\n                \"2000_5\": {date:\"24/7/2000\", link:\"link\", name: \"Договор субподряда №2000ВСУБ5. от 2000/24/7\"}        \n            }\n    };\n\n//  FUNCTIONS ----------------------------------------------------------------------------------------------------\n\n    //  1 NAME EXTRACTOR ---------------------------------------------------------------------------------------------\n\n    const nameExtractor = (_dogs=dogs) => {\n        let out = [];\n        Object.keys(dogs).map(dog => {for (let key in dogs[dog]) out.push(dogs[dog][key].name)});\n        return out;\n    };\n    assert(\n        \"Name extractor extracts names\",\n        nameExtractor(),\n        [\n            \"Договор проектирования №1999A1. от 1999/2/2\",\n            \"Договор проектирования 1999A2. от №1999/12/5\",\n            \"Договор проектирования №2000A1. от 2000/24/7\",\n            \"Договор поставки №1999Б1. от 1999/2/2\",\n            \"Договор поставки 1999Б2. от №1999/12/5\",\n            \"Договор поставки №2019Б2. от 2019/24/7\",\n            \"Договор монтажа №1999В1. от 1999/2/2\",\n            \"Договор монтажа 1999В2. от №1999/12/5\",\n            \"Договор монтажа №1999В3. от 2000/24/7\",\n            \"Договор сервисного обслуживания №1999СО1. от 1999/2/2\",\n            \"Договор сервисного обслуживания 1999СО2. от №1999/12/5\",\n            \"Договор сервисного обслуживания №2000СО4. от 2000/24/7\",\n            \"Договор субподряда №1999ВСУБ1. от 1999/2/2\",\n            \"Договор субподряда 1999ВСУБ2. от №1999/12/5\",\n            \"Договор субподряда №2000ВСУБ5. от 2000/24/7\"\n        ]\n    );\n\n    //  2 LATEST DOGOVORTYPE NUMBER EXTRACTOR ------------------------------------------------------------------------------\n\n    const latestExtractor = _dogName => {\n        let keys = Object.keys(dogs[_dogName]); \n        let out = keys[keys.length-1].match(/(?<=\\_)\\d+/g)[0];\n        return out;\n    };\n    assert(\n        \"IN: dogType & dogs pool, OUT: latest #num of required dogtype \",\n        latestExtractor(\"Договор проектирования\"),\n        \"1\"\n    );\n    \n    //  3 NEW DOGOVOR GENERATOR ---------------------------------------------------------------------------------------\n\n    const sampleNy = { year:2020, month:1, day:1};\n    \n    const newDogGen = (_dogName,_date=sampleNy) => {\n        const sampleDate = `${_date.year}/${_date.day}/${_date.month}`;   \n        const out = _letter => {\n            return ( (_date.month === 1 && _date.day === 1) && (latestExtractor(_dogName) === 1)\n                ? `${_dogName} №${_date.year}${_letter}${+latestExtractor(_dogName)+1}. ot ${sampleDate}`\n                : `${_dogName} №${_date.year}${_letter}1. ot ${sampleDate}` \n            );\n        };\n        switch(_dogName){\n            case \"Договор проектирования\": return out(\"A\");\n            case \"Договор поставки\": return out(\"Б\");\n            case \"Договор монтажа\": return out(\"В\");\n            case \"Договор сервисного обслуживания\": return out(\"СО\");\n            case \"Договор субподряда\": return out(\"ВСУБ\");\n            default : return \"who knows\";\n        };\n        \n    };\n    assert(\n            \"IN: dog name, OUT: new dog name\",\n            newDogGen(\"nameOne\",sampleNy),\n            \"nameOne №2020A2. ot 2020/1/1\" // prev = \"nameOne 2000 A1 2000/24/7\"\n        );\n    assert(\n        \"IN: dog name, OUT: new dog name\",\n        newDogGen(\"nameTwo\",sampleNy),\n        \"nameTwo №2020B1. ot 2020/1/1\" //prev === \"nameTwo 2019 B2 2019/24/7\"\n    );\n\n//  EXPORTS ---------------------------------------------------------------------------------------------------------\n\n    exports.newDogGen = newDogGen;\n    exports.nameExtractor = nameExtractor;\n\n","\n    const assert = (_statement,_function,_positiveOutcome) => {\n        return(\n                JSON.stringify(_function) === JSON.stringify(_positiveOutcome) \n                ? console.log(`YES! ${_statement}, ooph!`) \n                : console.log(`NOPE! ${_statement} works WRONG!!!`)\n        );\n    };\n\n    //export {assert};\n    module.exports = assert;\n","const z1 =\n{ \n    sampleData:{type:\n        {\n            compFullName: \"-\",\n            compShortName: \"-\",\n            INN: \"-\",\n            KPP:\"-\",\n            OGRN:\"-\",\n            OKPO:\"-\",\n            GosRegDate:\"-\",\n            YurAdress:\"-\",\n            FactAdress:\"-\",\n            GenDirector:\"-\",\n            Buhgalter:\"-\",\n            tel:\"-\",\n            bankName:\"-\",\n            BIK:\"-\",\n            BillOne:\"-\",\n            BillTwo:\"-\"\n        }\n    }\n}\nconst z2 = \n{\n    Name: \"-\",\n    FIO: \"-\",\n    INN: \"-\",\n    OGRNIP:\"-\",\n    OKPO:\"-\",\n    FactAdress:\"-\",\n    bankName:\"-\",\n    BIK:\"-\",\n    BillOne:\"-\",\n    BillTwo:\"-\"\n};\nconst z3 = \n{\n    NameInformal: \"-\",\n    lastName: \"-\",\n    firstName: \"-\",\n    midName:\"-\",\n    docType:\"-\",\n    Serial:\"-\",\n    number:\"-\",\n    whoGave:\"-\",\n    whenGave:\"-\",\n    codeGave:\"-\",\n    addressGave:\"-\"\n};\nconst formDefaultData = \"formDefaultData\";\n\nconst dialects = {\n    basic:\n    [\n        \"имя нашей компании\",\n        \"имя директора нашей компании\",\n        \"имя их компании\",\n        \"имя директора их компании\"\n    ],\n    make:\n    [\n        \"имя подрядчика\",\n        \"имя директора подрядчика\",\n        \"имя звквзчика\",\n        \"имя директора заказчика\"\n    ],\n    sell:\n    [\n      \"имя поставщик\",\n      \"имя директора поставщика\",\n      \"имя покупателя\",\n      \"имя директора покупателя\"\n    ]\n  \n};\n\nconst state = \n{\n    hello:\"hello\",\n    yurlitzas: [ \"Добровент\", \"Доброклад\", \"Доброход\" ],\n    dogovorTypes:[\"проектирование\",\"поставка\"],\n    currentVars:\n    [\n        \"ourCompanyName\",\n        \"ourDirectorName\",\n        \"theirCompanyName\",\n        \"theirDirectorName\"\n    ],\n    varDialects: dialects,\n    formData: formDefaultData,\n    zakazchikTypes: {z1:z1,z2:z2,z3:z3}\n};\n\nexport {state};\n","import {state} from '../state.js';\nimport {\n    YURLITSO,\n    DOGOVOR_TYPE,\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case YURLITSO:\n            return { yurlitso: action.payload };\n        case DOGOVOR_TYPE:\n            return { dogovorType: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPEONE_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPEONE_DATA:\n            return { zakazchikTypeOneData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPETWO_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPETWO_DATA:\n            return { zakazchikTypeTwoData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPETHREE_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPETHREE_DATA:\n            return { zakazchikTypeThreeData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {combineReducers} from 'redux';\nimport home from './home';\nimport formOne from './formOne';\nimport formTwo from './formTwo';\nimport formThree from './formThree';\n\nconst rootReducer = combineReducers({\n    home,\n    form:combineReducers({formOne,formTwo,formThree}),\n});\n\nexport default rootReducer;\n","export const YURLITSO = \"YURLITSO\";\nexport const DOGOVOR_TYPE = \"DOGOVOR_TYPE\";\nexport const VARIABLE = \"VARIABLE\";\nexport const ZAKAZCHIK_TYPEONE_DATA = \"ZAKAZCHIK_TYPEONE_DATA\";\nexport const ZAKAZCHIK_TYPETWO_DATA = \"ZAKAZCHIK_TYPETWO_DATA\";\nexport const ZAKAZCHIK_TYPETHREE_DATA = \"ZAKAZCHIK_TYPETHREE_DATA\";\n","import styled from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0px;\n    background:white;\n  }\n`;\nconst Container = styled.div`\n    width:100vw;\n    height:100vh;\n`; \nconst Grid = styled.div`\n    display:grid;\n    grid-template-columns: 5% repeat(3,30%) 5%;\n    grid-template-rows: 2.5vh repeat(8,11.9%) 2.5vh;\n    width:100%;\n    height:100%;\n    background:white;\n`;\nconst AreaBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"column\"};\n    grid-area:${p=> p.g[0]+\"/\"+p.g[1]+\"/\"+p.g[2]+\"/\"+p.g[3]};\n    justify-content:center;\n    align-items:center;\n    border:${p=> p.b || \"0.5px solid black\"};\n    padding:0px;\n    overflow-wrap:normal;\n    background:White;\n`;\nconst ParamBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"row\"};\n    width:${p => p.w || '100%'};\n    height:${p => p.h || '100%'};\n    justify-content:center;\n    align-items:center;\n    overflow-wrap:normal;\n    overflow:scroll;\n`;\nconst Text = styled.div`\n    margin:${p => p.m};\n`;\nconst Button = styled.div`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    margin:1vmin;\n    padding:5vmin;\n    width:30vw;\n    border:0.5vmin solid DarkSlateGrey;    \n`;\nconst Img = styled.img`\n    width:auto;\n    height:80%;\n`;\nconst TextBox = styled(ParamBox)`\n    display:flex;\n    flex-wrap:wrap;\n    width:100%;\n    height:${p => p.h || \"66%\"};\n    justify-content:flex-start;\n    align-items:flex-start;\n    font-size:1rem;\n    margin:1vmin;\n    overflow:scroll;\n`;\nconst Input = styled.input`\n    color: black;\n    border: 1px solid darkGrey;\n    margin: 0 0 5px 0;\n    width: 300%;\n    background-color: lightGrey;\n        \n    &:hover & {\n        background-color: white;\n        box-shadow: 0px 4px 20px 0px rgba(0, 0, 0, 0.05);\n    }\n\n`\n\nconst Selectable = styled.b`\n    &:hover {\n        background-color: yellow;\n    }\n`\nconst link = {\n  'color': 'black',\n  'text-decoration': 'none'\n};\nconst ghost = {\n  'color': 'grey',\n  'opacity': '50%'\n};\nconst naked = {\n  'border': '0px',\n};\n\nexport {\n    GlobalStyle,Container,Grid,AreaBox,ParamBox,TextBox,Input,Text,Button,Img,link,naked,Selectable,ghost\n}\n","\n    import React from 'react';\n    import font from '../css/Roboto_Mono/RobotoMono-Medium.ttf'\n    import {\n        Page,\n        Text,\n        View,\n        Document,\n        StyleSheet,\n        PDFDownloadLink,\n        Font,\n    } from \"@react-pdf/renderer\";\n\n    // Register font\n    Font.register({\n      family: 'Roboto Mono',\n      src: font\n    })\n\n    const styles = StyleSheet.create({\n        page: {\n\t        margin: \"2em auto\",\n            fontFamily: \"Roboto Mono\",\n            display: \"flex\",\n            wordBreak: \"break-word\",\n            border:\"1px solid black\",\n\t        hyphens: \"auto\"\n        },\n        section: {\n            margin: 10,\n            padding: 10,\n        },\n        content: {\n            display: \"block\"\n        }\n    });\n\n    let sampleDataOne = {type:\n        {\n            compFullName: \" - \",\n            compShortName: \" - \",\n            INN: \" - \",\n            KPP: \" - \",\n            OGRN: \" - \",\n            OKPO: \" - \",\n            GosRegDate: \" - \",\n            YurAdress: \" - \",\n            FactAdress: \" - \",\n            GenDirector: \" - \",\n            Buhgalter: \" - \",\n            tel: \" - \",\n            bankName: \" - \",\n            BIK: \" - \",\n            BillOne: \" - \",\n            BillTwo: \" - \",\n        }\n    };\n    let sampleDataTwo = {type:\n        {\n            Name: \"-\",\n            FIO: \"-\",\n            INN: \"-\",\n            OGRNIP:\"-\",\n            OKPO:\"-\",\n            FactAdress:\"-\",\n            bankName:\"-\",\n            BIK:\"-\",\n            BillOne:\"-\",\n            BillTwo:\"-\"\n        }\n    };\n    let sampleDataThree = {type:\n        {\n            NameInformal: \"-\",\n            lastName: \"-\",\n            firstName: \"-\",\n            midName:\"-\",\n            docType:\"-\",\n            Serial:\"-\",\n            number:\"-\",\n            whoGave:\"-\",\n            whenGave:\"-\",\n            codeGave:\"-\",\n            addressGave:\"-\"\n        }\n    };\n    \n    const templateOne = (_data = sampleDataOne.type) => {\n        return (\"Нашакомпания ,в лице директора ФИОдиректора Нашей Компании действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" +\n        _data.compFullName + \" , в лице генерального директора  ФИО второй стороны , действующего(ей) на основании Устава, именуемое в дальнейшем 'Покупатель',РЕКВИЗИТЫ СТОРОН: \" + \n        \" Покупатель: \" + _data.compShortName  +\n        \" ИНН: \" + _data.INN +\n        \" КПП: \" + _data.KPP +\n        \" ОГРН: \" + _data.OGRN + \n        \" Юр.адрес: \" + _data.YurAdress +\n        \" Факт.адрес: \" + _data.FactAdress +\n        \" Банк: \" +  _data.bankName +\n        \" БИК: \" +  _data.BIK +\n        \" р/с: \" +  _data.BillOne +\n        \" к/с: \" +  _data.BillTwo +\n        \" \")\n    };\n    const templateTwo = (_data = sampleDataTwo.type) => {\n        return(\"Наша компания, в лице директора ФИОдиректора нашей компании, действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" + _data.Name + \" , в лице генерального директора \" + _data.FIO + \", действующего(ей) на основании Устава, именуемое в дальнейшем 'Покупатель', РЕКВИЗИТЫ СТОРОН: Покупатель: \" + \n_data.Name + \" ИНН: \" + _data.INN + \" ОГРНИП: \" + _data.OGRNIP + \" Факт.адрес: \" +  _data.FactAdress + \" Банк: \" + _data.bankName +\n\" БИК: \" +  _data.BIK + \" р/с: \" + _data.BillOne + \" к/с: \" +  _data.BillTwo + \" подписи \" + _data.Name + \" _/инициалы(ФИО)/ \" + _data.FIO + \"\"\n        )\n    };\n    const templateThree = (_data = sampleDataTwo.type) => {\n        return(\"Нашакомпания, в лице директора ФИОдиректора нашей компании, действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" + _data.lastName + \" \" + _data.firstName + \" \" + _data.midName + \" , \" + _data.docType + \" серия \" + _data.Serial + \" номер \" +  _data.number + \" , выдан \" +  _data.whoGave + \" \" +  _data.whenGave + \" код подразделения \" +  _data.codeGave + \" , именуемый(ая) в дальнейшем 'Покупатель', РЕКВИЗИТЫ СТОРОН: Покупатель: \"  + _data.lastName + \" \" + _data.firstName + \" \" + _data.midName + \" , \" + _data.docType + \" серия \" + _data.Serial + \" номер \" +  _data.number + \" , выдан \" +  _data.whoGave + \" \" +  _data.whenGave + \" код подразделения \" +  _data.codeGave + \" подписи \" + \"_/инициалы(ФИО)/\"\n        );\n    };\n\n    const zakazchik = {\n        one:{ template: templateOne, data: sampleDataOne },\n        two:{ template: templateTwo, data: sampleDataTwo },\n        three:{ template: templateThree, data: sampleDataThree }\n    };\n\n    const data_to_text = (_data,_store) => {\n        console.log(\"data_to_text on load : \", _store);\n        const hold = Object.keys(JSON.parse(_data))[0];\n        switch (hold) {\n            case 'zakazchikTypeOneData':\n                return JSON.stringify(zakazchik.one.template(JSON.parse(_data)[hold]));\n            case 'zakazchikTypeTwoData':\n                return JSON.stringify(zakazchik.two.template(JSON.parse(_data)[hold]));\n            case 'zakazchikTypeThreeData':\n                return JSON.stringify(zakazchik.three.template(JSON.parse(_data)[hold]));\n            default:\n                return \"whatever\";\n        }\n    };\n\n    const PdfDocument = _props => (\n        <Document>\n            <Page style={styles.page}>\n                <View style={styles.section}>\n                    <Text style={styles.content}>\n                        {_props.text}\n                    </Text>\n                </View>\n            </Page>\n        </Document>\n    );\n\n    const BeautyText = (_props) => (\n      <div>\n        <PdfDocument text={data_to_text(_props.text,_props.store)}/>\n        <PDFDownloadLink \n            document={<PdfDocument \n                text={data_to_text(_props.text,_props.store)}/>\n            } \n            fileName=\"somename.pdf\"\n        >\n            {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Забери PDF если считаешь что он ок.')}\n        </PDFDownloadLink>\n      </div>\n    );\n\n    export default BeautyText;\n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';\n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n\n    const FormOne = ({store,formOneState,onDataReady}) => {\n        const [formData, setFormData] = useState({\n            compFullName: \"\",\n            compShortName: \"\",\n            INN: \"\",\n            KPP:\"\",\n            OGRN:\"\",\n            OKPO:\"\",\n            GosRegDate:\"\",\n            YurAdress:\"\",\n            FactAdress:\"\",\n            GenDirector:\"\",\n            Buhgalter:\"\",\n            tel:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n        }\n        const \n        { \n            compFullName, \n            compShortName,\n            INN,\n            KPP,\n            OGRN,\n            OKPO,\n            GosRegDate,\n            YurAdress,\n            FactAdress,\n            GenDirector,\n            Buhgalter,\n            tel,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            onDataReady(formData);\n            console.log(\"formData after submit: \", formData);\n        };\n    console.log(\"store in formOne : \", formOneState);\n    return (\n        <form>\n            <br/>\n                <label> Полное название организации : <br/>\n                    <Input\n                        id=\"compFullName\"\n                        value= {compFullName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Полное название организации \"\n                        type=\"text\"\n                        name=\"compFullName\"\n                        required\n                        maxlength=\"120\"\n                    /><br/>\n               </label>\n               <label> Краткое название организации : <br/>\n                    <Input\n                        id=\"compShortName\"\n                        value= {compShortName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Краткое название организации \"\n                        type=\"text\"\n                        name=\"compShortName\"\n                        required\n                        maxlength=\"120\"\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"number\"\n                        name=\"INN\"\n                        required\n                        minlength=\"10\"\n                        maxlength=\"10\"\n                    /><br/>\n               </label>\n               <label> КПП : <br/>\n                    <Input\n                        id=\"KPP\"\n                        value= {KPP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" КПП \"\n                        type=\"text\"\n                        name=\"KPP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРН : <br/>\n                    <Input\n                        id=\"OGRN\"\n                        value= {OGRN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРН \"\n                        type=\"number\"\n                        name=\"OGRN\"\n                        required\n                        minlength=\"13\"\n                        maxlength=\"13\"\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"number\"\n                        name=\"OKPO\"\n                        required\n                        minlength=\"8\"\n                        maxlength=\"8\"\n                    /><br/>\n               </label>\n               <label> Дата государственной регистрации : <br/>\n                    <Input\n                        id=\"GosRegDate\"\n                        value= {GosRegDate}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Дата государственной регистрации \"\n                        type=\"text\"\n                        name=\"GosRegDate\"\n                        required\n                    /><br/>\n               </label>\n               <label> Юридический адрес : <br/>\n                    <Input\n                        id=\"YurAdress\"\n                        value= {YurAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Юридический адрес \"\n                        type=\"text\"\n                        name=\"YurAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Ген. директор (ФИО) : <br/>\n                    <Input\n                        id=\"GenDirector\"\n                        value= {GenDirector}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Ген. директор (ФИО) \"\n                        type=\"text\"\n                        name=\"GenDirector\"\n                        required\n                    /><br/>\n               </label>\n               <label> Бухгалтер (ФИО) : <br/>\n                    <Input\n                        id=\"Buhgalter\"\n                        value= {Buhgalter}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Бухгалтер (ФИО) \"\n                        type=\"text\"\n                        name=\"Buhgalter\"\n                        required\n                    /><br/>\n               </label>\n               <label> телефон : <br/>\n                    <Input\n                        id=\"tel\"\n                        value= {tel}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" телефон \"\n                        type=\"text\"\n                        name=\"tel\"\n                        required\n                    /><br/>\n               </label><br/>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {BIK}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n          <div>\n          </div>\n            <div>\n                <BeautyText text={JSON.stringify(formOneState)} store={store}/>\n            </div>\n        </form>\n    );\n    };\n\nconst mapStateToProps = _state => ({\n    store: _state,\n    formOneState: _state.form.formOne\n});\nconst mapDispatchToProps = _dispatch => ({\n    onDataReady: data =>\n        _dispatch(actions.zakazchikTypeOneData(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(FormOne);       \n","import * as types from \"../constants/actionTypes\";\n\nexport const yurlitso = _yurlitso => {\n    console.log({type:types.YURLITSO, payload: _yurlitso});\n    return {type:types.YURLITSO, payload: _yurlitso};\n};\n\nexport const dogovorType = _dogovor => {\n    console.log({type:types.DOGOVOR_TYPE, payload: _dogovor});\n    return {type:types.DOGOVOR_TYPE, payload: _dogovor};\n};\n\nexport const zakazchikTypeOneData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPEONE_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPEONE_DATA,\n            payload:_data\n       }\n    );\n};\nexport const zakazchikTypeTwoData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPETWO_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPETWO_DATA,\n            payload:_data\n       }\n    );\n};\nexport const zakazchikTypeThreeData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPETHREE_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPETHREE_DATA,\n            payload:_data\n       }\n    );\n};\n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';    \n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n\n    const FormTwo = ({store,onDataReady}) => {\n        const [formData, setFormData] = useState({\n            Name: \"\",\n            FIO: \"\",\n            INN: \"\",\n            OGRNIP:\"\",\n            OKPO:\"\",\n            FactAdress:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            Name, \n            FIO,\n            INN,\n            OGRNIP,\n            OKPO,\n            FactAdress,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            onDataReady(formData);\n            console.log(\"formData after submit: \", formData);\n        };\n    console.log(\"store in formTwo : \", store)\n    return (\n        <form>\n            <br/>\n                <label> Название : <br/>\n                    <Input\n                        id=\"Name\"\n                        value= {Name}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название \"\n                        type=\"text\"\n                        name=\"Name\"\n                        required\n                    /><br/>\n               </label>\n               <label> ФИО : <br/>\n                    <Input\n                        id=\"FIO\"\n                        value= {FIO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ФИО \"\n                        type=\"text\"\n                        name=\"FIO\"\n                        required\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"text\"\n                        name=\"INN\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРНИП : <br/>\n                    <Input\n                        id=\"OGRNIP\"\n                        value= {OGRNIP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРНИП \"\n                        type=\"text\"\n                        name=\"OGRNIP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"text\"\n                        name=\"OKPO\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {BIK}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n\n            <div>\n                <BeautyText text={JSON.stringify(store)}/>\n            </div>\n\n        \n        </form>\n    );\n    };\n\nconst mapStateToProps = _state => ({\n    store: _state.form.formTwo,\n    //home: _state.home,\n    //yurlitzas: _state.home.yurlitzas,\n    //dogovorTypes: _state.home.dogovorTypes,\n    //dialects: _state.home.varDialects,\n    //formData: _state.home.formData\n});\nconst mapDispatchToProps = _dispatch => ({\n    //onYur: data => _dispatch(actions.yurlitso(data))\n    onDataReady: data =>\n        _dispatch(actions.zakazchikTypeTwoData(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(FormTwo); \n\n        \n    //export default FormTwo;\n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';\n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n/*\n1. Название (то, как будет отображаться контакт в системе, неформальное название)\n2. Фамилия\n3. Имя\n4. Отчество\n5. Вид документа (чаще всего паспорт, но может быть загранник, военный билет)\n6. Серия\n7. Номер\n8. Кем выдан\n9. Дата выдачи\n10. Код подразделения\n11. Адрес прописки\n*/\n    const FormThree = ({store,onDataReady}) => {\n        const [formData, setFormData] = useState({\n            NameInformal: \"\",\n            lastName: \"\",\n            firstName: \"\",\n            midName:\"\",\n            docType:\"\",\n            Serial:\"\",\n            number:\"\",\n            whoGave:\"\",\n            whenGave:\"\",\n            codeGave:\"\",\n            addressGave:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            NameInformal, \n            lastName,\n            firstName,\n            midName,\n            docType,\n            Serial,\n            number,\n            whoGave,\n            whenGave,\n            codeGave,\n            addressGave\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            onDataReady(formData);\n            console.log(\"formData after submit: \", formData);\n        };\n    return (\n        <form>\n            <br/>\n                <label> Название (неформальное) : <br/>\n                    <Input\n                        id=\"NameInformal\"\n                        value= {NameInformal}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название (неформальное) \"\n                        type=\"text\"\n                        name=\"NameInformal\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фамилия : <br/>\n                    <Input\n                        id=\"lastName\"\n                        value= {lastName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фамилия \"\n                        type=\"text\"\n                        name=\"lastName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Имя : <br/>\n                    <Input\n                        id=\"firstName\"\n                        value= {firstName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Имя \"\n                        type=\"text\"\n                        name=\"firstName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Отчество : <br/>\n                    <Input\n                        id=\"midName\"\n                        value= {midName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Отчество \"\n                        type=\"text\"\n                        name=\"midName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Вид документа : <br/>\n                    <Input\n                        id=\"docType\"\n                        value= {docType}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Вид документа \"\n                        type=\"text\"\n                        name=\"docType\"\n                        required\n                    /><br/>\n               </label>\n               <label> Серия : <br/>\n                    <Input\n                        id=\"Serial\"\n                        value= {Serial}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Серия \"\n                        type=\"text\"\n                        name=\"Serial\"\n                        required\n                    /><br/>\n               </label>\n               <label> Номер : <br/>\n                   <Input\n                       id=\"number\"\n                       value= {number}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Номер \"\n                       type=\"text\"\n                       name=\"number\"\n                       required\n                   /><br/>\n               </label>\n               <label> Кем выдан : <br/>\n                   <Input\n                       id=\"whoGave\"\n                       value= {whoGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Кем выдан \"\n                       type=\"text\"\n                       name=\"whoGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Дата выдачи : <br/>\n                   <Input\n                       id=\"whenGave\"\n                       value= {whenGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Дата выдачи \"\n                       type=\"text\"\n                       name=\"whenGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Код подразделения : <br/>\n                   <Input\n                       id=\"codeGave\"\n                       value= {codeGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Код подразделени \"\n                       type=\"text\"\n                       name=\"codeGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Адрес прописки : <br/>\n                   <Input\n                       id=\"addressGave\"\n                       value= {addressGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Адрес прописки \"\n                       type=\"text\"\n                       name=\"addressGave\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n          <div>\n            <div>\n                <BeautyText text={JSON.stringify(store)}/>\n            </div>\n          </div>\n        \n        </form>\n    );\n    };\n\n        const mapStateToProps = _state => ({\n        store: _state.form.formThree,\n        //home: _state.home,\n        //yurlitzas: _state.home.yurlitzas,\n        //dogovorTypes: _state.home.dogovorTypes,\n        //dialects: _state.home.varDialects,\n        //formData: _state.home.formData\n    });\n    const mapDispatchToProps = _dispatch => ({\n        //onYur: data => _dispatch(actions.yurlitso(data))\n        onDataReady: data =>\n            _dispatch(actions.zakazchikTypeThreeData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(FormThree); \n\n        \n    //export default FormThree;\n","import React, {useState} from 'react';\n//import * as actions from '../actions';\n//import { connect } from \"react-redux\";\n//import { Link } from 'react-router-dom';\nimport {GlobalStyle,Container,Grid,AreaBox,ParamBox,TextBox,Text,Button,Img,link,naked} from '../css/style.js';\n\n\n\nlet Carousel = _props => {\n\n   const [count,setCount] = useState(_props.count);   \n   const steps = _props.steps;\n\n    /*\n   let handlePrev = _stepId => {\n        setCount(count-1);\n    };\n    let handleNext = _stepId => {\n        setCount(count+1);\n    };\n    */\n    const Welcome = () => (\n        <AreaBox g={[2,2,3,5]}>\n            <Text>\n                LETS THE JOURNEY BEGIN!     \n            </Text>\n        </AreaBox>\n    );\n    \n    const Beerpic = () => (\n        <AreaBox g={[2,2,11,5]} style={naked}>\n            {steps[count]}\n            {_props.components[count]}\n        </AreaBox>\n    );\n    /*\n    const PrevButton = () => (\n        <Button>\n            <div onClick={handlePrev}> \n                PREVIOUS \n            </div>\n        </Button>     \n    );\n    const NextButton = () => (\n        <Button>\n            <div onClick={handleNext}> \n                NEXT \n            </div>\n        </Button>\n    );\n    const ButtonsBox = () => (\n        <AreaBox g={[7,2,8,5]} fd=\"row\">\n            <PrevButton/>\n            <NextButton/>\n        </AreaBox>\n    );\n    */\n    const CarouselProcess = () => (\n       \n                <Beerpic/>\n  \n    );\n    \n    return (\n        \n            <CarouselProcess/>\n\n    );\n};\n\n/*\nconst mapStateToProps = state => ({\n  beerPic: state.gallery\n});\n\nconst mapDispatchToProps = (dispatch, id) => ({\n  onLove: id => dispatch(actions.love(id)),\n  onHate: id => dispatch(actions.hate(id)),\n  onFetchGallery: (() => dispatch(actions.fetchGallery()))()\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Gallery);\n*/\nexport default Carousel;\n","import React, {useState} from 'react';\nimport {\n    GlobalStyle,Container,Grid,AreaBox,Text,\n    TextBox,Button,ParamBox,naked\n} from '../css/style.js';\nimport * as actions from '../actions';\nimport {connect} from 'react-redux';\nimport FormOne from \"./FormOne\";\nimport FormTwo from \"./FormTwo\";\nimport FormThree from \"./FormThree\";\nimport Carousel from \"./Carousel\";\nconst {newDogGen,nameExtractor} = require(\"../utils/dognums\");\n\nconst steps = [\n    \"Выбери объект, к которому нужно создать документ\",\n    \"Выбери тип договора\",\n    \"Выбери своё юрлицо\",\n    \"Выбери тип контр-агента и заполни его данные\",\n    \"Ты сделал всё что мог, отдохни\"\n];\n\nconst Home = (\n    {\n        store,\n        home,\n        yurlitzas,\n        dogovorTypes,\n        dialects,\n        onYur,\n        formData\n    }) => { \n\n    const idScope = steps.map((e,i) => i);\n   console.log(\"idScope : \", idScope);\n   const [count,setCount] = useState(idScope[0]);\n    \n    const [obj,setObj] = useState(\"unknown\");\n    const [yurlitso,setYurlitso] = useState(\"unknown\");\n    const [dogType,setDogType] = useState(\"unknown\");\n    const [zakazchik,setZakazchik] = useState(\"unknown\");\n    const [dogsList,setDogsList] = useState(nameExtractor());\n    const [dogs, setDogs] = useState(\"unknown\");\n    console.log(\"store : \", store);\n    console.log(\"home :\" , home);\n    console.log(\"formData : \", formData);\n    const objects = [\"Липки\",\"Пипки\",\"Ципки\"];\n    \n    const Elem = _props => {\n        console.log(\"here must be the count\");\n        console.log(\"cnt : \", count);\n        const handleClick = () => {\n            console.log(\"data : \", _props.data);\n            console.log(\"cnt : \", count);\n            _props.set(_props.data);\n            \n        };\n        return (<b onClick={handleClick}>{_props.data}{\" | \"}</b>\n    )};\n    const ObjTab = () => (\n        <Text m={\"2vmin\"} style={naked}>\n            <div >\n                ОБЪЕКТ: <b>{obj}</b> <br/>\n                {objects.map((e,i) => <Elem key={i} data={e} set={setObj}/>)}<br/>  \n            </div>\n        </Text>\n    ); \n    \n    const YurTab = () => (\n        <Text m={\"2vmin\"}>\n            <div id=\"contractTypesPanel\">\n                ЮРЛИЦО: <b>{yurlitso}</b> <br/>\n                {yurlitzas.map((e,i) => <Elem key={i} data={e} set={setYurlitso}/>)}<br/>  \n            </div>\n        </Text>\n    );\n    const DialTab = () => {\n        //console.log(\"dialects : \", dialects);\n        let current = () => {\n            return ((dogType === \"проектирование\") ? [...dialects.make] :\n                (dogType === \"поставка\") ? [...dialects.sell] :\n                dialects.basic\n            );\n        };\n        //console.log(\"current : \", current());\n        return (\n            <Text m={\"2vmin\"}>\n                <div id=\"varsPanel\">\n                    НАБОР ПЕРЕМЕННЫХ: <b>{dogType}</b> <br/>\n                    {current().map((e,i) => <b key={i} >{e}{\" | \"}</b>)}\n                </div>\n            </Text>\n    )};\n\n    const FormTab = () => {\n        return (zakazchik===\"организация\"\n                    ? <FormOne/> \n                    : zakazchik===\"ИП\"\n                        ? <FormTwo/>\n                        : zakazchik===\"физическое лицо\"\n                            ? <FormThree/> \n                            : \"who knows\"\n            );\n    };\n    const zakTypes = [\"организация\",\"ИП\",\"физическое лицо\"];\n    const Zakazchik = () => (\n        <Text m={\"2vmin\"}>\n            <div id=\"zakazchik\">\n                ТИП ЗАКАЗЧИКА: <b>{zakazchik}</b> <br/>\n                {zakTypes.map((e,i) => <Elem key={i} data={e} set={setZakazchik}/>)}<br/>  \n            </div>\n            \n            <FormTab/>\n            \n        </Text>        \n    );\n    const dogTypesData  = [\n        \"Договор проектирования\",\n        \"Договор поставки\",\n        \"Договор монтажа\",\n        \"Договор сервисного обслуживания\",\n        \"Договор субподряда\"\n    ];\n    const Dogovors = () => {\n        const newdogHandler = () => {\n            setDogsList(dogsList.concat(newDogGen(dogs)));\n            console.log(\"new dog : \", newDogGen(dogs));\n        };\n        return(\n                <div>\n                    СОЗДАТЬ ДОГОВОР: \n                    <b onClick={newdogHandler}>{dogs}</b> <br/>\n                    {dogTypesData.map((e,i) => \n                    <Elem key={i} data={e} set={setDogs}/>)}\n                </div>   \n        )\n    };\n    const DogTab = () => (\n        <TextBox h={\"100%\"}>\n        <Text m={\"2vmin\"}>\n            <div id=\"contractTypesPanel\">\n                ТИП ДОГОВОРА: <b>{dogType}</b> <br/>\n                {dogovorTypes.map((e,i) => <Elem key={i} data={e} set={setDogType}/>)}<br/>  \n            </div>\n        \n            \n            {dogType === \"проектирование\" \n                ? <Dogovors/>\n                : \"\"            \n            }\n           </Text> \n        </TextBox>\n    );\n    const DogsData = () => (\n        <Text m={\"2vmin\"}>\n            <div>\n                СПИСОК ДОГОВОРОВ:\n                <br/><br/>\n                {dogsList.map(e => (<div><b>{e}</b></div>))}\n            </div>\n        </Text> \n    );\n    \n    const components = \n    [<ObjTab/>,<DogTab/>,<YurTab/>,<Zakazchik/>];\n\n    let handlePrev = _stepId => {\n        setCount(count-1);\n    };\n    let handleNext = _stepId => {\n        setCount(count+1);\n    };\n\n        const PrevButton = () => (\n        <Button>\n            <div onClick={handlePrev}> \n                PREVIOUS \n            </div>\n        </Button>     \n    );\n    const NextButton = () => (\n        <Button>\n            <div onClick={handleNext}> \n                NEXT \n            </div>\n        </Button>\n    );\n    /*\n    const ButtonsBox = () => (\n        <AreaBox g={[7,2,8,5]} fd=\"row\">\n            <PrevButton/>\n            <NextButton/>\n        </AreaBox>\n    );\n    */\n    \n    const ButtonsBox = () => (\n        <div>\n            <PrevButton/>\n            <NextButton/>\n        </div>\n    );\n    \n    const Basic = () => (\n    <div>\n    <GlobalStyle/>\n    <Container>\n        <Grid>\n              <AreaBox g={[2,2,7,5]} fd=\"row\">\n                    <TextBox h={\"100%\"}>\n                        <Text m={\"2vmin\"}>\n                            <Carousel \n                            components={components}\n                            steps={steps}\n                            count={count}\n                            \n                            />\n                            \n                        </Text>\n                    </TextBox>\n                </AreaBox>\n            <AreaBox g={[7,2,10,5]} fd=\"row\">\n\n                <ButtonsBox/>\n     \n            </AreaBox>\n            \n                {/*<!--AreaBox g={[2,2,3,5]} fd=\"row\">\n                    <TextBox h={\"100%\"}>\n                        <Text m={\"2vmin\"}>\n                            <YurTab/>\n                            <DogTab/>\n                            <DialTab/>\n                            <Zakazchik/>\n                            <Dogovors/-->\n                        </Text>\n                    </TextBox>\n                </AreaBox-->*/}\n              \n        </Grid>\n    </Container>\n    </div>\n  );\n  return (\n    <div>\n        <Basic/>   \n    </div>\n  );\n}\n\nconst mapStateToProps = _state => ({\n    store: _state,\n    home: _state.home,\n    yurlitzas: _state.home.yurlitzas,\n    dogovorTypes: _state.home.dogovorTypes,\n    dialects: _state.home.varDialects,\n});\nconst mapDispatchToProps = _dispatch => ({\n    onYur: data => _dispatch(actions.yurlitso(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(Home);\n\n//export default Home;\n\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <main className=\"container\" >\n        <Switch id=\"main\">\n            <Route exact path=\"/dodoc/\" \n                component={Home} />          \n        </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport reducer from './reducers'; \nimport App from './App';\n\nconst store = createStore(reducer);\nconsole.log(\"store while initialise in index.js : \", store.getState());\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nif (window.Cypress) {\n    window.store = store;\n}\n"],"sourceRoot":""}