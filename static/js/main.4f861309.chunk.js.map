{"version":3,"sources":["utils/assert.js","css/Roboto_Mono/RobotoMono-Medium.ttf","utils/dognums.js","state.js","reducers/home.js","reducers/formDataNew.js","reducers/formOne.js","reducers/formTwo.js","reducers/formThree.js","reducers/dogovorData.js","reducers/ownerDic.js","reducers/agentDic.js","reducers/objDic.js","reducers/dogDic.js","reducers/index.js","constants/actionTypes.js","css/style.js","actions/index.js","components/BeautyText.js","store.js","components/FormOne.js","components/FormTwo.js","components/FormThree.js","components/MontajSampleData.js","components/FormMap.js","components/HsFs.js","components/HeadFoot.js","components/Montaj.js","components/MontajDefault.js","components/FormOneSimp.js","components/FormTwoSimp.js","components/FormThreeSimp.js","components/Ownerdic.js","components/Home.js","components/Agentdic.js","components/FormDog.js","components/Dogovordic.js","components/FormObj.js","components/Objectdic.js","App.js","index.js"],"names":["module","exports","_statement","_function","_positiveOutcome","JSON","stringify","console","log","assert","require","dogs","date","link","name","nameExtractor","out","Object","keys","map","dog","key","push","latestExtractor","_dogName","length","match","sampleNy","year","month","day","newDogGen","_date","sampleDate","_letter","state","hello","formData","dogovorData","dogTypes","YL","compFullName","compShortName","INN","KPP","OGRN","OKPO","GosRegDate","YurAdress","FactAdress","GenDirector","Buhgalter","tel","bankName","BIK","BillOne","BillTwo","IP","Name","FIO","OGRNIP","FL","NameInformal","lastName","firstName","midName","docType","Serial","number","whoGave","whenGave","codeGave","addressGave","initialState","window","Cypress","selectors","objNameSel","dogTypeSel","sysTypeSel","servTypeSel","clientTypeSel","hub","id","data","CompName","yurAdress","bank","firstBill","secondBill","adress","contactsFIO","contactsRole","contactsContacts","workRegime","objName","dogName","zakazchikName","postavshikName","price","status","paid","reponsible","pdfScan","commebt","rootReducer","combineReducers","home","action","type","yurlitso","payload","dogovorType","formDataNew","clientType","ownerDic","dics","entries","agentDic","objDic","dogDic","GlobalStyle","createGlobalStyle","Container","styled","div","Grid","AreaBox","p","fd","g","b","ParamBox","w","h","Text","m","TextBox","img","Input","input","naked","NavbarDropdownContent","_data","Font","register","family","src","font","styles","StyleSheet","create","page","margin","fontFamily","display","wordBreak","border","hyphens","section","padding","content","sampleDataOne","sampleDataTwo","zakazchik","template","data_to_text","_store","hold","parse","PdfDocument","_props","style","text","BeautyText","store","document","fileName","blob","url","loading","error","connect","_state","_dispatch","onDataReady","onDogovorData","actions","onNewdogData","useState","is","setDataSent","Dogovors","to","setFormData","updateFormData","event","target","value","onChange","e","placeholder","required","maxlength","minlength","onClick","preventDefault","createStore","reducer","getState","formOrgDataSample","formFLDataSample","serverData","varOne","varTwo","ClientDataFL","_d","FLHeader","_clientData","_serverData","ClientOrgFooter","ClientIPFooter","ClientFLFooter","ServerFooter","DataMapper","Cmap","Smap","actualInput","ct","cd","st","defaultInput","ai","di","cmap","smap","a","c","HFROuter","ClientType","_clientType","ClientData","ORG","ServerData","_serverType","aa","bb","cc","HeadFoot","_a","_b","_c","divStyle","selection","width","wordWrap","MontajHead","FormOneSimp","FormTwoSimp","FormThreeSimp","Selector","props","formSet","pool","select","setSelect","newdic","setNewdic","Article","fold","setFold","majorStore","onOwnerDicSelection","onOwnerDicCreation","newDogData","output","Basic","onAgentDicSelection","onAgentDicCreation","FormDog","dogType","systems","textLink","comment","owners","agents","objects","concat","today","Date","getFullYear","getMonth","getDate","Today","onDogDicSelection","onDogDicCreation","FormObj","contacts","onObjDicSelection","onObjDicCreation","App","className","exact","path","component","Home","Ownerdic","Agentdic","Dogovordic","Objectdic","Montaj","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4f861309.chunk.js","sourcesContent":["\n    const assert = (_statement,_function,_positiveOutcome) => {\n        return(\n                JSON.stringify(_function) === JSON.stringify(_positiveOutcome) \n                ? console.log(`YES! ${_statement}, ooph!`) \n                : console.log(`NOPE! ${_statement} works WRONG!!!`)\n        );\n    };\n\n    //export {assert};\n    module.exports = assert;\n","module.exports = __webpack_public_path__ + \"static/media/RobotoMono-Medium.7cfbd428.ttf\";","\n//  IMPORTS ---------------------------------------------------------------------------------------\n\n    const assert = require(\"./assert\");\n    \n//   TASK -----------------------------------------------------------------------------------------\n\n    /*\n    В процессе создания договоров им присваивается {название} по формуле:\n    + 1. Договор проектирования. {Договор проектирования №{текущийгод}А{порядковыйномер} от {дд-месяц-гггг}}\n    + 2. Договор поставки. {Договор поставки №{текущийгод}Б{порядковыйномер}. от {дд-месяц-гггг}}\n    + 3. Договор монтажа {Договор монтажа №{текущийгод}В{порядковыйномер}. от {дд-месяц-гггг}}\n    + 4. Договор сервисного обслуживания. {Договор сервисного обслуживания №{текущийгод}СО{порядковыйномер} от {дд-месяц-гггг}}\n    + 5. Договор субподряда {Договор монтажа №{текущийгод}ВСУБ{порядковыйномер}. от {дд-месяц-гггг}}\n\n    + С началом нового года {порядковый_номер} обнуляется и счет начинается заново с 1.\n    + {название} является названием файла при выгрузке в формате {название}.pdf или {название}.doc\n    */\n\n//  INPUT DATA: DOGS data (DOGOVORS) -------------------------------------------------------------------\n\n    const dogs = {\n        \"Договор проектирования\":\n            {\n                \"1999_1\": {date:\"1999/2/2\", link:\"link\", name: \"Договор проектирования №1999А1. от 1999/2/2\"},\n                \"1999_2\": {date:\"1999/12/5\", link:\"link\", name: \"Договор проектирования №1999A2. от 1999/12/5\"},\n                \"2000_1\": {date:\"2000/24/7\", link:\"link\", name: \"Договор проектирования №2000A1. от 2000/24/7\"}\n            },\n        \"Договор поставки\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор поставки №1999Б1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор поставки №1999Б2. oт 1999/12/5\"},\n                \"2019_2\": {date:\"24/7/2000\", link:\"link\", name: \"Договор поставки №2019Б2. от 2019/24/7\"}\n            },        \n        \"Договор монтажа\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор монтажа №1999В1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор монтажа №1999В2. от 1999/12/5\"},\n                \"2000_3\": {date:\"24/7/2000\", link:\"link\", name: \"Договор монтажа №1999В3. от 2000/24/7\"}\n            },\n        \"Договор сервисного обслуживания\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор сервисного обслуживания №1999СО1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор сервисного обслуживания №1999СО2. от 1999/12/5\"},\n                \"2000_4\": {date:\"24/7/2000\", link:\"link\", name: \"Договор сервисного обслуживания №2000СО4. от 2000/24/7\"}\n            },\n        \"Договор субподряда\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор субподряда №1999ВСУБ1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор субподряда №1999ВСУБ2. от 1999/12/5\"},\n                \"2000_5\": {date:\"24/7/2000\", link:\"link\", name: \"Договор субподряда №2000ВСУБ5. от 2000/24/7\"}        \n            }\n    };\n\n//  FUNCTIONS ----------------------------------------------------------------------------------------------------\n\n    //  1 NAME EXTRACTOR ---------------------------------------------------------------------------------------------\n\n    const nameExtractor = (_dogs=dogs) => {\n        let out = [];\n        Object.keys(dogs).map(dog => {for (let key in dogs[dog]) out.push(dogs[dog][key].name)});\n        return out;\n    };\n    assert(\n        \"Name extractor extracts names\",\n        nameExtractor(),\n        [\n            \"Договор проектирования №1999A1. от 1999/2/2\",\n            \"Договор проектирования 1999A2. от №1999/12/5\",\n            \"Договор проектирования №2000A1. от 2000/24/7\",\n            \"Договор поставки №1999Б1. от 1999/2/2\",\n            \"Договор поставки 1999Б2. от №1999/12/5\",\n            \"Договор поставки №2019Б2. от 2019/24/7\",\n            \"Договор монтажа №1999В1. от 1999/2/2\",\n            \"Договор монтажа 1999В2. от №1999/12/5\",\n            \"Договор монтажа №1999В3. от 2000/24/7\",\n            \"Договор сервисного обслуживания №1999СО1. от 1999/2/2\",\n            \"Договор сервисного обслуживания 1999СО2. от №1999/12/5\",\n            \"Договор сервисного обслуживания №2000СО4. от 2000/24/7\",\n            \"Договор субподряда №1999ВСУБ1. от 1999/2/2\",\n            \"Договор субподряда 1999ВСУБ2. от №1999/12/5\",\n            \"Договор субподряда №2000ВСУБ5. от 2000/24/7\"\n        ]\n    );\n\n    //  2 LATEST DOGOVORTYPE NUMBER EXTRACTOR ------------------------------------------------------------------------------\n\n    const latestExtractor = _dogName => {\n        let keys = Object.keys(dogs[_dogName]); \n        let out = keys[keys.length-1].match(/(?<=\\_)\\d+/g)[0];\n        return out;\n    };\n    assert(\n        \"IN: dogType & dogs pool, OUT: latest #num of required dogtype \",\n        latestExtractor(\"Договор проектирования\"),\n        \"1\"\n    );\n    \n    //  3 NEW DOGOVOR GENERATOR ---------------------------------------------------------------------------------------\n\n    const sampleNy = { year:2020, month:1, day:1};\n    \n    const newDogGen = (_dogName,_date=sampleNy) => {\n        const sampleDate = `${_date.year}/${_date.day}/${_date.month}`;   \n        const out = _letter => {\n            return ( (_date.month === 1 && _date.day === 1) && (latestExtractor(_dogName) === 1)\n                ? `${_dogName} №${_date.year}${_letter}${+latestExtractor(_dogName)+1}. ot ${sampleDate}`\n                : `${_dogName} №${_date.year}${_letter}1. ot ${sampleDate}` \n            );\n        };\n        switch(_dogName){\n            case \"Договор проектирования\": return out(\"A\");\n            case \"Договор поставки\": return out(\"Б\");\n            case \"Договор монтажа\": return out(\"В\");\n            case \"Договор сервисного обслуживания\": return out(\"СО\");\n            case \"Договор субподряда\": return out(\"ВСУБ\");\n            default : return \"who knows\";\n        };\n        \n    };\n    assert(\n            \"IN: dog name, OUT: new dog name\",\n            newDogGen(\"nameOne\",sampleNy),\n            \"nameOne №2020A2. ot 2020/1/1\" // prev = \"nameOne 2000 A1 2000/24/7\"\n        );\n    assert(\n        \"IN: dog name, OUT: new dog name\",\n        newDogGen(\"nameTwo\",sampleNy),\n        \"nameTwo №2020B1. ot 2020/1/1\" //prev === \"nameTwo 2019 B2 2019/24/7\"\n    );\n\n//  EXPORTS ---------------------------------------------------------------------------------------------------------\n\n    exports.newDogGen = newDogGen;\n    exports.nameExtractor = nameExtractor;\n\n","const YL =\n    {\n        compFullName: \"-\",\n        compShortName: \"-\",\n        INN: \"-\",\n        KPP:\"-\",\n        OGRN:\"-\",\n        OKPO:\"-\",\n        GosRegDate:\"-\",\n        YurAdress:\"-\",\n        FactAdress:\"-\",\n        GenDirector:\"-\",\n        Buhgalter:\"-\",\n        tel:\"-\",\n        bankName:\"-\",\n        BIK:\"-\",\n        BillOne:\"-\",\n        BillTwo:\"-\"\n    }\nconst IP= \n    {\n        Name: \"-\",\n        FIO: \"-\",\n        INN: \"-\",\n        OGRNIP:\"-\",\n        OKPO:\"-\",\n        FactAdress:\"-\",\n        bankName:\"-\",\n        BIK:\"-\",\n        BillOne:\"-\",\n        BillTwo:\"-\"\n    };\nconst FL = \n    {\n        NameInformal: \"-\",\n        lastName: \"-\",\n        firstName: \"-\",\n        midName:\"-\",\n        docType:\"-\",\n        Serial:\"-\",\n        number:\"-\",\n        whoGave:\"-\",\n        whenGave:\"-\",\n        codeGave:\"-\",\n        addressGave:\"-\"\n    };\nconst formDefaultData = \"formDefaultData\";\n\n\nconst state = \n{\n    hello:\"hello\",\n    formData: formDefaultData,\n    dogovorData:{},\n    dogTypes: {YL:YL,IP:IP,FL:FL}\n};\n\nexport {state};\n","import {state} from '../state.js';\nimport {\n    YURLITSO,\n    DOGOVOR_TYPE,\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case YURLITSO:\n            return { yurlitso: action.payload };\n        case DOGOVOR_TYPE:\n            return { dogovorType: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    FORM_DATA_NEW\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case FORM_DATA_NEW:\n            return {clientType:action.payload.clientType, data:action.payload.data};\n        default:        \n            return state;\n    };\n};\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPEONE_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPEONE_DATA:\n            return { zakazchikTypeOneData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPETWO_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPETWO_DATA:\n            return { zakazchikTypeTwoData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPETHREE_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPETHREE_DATA:\n            return { zakazchikTypeThreeData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    DOGOVOR_DATA,\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\n{\n    selectors:{objNameSel:\"-\",dogTypeSel:\"-\",sysTypeSel: \"-\",servTypeSel: \"-\",clientTypeSel: \"-\",hub: {}},\n    formData:{\n        NameInformal:\"-\",\n        lastName:\"-\",\n        firstName:\"-\",\n        midName:\"-\",\n        docType:\"-\",\n        Serial:\"-\",\n        number:\"-\",\n        whoGave:\"-\",\n        whenGave:\"-\",\n        codeGave:\"-\",\n        addressGave:\"-\"\n    }\n};\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case DOGOVOR_DATA:\n            return action.payload;\n        default:        \n            return state;\n    };\n};\n\n","//import {state} from '../state.js';\nimport {\n    OWNERDIC_SELECT,\n    OWNERDIC_CREATE\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\n{\n    \"currentDic\":\"some dic\",\n    \"dics\": \n        [\n            { \n                id:0, \n                name:\"ИП Попов\",\n                data:\n                    {\n                        CompName:\"ИП Попов\",\n                        FIO:\"Попов Александр Петрович\",\n                        INN: \"1111111111111111\",\n                        OGRN: \"11111111111111111\",\n                        yurAdress: \"111111 Россия Домодедово г., 1 кв-л, 11\", \n                        bank: \"Сбербанк\",\n                        BIK: \"1111111111111111\",\n                        firstBill: \"111111111111111111111111\",\n                        secondBill: \"1111111111111111111111111\"\n                    }                \n            },\n            { \n                id:1, \n                name:\"ООО УКИ\",\n                data: \n                    {\n                        CompName:\"ООО УКИ\",\n                        FIO:\"Клопов Алексей Ветрович\",\n                        INN: '222222222222',\n                        OGRN: \"22222222222222222222\",\n                        yurAdress: \"22222222 Россия Довобродово г., 222 кв-л, 222\", \n                        bank: \"Сбедбанк\",\n                        BIK: \"222222222\",\n                        firstBill: \"222222222222222222222\",\n                        secondBill: \"22222222222222222222222\"                         \n                    }            \n            }\n        ]\n};\n\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case OWNERDIC_SELECT:\n            return {...state,\"currentDic\":action.payload};\n        case OWNERDIC_CREATE:\n            const out = {...state,\n                dics:[...state.dics,\n                    {id:(state.dics[state.dics.length-1].id)+1,\n                     name:Object.entries(action.payload)[0][1],\n                     data:action.payload\n                    }\n                ]\n            }; \n            console.log(\"OWNERDIC_SELECT out : \", out);\n            return out;\n        default:        \n            return state;\n    };\n};\n\n","//import {state} from '../state.js';\nimport {\n    AGENTDIC_SELECT,\n    AGENTDIC_CREATE\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\n{\n    \"currentDic\":\"some dic\",\n    \"dics\": \n        [\n            { \n                id:0, \n                name:\"ИП Попов\",\n                data:\n                    {\n                        CompName:\"ИП Попов\",\n                        FIO:\"Попов Александр Петрович\",\n                        INN: \"1111111111111111\",\n                        OGRN: \"11111111111111111\",\n                        yurAdress: \"111111 Россия Домодедово г., 1 кв-л, 11\", \n                        bank: \"Сбербанк\",\n                        BIK: \"1111111111111111\",\n                        firstBill: \"111111111111111111111111\",\n                        secondBill: \"1111111111111111111111111\"\n                    }                \n            },\n            { \n                id:1, \n                name:\"ООО УКИ\",\n                data: \n                    {\n                        CompName:\"ООО УКИ\",\n                        FIO:\"Клопов Алексей Ветрович\",\n                        INN: '222222222222',\n                        OGRN: \"22222222222222222222\",\n                        yurAdress: \"22222222 Россия Довобродово г., 222 кв-л, 222\", \n                        bank: \"Сбедбанк\",\n                        BIK: \"222222222\",\n                        firstBill: \"222222222222222222222\",\n                        secondBill: \"22222222222222222222222\"                         \n                    }            \n            }\n        ]\n};\n\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case AGENTDIC_SELECT:\n            return {...state,\"currentDic\":action.payload};\n        case AGENTDIC_CREATE:\n            const out = {...state,\n                dics:[...state.dics,\n                    {id:(state.dics[state.dics.length-1].id)+1,\n                     name:Object.entries(action.payload)[0][1],\n                     data:action.payload\n                    }\n                ]\n            }; \n            console.log(\"AGENTDIC_SELECT out : \", out);\n            return out;\n        default:        \n            return state;\n    };\n};\n\n","//import {state} from '../state.js';\nimport {\n    OBJDIC_SELECT,\n    OBJDIC_CREATE\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\n{\n    \"currentDic\":\"some dic\",\n    \"dics\": \n        [\n            { \n                id:0, \n                name:\"Липки\",\n                data:\n                    {\n                        name:\"Пипки\",\n                        adress:\"не совсем там\",\n                        contactsFIO:\"FIO\",\n                        contactsRole:\"role\",\n                        contactsContacts:\"contatcs\",\n                        workRegime: \"пропускной режим\"\n                    }                \n            },\n            {\n               id:1, \n                name:\"Пипки\",\n                data:\n                    {\n                        name:\"Пипки\",\n                        adress:\"не совсем там\",\n                        contactsFIO:\"FIO\",\n                        contactsRole:\"role\",\n                        contactsContacts:\"contatcs\",\n                        workRegime: \"пропускной режим\"\n                    }                \n            }\n        ]\n};\n\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case OBJDIC_SELECT:\n            return {...state,\"currentDic\":action.payload};\n        case OBJDIC_CREATE:\n            const out = {...state,\n                dics:[...state.dics,\n                    {id:(state.dics[state.dics.length-1].id)+1,\n                     name:Object.entries(action.payload)[0][1],\n                     data:action.payload\n                    }\n                ]\n            }; \n            console.log(\"OBJDIC_SELECT out : \", out);\n            return out;\n        default:        \n            return state;\n    };\n};\n\n","//import {state} from '../state.js';\nimport {\n    DOGDIC_SELECT,\n    DOGDIC_CREATE\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\n{\n    \"currentDic\":\"some dic\",\n    \"dics\": \n        [\n            { \n                id:0, \n                name:\"Ноль\",\n                data:\n                    {\n                        objName:\"имя объекта\",\n                        dogName:\"имя договора\",\n                        zakazchikName: \"имя заказчика\",\n                        postavshikName: \"имя поставщика\",\n                        date: \"дата\", \n                        bank: \"Сбербанк\",\n                        price: \"цена\",\n                        status: \"статус\",\n                        paid: \"оплачено\",\n                        reponsible: \"ответственный\",\n                        pdfScan: \"ссылка на скан договора\",\n                        commebt: \"комментарий\"\n                    }                \n            },\n            { \n                id:1, \n                name:\"Ноль+\",\n                data:\n                    {\n                        objName:\"имя объекта +\",\n                        dogName:\"имя договора +\",\n                        zakazchikName: \"имя заказчика +\",\n                        postavshikName: \"имя поставщика +\",\n                        date: \"дата +\", \n                        bank: \"Сбербанк +\",\n                        price: \"цена +\",\n                        status: \"статус +\",\n                        paid: \"оплачено +\",\n                        reponsible: \"ответственный +\",\n                        pdfScan: \"ссылка на скан договора +\",\n                        commebt: \"комментарий +\"\n                    }                \n            }\n        ]\n};\n\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case DOGDIC_SELECT:\n            return {...state,\"currentDic\":action.payload};\n        case DOGDIC_CREATE:\n            const out = {...state,\n                dics:[...state.dics,\n                    {id:(state.dics[state.dics.length-1].id)+1,\n                     name:Object.entries(action.payload)[0][1],\n                     data:action.payload\n                    }\n                ]\n            }; \n            console.log(\"DOGDIC_SELECT out : \", out);\n            return out;\n        default:        \n            return state;\n    };\n};\n\n","import {combineReducers} from 'redux';\nimport home from './home';\nimport formOne from './formOne';\nimport formTwo from './formTwo';\nimport formThree from './formThree';\nimport formDataNew from './formDataNew';\nimport dogovorData from './dogovorData';\nimport ownerDic from './ownerDic';\nimport agentDic from './agentDic';\nimport objDic from './objDic';\nimport dogDic from './dogDic';\n\nconst rootReducer = combineReducers({\n    home,\n    formDataNew,\n    dogovorData,\n    ownerDic,\n    agentDic,\n    objDic,\n    dogDic\n});\n\nexport default rootReducer;\n","export const OWNERDIC_SELECT = \"OWNERDIC_SELECT\";\nexport const OWNERDIC_CREATE = \"OWNERDIC_CREATE\";\nexport const AGENTDIC_SELECT = \"AGENTDIC_SELECT\";\nexport const AGENTDIC_CREATE = \"AGENTDIC_CREATE\";\nexport const OBJDIC_SELECT = \"OBJDIC_SELECT\";\nexport const OBJDIC_CREATE = \"OBJDIC_CREATE\";\nexport const DOGDIC_SELECT = \"DOGDIC_SELECT\";\nexport const DOGDIC_CREATE = \"DOGDIC_CREATE\";\n\nexport const YURLITSO = \"YURLITSO\";\nexport const DOGOVOR_TYPE = \"DOGOVOR_TYPE\";\nexport const VARIABLE = \"VARIABLE\";\nexport const FORM_DATA_NEW = \"FORM_DATA_NEW\";\nexport const DOGOVOR_DATA = \"DOGOVOR_DATA\";\nexport const ZAKAZCHIK_TYPEONE_DATA = \"ZAKAZCHIK_TYPEONE_DATA\";\nexport const ZAKAZCHIK_TYPETWO_DATA = \"ZAKAZCHIK_TYPETWO_DATA\";\nexport const ZAKAZCHIK_TYPETHREE_DATA = \"ZAKAZCHIK_TYPETHREE_DATA\";\n","import styled from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0px;\n    background:white;\n  }\n`;\nconst Container = styled.div`\n    width:100vw;\n    height:100vh;\n`; \nconst Grid = styled.div`\n    display:grid;\n    grid-template-columns: 5% repeat(3,30%) 5%;\n    grid-template-rows: 2.5vh repeat(8,11.9%) 2.5vh;\n    width:100%;\n    height:100%;\n    background:white;\n`;\nconst AreaBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"column\"};\n    grid-area:${p=> p.g[0]+\"/\"+p.g[1]+\"/\"+p.g[2]+\"/\"+p.g[3]};\n    justify-content:center;\n    align-items:center;\n    border:${p=> p.b || \"0.5px solid black\"};\n    padding:0px;\n    overflow-wrap:normal;\n    background:White;\n`;\nconst ParamBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"row\"};\n    width:${p => p.w || '100%'};\n    height:${p => p.h || '100%'};\n    justify-content:center;\n    align-items:center;\n    overflow-wrap:normal;\n    //overflow:scroll;\n`;\nconst Text = styled.div`\n    margin:${p => p.m};\n`;\nconst Button = styled.div`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    margin:1vmin;\n    padding:5vmin;\n    width:30vw;\n    border:0.5vmin solid DarkSlateGrey;    \n`;\nconst Img = styled.img`\n    width:auto;\n    height:80%;\n`;\nconst TextBox = styled(ParamBox)`\n    display:flex;\n    flex-wrap:wrap;\n    width:100%;\n    height:${p => p.h || \"66%\"};\n    justify-content:flex-start;\n    align-items:flex-start;\n    font-size:1rem;\n    margin:1vmin;\n    //overflow:scroll;\n`;\nconst Input = styled.input`\n    color: black;\n    border: 1px solid darkGrey;\n    margin: 0 0 5px 0;\n    width: 300%;\n    background-color: lightGrey;\n        \n    &:hover & {\n        background-color: white;\n        box-shadow: 0px 4px 20px 0px rgba(0, 0, 0, 0.05);\n    }\n\n`\n\nconst Selectable = styled.b`\n    &:hover {\n        background-color: yellow;\n    }\n`\nconst link = {\n  'color': 'black',\n  'text-decoration': 'none'\n};\nconst ghost = {\n  'color': 'grey',\n  'opacity': '50%'\n};\nconst naked = {\n  'border': '0px',\n};\n\nconst NavbarDropdownContent = styled.div`\n    display: none;\n    position: absolute;\n    background-color: #f9f9f9;\n    opacity:90%;\n    min-width: 300px;\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0, 2);\n    padding: 12px 16px;\n    z-index: 1;\n`;\n\nconst NavbarDropdown = styled.div`\nposition: relative;\ndisplay: inline-block;\n&:hover ${NavbarDropdownContent} {\n  display: block;\n}\n`;\n\n\nexport {\n    GlobalStyle,NavbarDropdown,NavbarDropdownContent,Container,Grid,AreaBox,ParamBox,TextBox,Input,Text,Button,Img,link,naked,Selectable,ghost\n}\n","import * as types from \"../constants/actionTypes\";\n\n// OWNER DIC\nexport const ownerDicSelect = _data => {\n    console.log({type:types.OWNERDIC_SELECT,payload:_data});\n    return {type:types.OWNERDIC_SELECT, payload: _data};\n};\nexport const ownerDicCreate = _data => {\n    console.log({type:types.OWNERDIC_CREATE,payload:_data});\n    return {type:types.OWNERDIC_CREATE, payload: _data};\n};\n// AGENT DIC\nexport const agentDicSelect = _data => {\n    console.log({type:types.AGENTDIC_SELECT,payload:_data});\n    return {type:types.AGENTDIC_SELECT, payload: _data};\n};\nexport const agentDicCreate = _data => {\n    console.log({type:types.AGENTDIC_CREATE,payload:_data});\n    return {type:types.AGENTDIC_CREATE, payload: _data};\n};\n// OBJECT DIC\nexport const objDicSelect = _data => {\n    console.log({type:types.OBJDIC_SELECT,payload:_data});\n    return {type:types.OBJDIC_SELECT, payload: _data};\n};\nexport const objDicCreate = _data => {\n    console.log({type:types.OBJDIC_CREATE,payload:_data});\n    return {type:types.OBJDIC_CREATE, payload: _data};\n};\n// DOGOVOR DIC\nexport const dogDicSelect = _data => {\n    console.log({type:types.DOGDIC_SELECT,payload:_data});\n    return {type:types.DOGDIC_SELECT, payload: _data};\n};\nexport const dogDicCreate = _data => {\n    console.log({type:types.DOGDIC_CREATE,payload:_data});\n    return {type:types.DOGDIC_CREATE, payload: _data};\n};\n\n\n\n\n\n\n\n\n\nexport const dogovorData = _data => {\n    console.log({type:types.DOGOVOR_DATA, payload: _data});\n    return {type:types.DOGOVOR_DATA, payload: _data}\n};\n\nexport const formDataNew = _data => {\n    console.log({type:types.FORM_DATA_NEW, payload: _data});\n    return {type:types.FORM_DATA_NEW, payload: _data};\n};\n\nexport const yurlitso = _yurlitso => {\n    console.log({type:types.YURLITSO, payload: _yurlitso});\n    return {type:types.YURLITSO, payload: _yurlitso};\n};\n\nexport const dogovorType = _dogovor => {\n    console.log({type:types.DOGOVOR_TYPE, payload: _dogovor});\n    return {type:types.DOGOVOR_TYPE, payload: _dogovor};\n};\n\nexport const zakazchikTypeOneData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPEONE_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPEONE_DATA,\n            payload:_data\n       }\n    );\n};\nexport const zakazchikTypeTwoData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPETWO_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPETWO_DATA,\n            payload:_data\n       }\n    );\n};\nexport const zakazchikTypeThreeData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPETHREE_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPETHREE_DATA,\n            payload:_data\n       }\n    );\n};\n","\n    import React from 'react';\n    import font from '../css/Roboto_Mono/RobotoMono-Medium.ttf'\n    import {\n        Page,\n        Text,\n        View,\n        Document,\n        StyleSheet,\n        PDFDownloadLink,\n        Font,\n    } from \"@react-pdf/renderer\";\n\n    // Register font\n    Font.register({\n      family: 'Roboto Mono',\n      src: font\n    })\n\n    const styles = StyleSheet.create({\n        page: {\n\t        margin: \"2em auto\",\n            fontFamily: \"Roboto Mono\",\n            display: \"flex\",\n            wordBreak: \"break-word\",\n            border:\"1px solid black\",\n\t        hyphens: \"auto\"\n        },\n        section: {\n            margin: 10,\n            padding: 10,\n        },\n        content: {\n            display: \"block\"\n        }\n    });\n\n    let sampleDataOne = {type:\n        {\n            compFullName: \" - \",\n            compShortName: \" - \",\n            INN: \" - \",\n            KPP: \" - \",\n            OGRN: \" - \",\n            OKPO: \" - \",\n            GosRegDate: \" - \",\n            YurAdress: \" - \",\n            FactAdress: \" - \",\n            GenDirector: \" - \",\n            Buhgalter: \" - \",\n            tel: \" - \",\n            bankName: \" - \",\n            BIK: \" - \",\n            BillOne: \" - \",\n            BillTwo: \" - \",\n        }\n    };\n    let sampleDataTwo = {type:\n        {\n            Name: \"-\",\n            FIO: \"-\",\n            INN: \"-\",\n            OGRNIP:\"-\",\n            OKPO:\"-\",\n            FactAdress:\"-\",\n            bankName:\"-\",\n            BIK:\"-\",\n            BillOne:\"-\",\n            BillTwo:\"-\"\n        }\n    };\n    let sampleDataThree = {type:\n        {\n            NameInformal: \"-\",\n            lastName: \"-\",\n            firstName: \"-\",\n            midName:\"-\",\n            docType:\"-\",\n            Serial:\"-\",\n            number:\"-\",\n            whoGave:\"-\",\n            whenGave:\"-\",\n            codeGave:\"-\",\n            addressGave:\"-\"\n        }\n    };\n    \n    const templateOne = (_data = sampleDataOne.type) => {\n        return (\"Нашакомпания ,в лице директора ФИОдиректора Нашей Компании действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" +\n        _data.compFullName + \" , в лице генерального директора  ФИО второй стороны , действующего(ей) на основании Устава, именуемое в дальнейшем 'Покупатель',РЕКВИЗИТЫ СТОРОН: \" + \n        \" Покупатель: \" + _data.compShortName  +\n        \" ИНН: \" + _data.INN +\n        \" КПП: \" + _data.KPP +\n        \" ОГРН: \" + _data.OGRN + \n        \" Юр.адрес: \" + _data.YurAdress +\n        \" Факт.адрес: \" + _data.FactAdress +\n        \" Банк: \" +  _data.bankName +\n        \" БИК: \" +  _data.BIK +\n        \" р/с: \" +  _data.BillOne +\n        \" к/с: \" +  _data.BillTwo +\n        \" \")\n    };\n    const templateTwo = (_data = sampleDataTwo.type) => {\n        return(\"Наша компания, в лице директора ФИОдиректора нашей компании, действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" + _data.Name + \" , в лице генерального директора \" + _data.FIO + \", действующего(ей) на основании Устава, именуемое в дальнейшем 'Покупатель', РЕКВИЗИТЫ СТОРОН: Покупатель: \" + \n_data.Name + \" ИНН: \" + _data.INN + \" ОГРНИП: \" + _data.OGRNIP + \" Факт.адрес: \" +  _data.FactAdress + \" Банк: \" + _data.bankName +\n\" БИК: \" +  _data.BIK + \" р/с: \" + _data.BillOne + \" к/с: \" +  _data.BillTwo + \" подписи \" + _data.Name + \" _/инициалы(ФИО)/ \" + _data.FIO + \"\"\n        )\n    };\n    const templateThree = (_data = sampleDataTwo.type) => {\n        return(\"Нашакомпания, в лице директора ФИОдиректора нашей компании, действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" + _data.lastName + \" \" + _data.firstName + \" \" + _data.midName + \" , \" + _data.docType + \" серия \" + _data.Serial + \" номер \" +  _data.number + \" , выдан \" +  _data.whoGave + \" \" +  _data.whenGave + \" код подразделения \" +  _data.codeGave + \" , именуемый(ая) в дальнейшем 'Покупатель', РЕКВИЗИТЫ СТОРОН: Покупатель: \"  + _data.lastName + \" \" + _data.firstName + \" \" + _data.midName + \" , \" + _data.docType + \" серия \" + _data.Serial + \" номер \" +  _data.number + \" , выдан \" +  _data.whoGave + \" \" +  _data.whenGave + \" код подразделения \" +  _data.codeGave + \" подписи \" + \"_/инициалы(ФИО)/\"\n        );\n    };\n\n    const zakazchik = {\n        one:{ template: templateOne, data: sampleDataOne },\n        two:{ template: templateTwo, data: sampleDataTwo },\n        three:{ template: templateThree, data: sampleDataThree }\n    };\n\n    const data_to_text = (_data,_store) => {\n        console.log(\"data_to_text on load : \", _store);\n        const hold = Object.keys(JSON.parse(_data))[0];\n        switch (hold) {\n            case 'zakazchikTypeOneData':\n                return JSON.stringify(zakazchik.one.template(JSON.parse(_data)[hold]));\n            case 'zakazchikTypeTwoData':\n                return JSON.stringify(zakazchik.two.template(JSON.parse(_data)[hold]));\n            case 'zakazchikTypeThreeData':\n                return JSON.stringify(zakazchik.three.template(JSON.parse(_data)[hold]));\n            default:\n                return \"whatever\";\n        }\n    };\n\n    const PdfDocument = _props => (\n        <Document>\n            <Page style={styles.page}>\n                <View style={styles.section}>\n                    <Text style={styles.content}>\n                        {_props.text}\n                    </Text>\n                </View>\n            </Page>\n        </Document>\n    );\n\n    const BeautyText = (_props) => (\n      <div>\n        <PdfDocument text={data_to_text(_props.text,_props.store)}/>\n        <PDFDownloadLink \n            document={<PdfDocument \n                text={data_to_text(_props.text,_props.store)}/>\n            } \n            fileName=\"somename.pdf\"\n        >\n            {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Забери PDF если считаешь что он ок.')}\n        </PDFDownloadLink>\n      </div>\n    );\n\n    export default BeautyText;\n","import {createStore} from 'redux';\nimport reducer from './reducers'; \n\nconst store = createStore(reducer);\nconsole.log(\"store while initialise in index.js : \", store.getState());\n\nexport default store;\n\n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';\n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../css/style.js'\n\n    const FormOne = ({store,onDataReady,onNewdogData,onDogovorData,dogovorData}) => {\n        console.log(\"store visible in FormOne : \", store);\n        console.log(\"onDataReady inside form one : \", onDataReady);\n    const [dataSent,setDataSent] = useState({is:\"not ok\"});\n    const [isOk, setIsOk] = useState(\"isNotOk\")\n    const Dogovors = () => (\n        <button>\n            <Link \n                to=\"/dodoc/montaj\"\n                style={link}\n            >\n                CОЗДАТЬ ДОГОВОР\n            </Link>\n        </button>  \n    );\n        const [formData, setFormData] = useState({\n            compFullName: \"\",\n            compShortName: \"\",\n            INN: \"\",\n            KPP:\"\",\n            OGRN:\"\",\n            OKPO:\"\",\n            GosRegDate:\"\",\n            YurAdress:\"\",\n            FactAdress:\"\",\n            GenDirector:\"\",\n            Buhgalter:\"\",\n            tel:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            setDataSent(\"OK\");\n            console.log(\"form data : \", formData);\n        }\n        const \n        { \n            compFullName, \n            compShortName,\n            INN,\n            KPP,\n            OGRN,\n            OKPO,\n            GosRegDate,\n            YurAdress,\n            FactAdress,\n            GenDirector,\n            Buhgalter,\n            tel,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            onDogovorData({...dogovorData,formData:formData});\n        };\n    return (\n        <form>\n            <br/>\n                <label> Полное название организации : <br/>\n                    <Input\n                        id=\"compFullName\"\n                        value= {compFullName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Полное название организации \"\n                        type=\"text\"\n                        name=\"compFullName\"\n                        required\n                        maxlength=\"120\"\n                    /><br/>\n               </label>\n               <label> Краткое название организации : <br/>\n                    <Input\n                        id=\"compShortName\"\n                        value= {compShortName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Краткое название организации \"\n                        type=\"text\"\n                        name=\"compShortName\"\n                        required\n                        maxlength=\"120\"\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"number\"\n                        name=\"INN\"\n                        required\n                        minlength=\"10\"\n                        maxlength=\"10\"\n                    /><br/>\n               </label>\n               <label> КПП : <br/>\n                    <Input\n                        id=\"KPP\"\n                        value= {KPP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" КПП \"\n                        type=\"text\"\n                        name=\"KPP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРН : <br/>\n                    <Input\n                        id=\"OGRN\"\n                        value= {OGRN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРН \"\n                        type=\"number\"\n                        name=\"OGRN\"\n                        required\n                        minlength=\"13\"\n                        maxlength=\"13\"\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"number\"\n                        name=\"OKPO\"\n                        required\n                        minlength=\"8\"\n                        maxlength=\"8\"\n                    /><br/>\n               </label>\n               <label> Дата государственной регистрации : <br/>\n                    <Input\n                        id=\"GosRegDate\"\n                        value= {GosRegDate}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Дата государственной регистрации \"\n                        type=\"text\"\n                        name=\"GosRegDate\"\n                        required\n                    /><br/>\n               </label>\n               <label> Юридический адрес : <br/>\n                    <Input\n                        id=\"YurAdress\"\n                        value= {YurAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Юридический адрес \"\n                        type=\"text\"\n                        name=\"YurAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Ген. директор (ФИО) : <br/>\n                    <Input\n                        id=\"GenDirector\"\n                        value= {GenDirector}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Ген. директор (ФИО) \"\n                        type=\"text\"\n                        name=\"GenDirector\"\n                        required\n                    /><br/>\n               </label>\n               <label> Бухгалтер (ФИО) : <br/>\n                    <Input\n                        id=\"Buhgalter\"\n                        value= {Buhgalter}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Бухгалтер (ФИО) \"\n                        type=\"text\"\n                        name=\"Buhgalter\"\n                        required\n                    /><br/>\n               </label>\n               <label> телефон : <br/>\n                    <Input\n                        id=\"tel\"\n                        value= {tel}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" телефон \"\n                        type=\"text\"\n                        name=\"tel\"\n                        required\n                    /><br/>\n               </label><br/>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {BIK}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n\n             <button onClick={handleSubmit}>Submit</button>\n             <Dogovors/>\n             <div>\n                <BeautyText \n                    text={JSON.stringify(formData)}\n                    store={store}\n                />\n            </div>\n        </form>\n    );\n    };\n\n    const mapStateToProps = _state => ({\n        store: _state,\n        dogovorData: _state.dogovorData\n        //formOneState: _state.form.formOne\n    });\n    const mapDispatchToProps = _dispatch => ({\n        onDataReady: data => _dispatch(actions.formDataNew(data)),\n        onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(FormOne);   \n\n    \n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';    \n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../css/style.js'\n\n    const FormTwo = ({store,onDataReady,dogovorData,onDogovorData}) => {\n    const Dogovors = () => (\n        <button>\n            <Link \n                to=\"/dodoc/montaj\"\n                style={link}\n            >\n                CОЗДАТЬ ДОГОВОР\n            </Link>\n        </button>  \n    );\n        const [formData, setFormData] = useState({\n            Name: \"\",\n            FIO: \"\",\n            INN: \"\",\n            OGRNIP:\"\",\n            OKPO:\"\",\n            FactAdress:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            Name, \n            FIO,\n            INN,\n            OGRNIP,\n            OKPO,\n            FactAdress,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            //onDataReady(formData);\n            onDogovorData({...dogovorData,formData:formData});\n            console.log(\"formData after submit: \", formData);\n        };\n    console.log(\"store in formTwo : \", store)\n    return (\n        <form>\n            <br/>\n                <label> Название : <br/>\n                    <Input\n                        id=\"Name\"\n                        value= {Name}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название \"\n                        type=\"text\"\n                        name=\"Name\"\n                        required\n                    /><br/>\n               </label>\n               <label> ФИО : <br/>\n                    <Input\n                        id=\"FIO\"\n                        value= {FIO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ФИО \"\n                        type=\"text\"\n                        name=\"FIO\"\n                        required\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"text\"\n                        name=\"INN\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРНИП : <br/>\n                    <Input\n                        id=\"OGRNIP\"\n                        value= {OGRNIP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРНИП \"\n                        type=\"text\"\n                        name=\"OGRNIP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"text\"\n                        name=\"OKPO\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {BIK}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n            <Dogovors/>\n\n            <div>\n                <BeautyText text={JSON.stringify(store)}/>\n            </div>\n\n        \n        </form>\n    );\n    };\n\nconst mapStateToProps = _state => ({\n     store: _state,\n     dogovorData: _state.dogovorData\n    //yurlitzas: _state.home.yurlitzas,\n    //dogovorTypes: _state.home.dogovorTypes,\n    //dialects: _state.home.varDialects,\n    //formData: _state.home.formData\n});\nconst mapDispatchToProps = _dispatch => ({\n    //onYur: data => _dispatch(actions.yurlitso(data))\n    onDataReady: data =>\n        _dispatch(actions.zakazchikTypeTwoData(data)),\n    onDogovorData: data => _dispatch(actions.dogovorData(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(FormTwo); \n\n        \n    //export default FormTwo;\n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';\n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../css/style.js'\n\n    const FormThree = ({store,onDataReady,dogovorData,onDogovorData}) => {\n    const Dogovors = () => (\n        <button>\n            <Link \n                to=\"/dodoc/montaj\"\n                style={link}\n            >\n                CОЗДАТЬ ДОГОВОР\n            </Link>\n        </button>  \n    );\n        const [formData, setFormData] = useState({\n            NameInformal: \"\",\n            lastName: \"\",\n            firstName: \"\",\n            midName:\"\",\n            docType:\"\",\n            Serial:\"\",\n            number:\"\",\n            whoGave:\"\",\n            whenGave:\"\",\n            codeGave:\"\",\n            addressGave:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            NameInformal, \n            lastName,\n            firstName,\n            midName,\n            docType,\n            Serial,\n            number,\n            whoGave,\n            whenGave,\n            codeGave,\n            addressGave\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            onDogovorData({...dogovorData,formData:formData});\n            console.log(\"formData after submit: \", formData);\n        };\n    console.log(\"store in formThree : \", store)\n    return (\n        <form>\n            <br/>\n                <label> Название (неформальное) : <br/>\n                    <Input\n                        id=\"NameInformal\"\n                        value= {NameInformal}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название (неформальное) \"\n                        type=\"text\"\n                        name=\"NameInformal\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фамилия : <br/>\n                    <Input\n                        id=\"lastName\"\n                        value= {lastName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фамилия \"\n                        type=\"text\"\n                        name=\"lastName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Имя : <br/>\n                    <Input\n                        id=\"firstName\"\n                        value= {firstName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Имя \"\n                        type=\"text\"\n                        name=\"firstName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Отчество : <br/>\n                    <Input\n                        id=\"midName\"\n                        value= {midName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Отчество \"\n                        type=\"text\"\n                        name=\"midName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Вид документа : <br/>\n                    <Input\n                        id=\"docType\"\n                        value= {docType}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Вид документа \"\n                        type=\"text\"\n                        name=\"docType\"\n                        required\n                    /><br/>\n               </label>\n               <label> Серия : <br/>\n                    <Input\n                        id=\"Serial\"\n                        value= {Serial}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Серия \"\n                        type=\"text\"\n                        name=\"Serial\"\n                        required\n                    /><br/>\n               </label>\n               <label> Номер : <br/>\n                   <Input\n                       id=\"number\"\n                       value= {number}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Номер \"\n                       type=\"text\"\n                       name=\"number\"\n                       required\n                   /><br/>\n               </label>\n               <label> Кем выдан : <br/>\n                   <Input\n                       id=\"whoGave\"\n                       value= {whoGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Кем выдан \"\n                       type=\"text\"\n                       name=\"whoGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Дата выдачи : <br/>\n                   <Input\n                       id=\"whenGave\"\n                       value= {whenGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Дата выдачи \"\n                       type=\"text\"\n                       name=\"whenGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Код подразделения : <br/>\n                   <Input\n                       id=\"codeGave\"\n                       value= {codeGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Код подразделени \"\n                       type=\"text\"\n                       name=\"codeGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Адрес прописки : <br/>\n                   <Input\n                       id=\"addressGave\"\n                       value= {addressGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Адрес прописки \"\n                       type=\"text\"\n                       name=\"addressGave\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n            <Dogovors/>\n         \n            <div>\n                <BeautyText text={JSON.stringify(store)}/>\n            </div>\n         \n        \n        </form>\n    );\n    };\n\n        const mapStateToProps = _state => ({\n     store: _state,\n     dogovorData: _state.dogovorData\n    });\n    const mapDispatchToProps = _dispatch => ({\n       onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(FormThree); \n\n        \n    //export default FormThree;\n","\n    export const dogSampleData = {\n        name:\"Договор монтажа № 2020В07\",\n        start:\"06.04.2020\",\n        end:\"06.10.2020\",\n        money:[315000, \"(триста пятнадцать тысяч рублей 00 копеек)\"],\n        systems:[\"вентиляции, кондиционирования\"],\n    };\n\n    export const formOrgDataSample = {\n        compFullName:\"ORGПОЛНОЕ ИМЯ КОМАНИИ\",\n        compShortName: \"ORGКОРОТКОЕ ИМЯ КОМПАНИИ\",\n        FIO:\"ORGИМЯ ФАМИЛИЯ ОТЧЕСТВО\", \n        INN:\"ORGИНН\",\n        KPP:\"ORGКПП\",\n        OGRN:\"ORGОГРН\",\n        OKPO:\"ORGОКРО\",\n        GosRegDate:\"ORGДАТА ГОС РЕГИСТРАЦИИ\",\n        YurAdress:\"ORGЮРИДИЧЕСКИЙ АДРЕСС\",\n        FactAdress:\"ORGФАКТИЧЕСКИЙ АДРЕСС\",\n        GenDirector:\"ORGГЕН ДИРЕКТОР\",\n        Buhgalter:\"ORGБУХГАЛТЕР\",\n        tel:\"ORGТЕЛЕФОН\",\n        bankName:\"ORGИМЯ БАНКА\",\n        BIK:\"ORGБИК\",\n        BillOne:\"ORGРАСЧЁТНЫЙ СЧЁТ\",\n        BillTwo:\"ORGКОРРЕСПОНДЕНДТСКИЙ СЧЁТ\"\n    };\n    export const formIPDataSample = {\n        Name:\"IPИМЯ ИП\",\n        FIO:\"IPФИО\",\n        INN:\"IPИНН\",\n        OGRNIP:\"IPОГРНИП\",\n        OKPO:\"IPОКРО\",\n        FactAdress:\"IPФАКТИЧЕСКИЙ АДРЕСС\",\n        bankName:\"IPИМЯ БАНКА\",\n        BIK:\"IPБИК\",\n        BillOne:\"IPРАСЧЁТНЫЙ СЧЁТ\",\n        BillTwo:\"IPКОРЕСПОНДЕНТСКИЙ СЧЁТ\"\n    };\n    export const formFLDataSample = {\n        NameInformal:\"FLНЕФОРМАЛЬНОЕ ИМЯ\",\n        lastName:\"FLФАМИЛИЯ\",\n        firstName:\"FLИМЯ\",\n        midName:\"FLОТЧЕСТВО\",\n        docType:\"FLВИД ДОКУМЕНТА\",\n        Serial:\"FLСЕРИЯ\",\n        number:\"FLНОМЕР\",\n        whoGave:\"FLВЫДАН\",\n        whenGave:\"FLДАТА ВЫДАЧИ\",\n        codeGave:\"FLКОД ПОДРАЗДЕЛЕНИЯ\",\n        addressGave:\"FLГДЕ ВЫДАН\"\n    };\n\n    export const serverData = {\n        varOne:{\n            CompName:\"ИП Попов Александр Петрович\",\n            FIO:\"Попов Александр Петрович\",\n            INN: \"1111111111111111\",\n            OGRN: \"11111111111111111\",\n            yurAdress: \"111111 Россия Домодедово г., 1 кв-л, 11\", \n            bank: \"Сбербанк\",\n            BIK: \"1111111111111111\",\n            firstBill: \"111111111111111111111111\",\n            secondBill: \"1111111111111111111111111\"\n        },\n        varTwo:{\n            CompName:\"ЮРЛИЦО ДВА\",\n            FIO:\"Клопов Алексей Ветрович\",\n            INN: '222222222222',\n            OGRN: \"22222222222222222222\",\n            yurAdress: \"22222222 Россия Довобродово г., 222 кв-л, 222\", \n            bank: \"Сбедбанк\",\n            BIK: \"222222222\",\n            firstBill: \"222222222222222222222\",\n            secondBill: \"22222222222222222222222\"\n        },\n        \"-\":{\n            CompName:\"-\",\n            FIO:\"-\",\n            INN: '-',\n            OGRN: \"-\",\n            yurAdress: \"-\", \n            bank: \"-\",\n            BIK: \"-\",\n            firstBill: \"-\",\n            secondBill: \"-\"\n        }     \n    };\n \n"," export const ClientDataORG = _d => {\n            return {\n                compFullName:_d.compFullName,\n                compShortName:_d.compShortName,\n                FIO:_d.FIO, \n                INN:_d.INN,\n                KPP: _d.KPP,\n                OGRN:_d.OGRN,\n                OKPO:_d.OKPO,\n                GosRegDate:_d.GosRegDate,\n                YurAdress:_d.YurAdress,\n                FactAdress:_d.FactAdress,\n                GenDirector:_d.GenDirector,\n                Buhgalter:_d.Buhgalter,\n                tel:_d.tel,\n                bankName:_d.bankName,\n                BIK:_d.BIK,\n                BillOne:_d.BillOne,\n                BillTwo:_d.BillTwo\n            };\n        };\n        // IP data -----------------------------------------------------\n        export const ClientDataIP = _d => {\n            return {\n                Name:_d.Name,\n                FIO:_d.FIO,\n                INN:_d.INN,\n                OGRNIP:_d.OGRNIP,\n                OKPO:_d.OKPO,\n                FactAdress:_d.FactAdress,\n                bankName:_d.bankName,\n                BIK:_d.BIK,\n                BillOne:_d.BillOne,\n                BillTwo:_d.BillTwo\n           };\n        };\n        // FL data -------------------------------------------------------\n        export const ClientDataFL = _d => {\n            return {\n                NameInformal:_d.NameInformal,\n                lastName:_d.lastName,\n                firstName:_d.firstName,\n                midName:_d.midName,\n                docType:_d.docType,\n                Serial:_d.Serial,\n                number:_d.number,\n                whoGave:_d.whoGave,\n                whenGave:_d.whenGave,\n                codeGave:_d.codeGave,\n                addressGave:_d.addressGave\n            };\n        };\n","import React from 'react';\n\n//  HEADER ELEMENTS -------------------------------------\n    // Org -----------------------------------------------\n    export const OrgHeader = (_clientData,_serverData) => (\n        <div> {_serverData.CompName}, в лице \n            директора {_serverData.FIO}, \n            действующего на основании Устава, с одной \n            стороны, именуемое в дальнейшем {\"Поставщик\"}\n            и {_clientData.compFullName}, в лице\n            генерального директора {_clientData.\n            FIO}, действующего(ей) на основании Устава, именуемое в \n            дальнейшем «Покупатель»,\n        </div>\n     );\n    // IP ---------------------------------------------\n    export const IPHeader = (_clientData,_serverData) => (\n        <div>  {_serverData.CompName}, в лице директора  {_serverData.FIO},\n            действующего на основании Устава, с одной стороны, именуемое в\n            дальнейшем \"Поставщик\" и {_clientData.Name}, в лице генерального\n            директора {_clientData.FIO}, действующего(ей) на основании\n            Устава, именуемое в дальнейшем «Покупатель»,\n        </div>\n    );\n    // FL\n    export const FLHeader = (_clientData,_serverData) => (\n        <div> {_serverData.CompName}, в лице директора {_serverData.FIO},   \n            действующего на основании Устава, с одной стороны, именуемое в\n            дальнейшем \"Поставщик\" и {_clientData.lastName}\n            {_clientData.firstName} {_clientData.midName},              \n            {_clientData.lastName} серия {_clientData.Serial} номер\n            {_clientData.number}, выдан {_clientData.whoGave} \n            {_clientData.whenGave} код подразделения    \n            {_clientData.codeGave}, именуемый(ая) в дальнейшем             \n            «Покупатель»,\n        </div>\n    );\n    \n\n    // FOOTERS ------------------------------------------------\n\n        // Org ------------------------------------------------\n        export const ClientOrgFooter = (_clientData,_serverData) => (\n            <div>\n                Покупатель:{_clientData.compShortName}<br/>\n                ИНН: {_clientData.INN}<br/>\n                КПП: {_clientData.KPP}<br/>\n                ОГРН: {_clientData.OGRN}<br/>\n                Юр.адрес: {_clientData.YurAdress}<br/>\n                Факт.адрес: {_clientData.FactAdress}<br/>\n                Банк: {_clientData.bankName}<br/>\n                БИК: {_clientData.BIK}<br/>\n                р/с: {_clientData.BillOne}<br/>\n                к/с: {_clientData.BillTwo}<br/>\n                <br/>\n                подписи<br/>\n                <br/>\n                {_clientData.compShortName}<br/>\n                <br/>\n                _____________/инициалы(Ген. директор {_clientData.FIO})/<br/>\n                <br/>\n                место печати (м.п.)<br/>\n           </div>\n        );\n        \n        // IP ------------------------------------------------\n        export const ClientIPFooter = (_clientData,_serverData) => (\n            <div>\n                Покупатель: {_clientData.Name}<br/>\n                ИНН: {_clientData.INN}<br/>\n                ОГРНИП: {_clientData.OGRNIP}<br/>\n                Факт.адрес: {_clientData.FactAdress}<br/>\n                Банк: {_clientData.bankName}<br/>\n                БИК: {_clientData.BIK}<br/>\n                р/с: {_clientData.BillOne} <br/>\n                к/с: {_clientData.BillTwo}<br/>\n                <br/>\n                подписи<br/>\n                <br/>\n                {_clientData.Name}<br/>\n                <br/>\n                _____________/(инициалы {(_clientData.FIO)})/<br/>\n                <br/>\n                _______________________________________________________\n            </div>\n        );\n        // FL ----------------------------------------------------------------------------\n        export const ClientFLFooter = (_clientData,_serverData) => (\n            <div>\n                Покупатель:<br/>\n                {_clientData.lastName} {_clientData.firstName}\n                {_clientData.midName}<br/>\n                {_clientData.docType} серия {_clientData.Serial}<br/>\n                номер {_clientData.number}<br/>\n                выдан {_clientData.whoGave} {_clientData.whenGave} <br/>\n                код подразделения {_clientData.codeGave}<br/>\n                <br/>\n                подписи<br/>\n                <br/>\n                _____________/(инициалы {_clientData.lastName}\n                {_clientData.firstName} <br/>      \n                {_clientData.midName})/<br/>\n            </div>\n        );\n        export const ServerFooter = _serverData=> {\n            return {\n                varOne:(        \n                    <div>\n                        Имя Компании:{_serverData.CompName}<br/>\n                        ФИО:{_serverData.FIO}<br/>\n                        ИНН: {_serverData.INN}<br/>\n                        ОГРН: {_serverData.OGRN}<br/>\n                        Юридический адрес: {_serverData.yurAdress}<br/>\n                        Банк: {_serverData.bank}<br/>\n                        БИК: {_serverData.BIK}<br/>\n                        р/с: {_serverData.firstBill}<br/>\n                        к/c: {_serverData.secondBill}<br/>\n                    </div>),\n                varTwo:(\n                    <div>\n                        Имя Компании:{_serverData.CompName}<br/>\n                        ФИО:{_serverData.FIO}<br/>\n                        ИНН: {_serverData.INN}<br/>\n                        ОГРН: {_serverData.OGRN}<br/>\n                        Юридический адрес: {_serverData.yurAdress}<br/>\n                        Банк: {_serverData.bank}<br/>\n                        БИК: {_serverData.BIK}<br/>\n                        р/с: {_serverData.firstBill}<br/>\n                        к/c: {_serverData.secondBill}<br/>\n                    </div>),\n                };\n        };\n        \n  \n","    \nimport React from 'react';\nimport {\n    dogSampleData,\n    formOrgDataSample,\n    formIPDataSample,\n    formFLDataSample,\n    serverData\n    } \n    from \"./MontajSampleData\";\nimport {ClientDataORG,ClientDataIP,ClientDataFL} from './FormMap';\nimport {OrgHeader,IPHeader,FLHeader,ClientOrgFooter,ClientIPFooter,ClientFLFooter,ServerFooter} from './HsFs';\nimport * as actions from '../actions';\n//import store from '../store';\nimport {connect} from 'react-redux';\nimport assert from \"../utils/assert\";\n\nconst HeadFootOut = ({store,selectors,formData}) => {\n\n\n\n    const DataMapper = () => {\n        const Cmap = {\n            \"организация\":\"ORG\",\n            \"ИП\":\"IP\",    \n            \"физ лицо\":\"FL\",\n            \"-\":\"-\"\n        };\n        const Smap = {\n            \"сервер один\":\"varOne\",\n            \"cервер два\":\"varTwo\",\n            \"-\":\"-\"        \n        };\n        const actualInput = {ct:selectors.clientTypeSel, cd:formData ,st:selectors.servTypeSel };\n        const defaultInput = {ct:\"FL\", cd:formFLDataSample ,st:\"varOne\"};\n        const input = (ai,di,cmap,smap) => {\n            const DefaultData = () => di;\n            const ActualData = () => {\n                return {\n                ct: cmap[ai.ct],\n                cd: ai.cd,\n                st: smap[ai.st]             \n                }\n            };\n            //return (ai.ct === ai.cd) ? DefaultData() : ActualData();\n            return (ai.ct === \"-\" && ai.cd === \"-\") ? DefaultData() : ActualData();\n        };/*\n        assert(\"Input is properly mapped to relevant object fields\",\n            input(\n                {ct:\"организация\", cd:\"actualTestData\" ,st:\"сервер один\"},\n                {ct:\"FL\", cd:\"defaultTestData\" ,st:\"varOne\"},\n                Cmap,\n                Smap),\n            {ct: \"ORG\",cd: \"actualTestData\",st: \"varOne\"}\n        );\n        */\n        return {\n            a : input(actualInput,defaultInput,Cmap,Smap).ct,\n            b : input(actualInput,defaultInput,Cmap,Smap).cd,\n            c : input(actualInput,defaultInput,Cmap,Smap).st\n        };\n    };\n\n    const a = DataMapper().a;\n    const b = DataMapper().b;\n    const c = DataMapper().c;\n    const d = serverData;\n\n    // 1 \n    const HFROuter = () => {\n        const ClientType = _clientType => _clientType; \n        // 2\n        const ClientData = (_clientType,_clientData) => {\n            const chooseData = {\n                ORG:_clientData => ClientDataORG(_clientData),\n                IP:_clientData => ClientDataIP(_clientData),\n                FL:_clientData => ClientDataFL(_clientData),\n                \"-\":_clientData => ClientDataFL(_clientData),\n            };\n            return chooseData[_clientType](_clientData);        \n        };\n        /*\n        assert(\"Data is properly mapped to local keys\",\n            ClientData(\"ORG\",\n                { compFullName:1, compShortName:2, FIO:3, INN:4, KPP:5, OGRN:6, OKPO:7, GosRegDate:8, YurAdress:9, \n                  FactAdress:10, GenDirector:11, Buhgalter:12, tel:13, bankName:14, BIK:15, BillOne:16, BillTwo:17 }        \n            ),\n            { compFullName:1, compShortName:2, FIO:3, INN:4, KPP:5, OGRN:6, OKPO:7, GosRegDate:8, YurAdress:9, \n              FactAdress:10, GenDirector:11, Buhgalter:12, tel:13, bankName:14, BIK:15, BillOne:16, BillTwo:17 }\n       );\n        */\n        const ServerData = (_serverType,_serverData) => {\n            return  _serverData[_serverType];\n        };\n        /*\n        assert(\"Relevant server data is returned by given key\",\n            ServerData(\"varOne\",{\"varOne\":\"VarOneData\",\"varTwo\":\"VarTwoData\"}),\n            \"VarOneData\"\n        );\n        */\n        console.log(\"hf return : \", {\n            ClientType:ClientType,\n            ClientData:ClientData,\n            ServerData:ServerData\n        });\n        return{\n            ClientType:ClientType,\n            ClientData:ClientData,\n            ServerData:ServerData\n        }\n    };\n\n    // 4\n    const DogData = _d => {\n        return {\n            name:_d.name,\n            start:_d.start,\n            end:_d.end,\n            money:_d.money,\n            systems:_d.systems \n        };\n    };\n        // INPUT:\n    const aa = HFROuter().ClientType(DataMapper().a);\n    const bb = HFROuter().ClientData(DataMapper().a,DataMapper().b);\n    const cc = HFROuter().ServerData(DataMapper().c,serverData);\n    const HeadFoot = (_a,_b,_c) => {\n        const HF = {\n            ORG: (_b,_c) => [OrgHeader(_b,_c),ClientOrgFooter(_b,_c),ServerFooter(_c)[c]],\n            IP:(_b,_c) => [IPHeader(_b,_c),ClientIPFooter(_b,_c),ServerFooter(_c)[c]],\n            FL:(_b,_c) => [FLHeader(_b,_c),ClientFLFooter(_b,_c),ServerFooter(_c)[c]],\n            \"-\":(_b,_c) => [FLHeader(_b,_c),ClientFLFooter(_b,_c),ServerFooter(_c)[c]]        \n        };\n        return HF[_a](_b,_c);\n    };\n    //const aa = ClientType(a);\n    //const bb = ClientData(a,b);\n    //const cc = ServerData(c,d);\n    return(\n        <div>\n            {console.log(\"{HeadFoot(aa,bb,cc)[0]} : \", HeadFoot(aa,bb,cc)[0])}\n            <div>{HeadFoot(aa,bb,cc)[0]}</div>\n            <hr/>\n            <div>{HeadFoot(aa,bb,cc)[1]}</div>\n            <hr/>\n            <div>{HeadFoot(aa,bb,cc)[2]}</div>           \n        </div>\n    );\n    };\n\n    const mapStateToProps = _state => ({\n        store: _state,\n        home: _state.home,\n        selectors: _state.dogovorData.selectors,\n        formData:_state.dogovorData.formData,\n        dogovorData: _state.dogovorData\n    });\n    const mapDispatchToProps = _dispatch => ({\n        onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(HeadFootOut);\n\n    \n","   \n    import React from 'react';\n    import MontajBody from \"./MontajBody\";\n    import {connect} from 'react-redux';\n    import store from '../store';\n    import * as actions from '../actions';\n    //import store from '../store';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../css/style.js';\n    import HeadFootOut from \"./HeadFoot\";\n    import MontajDefault from \"./MontajDefault\";\n\n    const divStyle = {width:'75vw',wordWrap:'break-word',fontFamily:'Roboto Mono'};\n    const headStyle = {textAlign:'center'};\n \n    \n    // HEADER COMPOSER -------------------------------------------------\n    //const MontajHead = _p => (\n    //    <div>{ setDogType(_p.serverType,_p.clientType).head }</div>\n    //);\n        const MontajHead = () => (\n\n            <HeadFootOut/>\n\n    );  \n    // FOOTER ELEMENTS --------------------------------------------------------\n\n    // FOOTER COMPOSER ----------------------------------------------\n\n\n    // \"varOne\", \"IP\", formData -> {header,footer}\n \n\n    //setDogType(\"varOne\",\"IP\",formIPDataSample);\n    //${setDogType(clientType,serverType,data).head}\n    //console.log(montaj(\"varOne\",\"IP\",formIPDataSample));\n    \n    // OUTPUT -----------------------------------------\n    const Montaj = ({store,dogovorData}) => (\n        <div>\n        <GlobalStyle/>\n        <Container>\n            <Grid>\n                 <AreaBox g={[3,2,11,5]} fd=\"row\" style={naked}>\n                    <ParamBox>\n                        <TextBox h={\"100%\"} w={\"80%\"}>\n                            <Text m={\"2vmin\"} style={divStyle}>\n                                {/*Object.keys(dogovorData.formData).map(e\n                                 =>(<div>{dogovorData.formData[e]}</div>))}<br/>*/}\n                                {/*JSON.stringify(dogovorData.selectors)*/}<br/>\n                                {/*JSON.stringify(dogovorData.formData)*/}<br/>\n                                {/*JSON.stringify(store.home)*/}\n                                <MontajHead />\n                                {/*<MontajFoot/>*/}\n                            </Text>\n                        </TextBox>\n                    </ParamBox>\n                </AreaBox>\n            </Grid>\n        </Container>\n        </div>\n    );\n\n    const mapStateToProps = _state => ({\n        store: _state,\n        dogovorData:_state.dogovorData\n        //home: _state.home,\n        //yurlitzas: _state.home.yurlitzas,\n        //dogovorTypes: _state.home.dogovorTypes,\n        //formOneData: _state.form.formOne,\n        //formTwoData: _state.form.formTwo,\n        //formThreeData: _state.form.formThree\n    });\n    //const mapDispatchToProps = _dispatch => ({\n    //    onYur: data => _dispatch(actions.yurlitso(data))\n    //});\n\n    export default connect (\n        mapStateToProps//,\n        //mapDispatchToProps\n    )(Montaj);\n\n    //export default Montaj;\n","\n    import React,{useState,useEffect} from 'react';\n    import store from '../store';\n    import {connect} from 'react-redux';\n    import * as actions from '../actions';\n    import {\n    dogSampleData,\n    formOrgDataSample,\n    formIPDataSample,\n    formFLDataSample,\n    serverData\n    } \n    from \"./MontajSampleData\";  \n    \n    const MontajDefault = ({dogovorData,onDogovorData}) => { \n            // INIT\n        const [selection, setSelection] = useState({\n            objNameSel:\"Lipki\",\n            dogTypeSel:\"PROJ\",\n            sysTypeSel:\"WHO KNOWS\",\n            servTypeSel:\"varTwo\",\n            clientTypeSel:\"IP\"    \n        });\n        const [formData,setFormData] = useState(formOrgDataSample);\n        const [hub,setHub] = useState({\"\":\"\"});\n        const output = {...dogovorData,selectors:{...selection,hub},formData:formData};\n        //useEffect(()=>onDogovorData(output));\n\n    return(null)\n    };\n\n    const mapStateToProps = _state => ({\n        //dogovorData: _state.dogovorData\n    });\n    const mapDispatchToProps = _dispatch => ({\n        onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(MontajDefault);\n\n    \n \n\n    \n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';\n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../css/style.js'\n\n    const FormOneSimp = _props => {\n    //    console.log(\"store visible in FormOne : \", store);\n     //   console.log(\"onDataReady inside form one : \", onDataReady);\n    //const [dataSent,setDataSent] = useState({is:\"not ok\"});\n    //const [isOk, setIsOk] = useState(\"isNotOk\")\n        \n\n        // _props.action\n\n        const [formData, setFormData] = useState({\n            compFullName: \"\",\n            compShortName: \"\",\n            INN: \"\",\n            KPP:\"\",\n            OGRN:\"\",\n            OKPO:\"\",\n            GosRegDate:\"\",\n            YurAdress:\"\",\n            FactAdress:\"\",\n            GenDirector:\"\",\n            Buhgalter:\"\",\n            tel:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //setDataSent(\"OK\");\n            //console.log(\"form data : \", formData);\n        }\n        const \n        { \n            compFullName, \n            compShortName,\n            INN,\n            KPP,\n            OGRN,\n            OKPO,\n            GosRegDate,\n            YurAdress,\n            FactAdress,\n            GenDirector,\n            Buhgalter,\n            tel,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onDogovorData({...dogovorData,formData:formData});\n            _props.action(formData);\n        };\n    return (\n        <form>\n            <br/>\n                <label> Полное название организации : <br/>\n                    <Input\n                        id=\"compFullName\"\n                        value= {compFullName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Полное название организации \"\n                        type=\"text\"\n                        name=\"compFullName\"\n                        required\n                        maxlength=\"120\"\n                    /><br/>\n               </label>\n               <label> Краткое название организации : <br/>\n                    <Input\n                        id=\"compShortName\"\n                        value= {compShortName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Краткое название организации \"\n                        type=\"text\"\n                        name=\"compShortName\"\n                        required\n                        maxlength=\"120\"\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"number\"\n                        name=\"INN\"\n                        required\n                        minlength=\"10\"\n                        maxlength=\"10\"\n                    /><br/>\n               </label>\n               <label> КПП : <br/>\n                    <Input\n                        id=\"KPP\"\n                        value= {KPP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" КПП \"\n                        type=\"text\"\n                        name=\"KPP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРН : <br/>\n                    <Input\n                        id=\"OGRN\"\n                        value= {OGRN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРН \"\n                        type=\"number\"\n                        name=\"OGRN\"\n                        required\n                        minlength=\"13\"\n                        maxlength=\"13\"\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"number\"\n                        name=\"OKPO\"\n                        required\n                        minlength=\"8\"\n                        maxlength=\"8\"\n                    /><br/>\n               </label>\n               <label> Дата государственной регистрации : <br/>\n                    <Input\n                        id=\"GosRegDate\"\n                        value= {GosRegDate}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Дата государственной регистрации \"\n                        type=\"text\"\n                        name=\"GosRegDate\"\n                        required\n                    /><br/>\n               </label>\n               <label> Юридический адрес : <br/>\n                    <Input\n                        id=\"YurAdress\"\n                        value= {YurAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Юридический адрес \"\n                        type=\"text\"\n                        name=\"YurAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Ген. директор (ФИО) : <br/>\n                    <Input\n                        id=\"GenDirector\"\n                        value= {GenDirector}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Ген. директор (ФИО) \"\n                        type=\"text\"\n                        name=\"GenDirector\"\n                        required\n                    /><br/>\n               </label>\n               <label> Бухгалтер (ФИО) : <br/>\n                    <Input\n                        id=\"Buhgalter\"\n                        value= {Buhgalter}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Бухгалтер (ФИО) \"\n                        type=\"text\"\n                        name=\"Buhgalter\"\n                        required\n                    /><br/>\n               </label>\n               <label> телефон : <br/>\n                    <Input\n                        id=\"tel\"\n                        value= {tel}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" телефон \"\n                        type=\"text\"\n                        name=\"tel\"\n                        required\n                    /><br/>\n               </label><br/>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {BIK}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n\n             <button onClick={handleSubmit}>Submit</button>\n  \n             \n        </form>\n    );\n    };\n    /*\n    const mapStateToProps = _state => ({\n        store: _state,\n        dogovorData: _state.dogovorData\n        //formOneState: _state.form.formOne\n    });\n    const mapDispatchToProps = _dispatch => ({\n        onDataReady: data => _dispatch(actions.formDataNew(data)),\n        onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(FormOne);  \n    */\n    export default FormOneSimp; \n\n    \n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';    \n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../css/style.js'\n\n    const FormTwoSimp = _props  => {\n        const [formData, setFormData] = useState({\n            Name: \"\",\n            FIO: \"\",\n            INN: \"\",\n            OGRNIP:\"\",\n            OKPO:\"\",\n            FactAdress:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            Name, \n            FIO,\n            INN,\n            OGRNIP,\n            OKPO,\n            FactAdress,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            //onDataReady(formData);\n            //onDogovorData({...dogovorData,formData:formData});\n            //console.log(\"formData after submit: \", formData);\n            _props.action(formData);\n        };\n    //console.log(\"store in formTwo : \", store)\n    return (\n        <form>\n            <br/>\n                <label> Название : <br/>\n                    <Input\n                        id=\"Name\"\n                        value= {Name}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название \"\n                        type=\"text\"\n                        name=\"Name\"\n                        required\n                    /><br/>\n               </label>\n               <label> ФИО : <br/>\n                    <Input\n                        id=\"FIO\"\n                        value= {FIO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ФИО \"\n                        type=\"text\"\n                        name=\"FIO\"\n                        required\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"text\"\n                        name=\"INN\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРНИП : <br/>\n                    <Input\n                        id=\"OGRNIP\"\n                        value= {OGRNIP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРНИП \"\n                        type=\"text\"\n                        name=\"OGRNIP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"text\"\n                        name=\"OKPO\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {BIK}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n          \n        \n        </form>\n    );\n    };\n/*\nconst mapStateToProps = _state => ({\n     store: _state,\n     dogovorData: _state.dogovorData\n    //yurlitzas: _state.home.yurlitzas,\n    //dogovorTypes: _state.home.dogovorTypes,\n    //dialects: _state.home.varDialects,\n    //formData: _state.home.formData\n});\nconst mapDispatchToProps = _dispatch => ({\n    //onYur: data => _dispatch(actions.yurlitso(data))\n    onDataReady: data =>\n        _dispatch(actions.zakazchikTypeTwoData(data)),\n    onDogovorData: data => _dispatch(actions.dogovorData(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(FormTwo); \n*/\n        \n    export default FormTwoSimp;\n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';\n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../css/style.js'\n\n    const FormThreeSimp = _props => {\n        const [formData, setFormData] = useState({\n            NameInformal: \"\",\n            lastName: \"\",\n            firstName: \"\",\n            midName:\"\",\n            docType:\"\",\n            Serial:\"\",\n            number:\"\",\n            whoGave:\"\",\n            whenGave:\"\",\n            codeGave:\"\",\n            addressGave:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            NameInformal, \n            lastName,\n            firstName,\n            midName,\n            docType,\n            Serial,\n            number,\n            whoGave,\n            whenGave,\n            codeGave,\n            addressGave\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n           // onDogovorData({...dogovorData,formData:formData});\n            //console.log(\"formData after submit: \", formData);\n            _props.action(formData);\n        };\n    //console.log(\"store in formThree : \", store)\n    return (\n        <form>\n            <br/>\n                <label> Название (неформальное) : <br/>\n                    <Input\n                        id=\"NameInformal\"\n                        value= {NameInformal}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название (неформальное) \"\n                        type=\"text\"\n                        name=\"NameInformal\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фамилия : <br/>\n                    <Input\n                        id=\"lastName\"\n                        value= {lastName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фамилия \"\n                        type=\"text\"\n                        name=\"lastName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Имя : <br/>\n                    <Input\n                        id=\"firstName\"\n                        value= {firstName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Имя \"\n                        type=\"text\"\n                        name=\"firstName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Отчество : <br/>\n                    <Input\n                        id=\"midName\"\n                        value= {midName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Отчество \"\n                        type=\"text\"\n                        name=\"midName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Вид документа : <br/>\n                    <Input\n                        id=\"docType\"\n                        value= {docType}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Вид документа \"\n                        type=\"text\"\n                        name=\"docType\"\n                        required\n                    /><br/>\n               </label>\n               <label> Серия : <br/>\n                    <Input\n                        id=\"Serial\"\n                        value= {Serial}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Серия \"\n                        type=\"text\"\n                        name=\"Serial\"\n                        required\n                    /><br/>\n               </label>\n               <label> Номер : <br/>\n                   <Input\n                       id=\"number\"\n                       value= {number}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Номер \"\n                       type=\"text\"\n                       name=\"number\"\n                       required\n                   /><br/>\n               </label>\n               <label> Кем выдан : <br/>\n                   <Input\n                       id=\"whoGave\"\n                       value= {whoGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Кем выдан \"\n                       type=\"text\"\n                       name=\"whoGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Дата выдачи : <br/>\n                   <Input\n                       id=\"whenGave\"\n                       value= {whenGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Дата выдачи \"\n                       type=\"text\"\n                       name=\"whenGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Код подразделения : <br/>\n                   <Input\n                       id=\"codeGave\"\n                       value= {codeGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Код подразделени \"\n                       type=\"text\"\n                       name=\"codeGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Адрес прописки : <br/>\n                   <Input\n                       id=\"addressGave\"\n                       value= {addressGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Адрес прописки \"\n                       type=\"text\"\n                       name=\"addressGave\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n           \n        </form>\n    );\n    };\n/*\n        const mapStateToProps = _state => ({\n     store: _state,\n     dogovorData: _state.dogovorData\n    });\n    const mapDispatchToProps = _dispatch => ({\n       onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(FormThree); \n*/\n        \n    export default FormThreeSimp;\n","   \n  import React, {useState,useEffect} from 'react';\n  import {\n    GlobalStyle,Container,Grid,AreaBox,Text,\n    TextBox,Button,ParamBox,naked,\n    NavbarDropdown,NavbarDropdownContent,link\n  } from '../css/style.js';\n  import FormOneSimp from \"./FormOneSimp\";\n  import FormTwoSimp from \"./FormTwoSimp\";\n  import FormThreeSimp from \"./FormThreeSimp\";\n  import {connect} from 'react-redux';\n  import * as actions from '../actions';\n    \n  const Selector = props => {\n  //const pool = props.content.home.dogTypes;\n  const formSet = \n    {\n      YL:<FormOneSimp action={props.action}/>,\n      IP:<FormTwoSimp action={props.action}/>,\n      FL:<FormThreeSimp action={props.action}/>\n    };\n  const pool = Object.keys(formSet);\n  console.log(\"pool inowners :\", pool);\n  const [select,setSelect] = useState(\"\");\n  console.log(\"select:\", select);\n  const [newdic,setNewdic] = useState(false);\n    return(\n      <div>\n        <button \n\t  onClick={()=>setNewdic(!newdic)}> \n\t    добавить фирму \n\t</button>\n        {newdic===false ? \"\" : \n          <div>\n            <select onChange={e => setSelect(e.target.value)}>\n              <option value=\"-\">-------</option>\n              {Object.entries(formSet)\n\t        .map(e => <option value={e[0]}>{e[0]}</option>)}\n            </select>\n            {select===\"\" ? \"\" : <div> {formSet[select]} </div> }\n          </div>\n        }\n      </div>\n    );\n  };\n  const Article = _props => {\n    const [fold,setFold] = useState(false);\n    const buttonHandler = () => setFold(!fold);\n    return (\n      <div>\n        <div>{_props.name}{\" \"}\n          <button \n\t    onClick={buttonHandler}\n\t  >\n\t    {fold === false ? \"open\" : \"close\"}\n\t  </button>            \n        </div>\n        {fold === false ? \"\" : <div>{_props.content}</div>}\n        <br/>\n      </div>        \n    );\n  }\n  const Ownerdic = (\n    { majorStore, \n      store,\n      onOwnerDicSelection,\n      onOwnerDicCreation\n    }) => (\n    <div>\n      <GlobalStyle/>\n      <Container>\n        <Grid>\n          <AreaBox g={[2,2,10,5]} fd=\"row\" style={naked}> \n            <TextBox w={\"80%\"}>\n              <Text>\n                <div>СПРАВОЧНИК НАШИХ ФИРМ:</div><br/>\n                {store.dics.map(e => \n                  <Article \n                   key={e.id} \n                   name={e.name}\n                   content={Object.entries(e.data)\n\t             .map(e => <div>{e[0]} : {e[1]}</div>)} \n                  />)\n                } \n                <Selector \n\t          content={majorStore} \n\t          action={onOwnerDicCreation}\n\t        />\n              </Text>\n            </TextBox>             \n          </AreaBox>\n        </Grid>\n      </Container>\n    </div>\n  );\n\n  const mapStateToProps = _state => ({\n    store: _state.ownerDic,\n    majorStore: _state\n  });\n  const mapDispatchToProps = _dispatch => ({\n    onOwnerDicSelection: \n      data => _dispatch(actions.ownerDicSelect(data)),\n    onOwnerDicCreation: \n      data => _dispatch(actions.ownerDicCreate(data))\n  });\n  export default connect (\n    mapStateToProps,\n    mapDispatchToProps\n  )(Ownerdic);\n  \n  //export default Ownerdic;\n\n","   \n    import React, {useState,useEffect} from 'react';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,\n        NavbarDropdown,NavbarDropdownContent,link\n    } from '../css/style.js';\n    import { Link } from 'react-router-dom';\n    import * as actions from '../actions';\n    import {connect} from 'react-redux';\n    import FormOne from \"./FormOne\";\n    import FormTwo from \"./FormTwo\";\n    import FormThree from \"./FormThree\";\n    import Montaj from \"./Montaj\";\n    import Ownerdic from \"./Ownerdic\";\n    const {newDogGen,nameExtractor} = require(\"../utils/dognums\");\n\n    const Home = (\n        {\n            store,\n            home,\n            formData,\n            newDogData,\n            onDogovorData,\n            dogovorData\n        }) => { \n        console.log(\"store inside home : \", store);\n        console.log(\"form data : \", formData);\n        console.log(\"new dogovor data : \", newDogData);\n\n//  STATE -------------------------------------------------------------\n    \n    \n    // INIT\n    const [selection, setSelection] = useState({\n        objNameSel:\"\",\n        dogTypeSel:\"\",\n        sysTypeSel:\"\",\n        servTypeSel:\"\",\n        clientTypeSel:\"\"    \n    });\n    const [hub,setHub] = useState({});\n    const output = {...dogovorData,selectors:{...selection,hub}};\n    \n    console.log(\"output : \", output);\n\n//  REDUCERS ---------------------------------------------------------\n\n    const updateSelection = event => {\n        setSelection({\n          ...selection,\n          [event.target.name]: event.target.value\n        });\n        onDogovorData(output);\n        console.log(\"updateSelection : \", selection);\n    }; \n    const updateHub = event => {\n        const target = event.target;      \n        const value = target.value === \"on\" ? target.checked : !target.checked;\n        const name = target.name;\n        setHub({...hub,[name]: value});\n    }; \n    const { objNameSel,\n            dogTypeSel,\n            sysTypeSel,\n            servTypeSel,\n            clientTypeSel,\n            } = selection;\n\n//  SAMPLE HARDCODED DATA VECTORS ------------------------------------ \n\n    const objectsDataVector = [\"Липки\",\"Лапки\",\"Пипки\"];\n    const dogovorsDataVector  = [\n        \"Договор проектирования\",\n        \"Договор поставки\",\n        \"Договор монтажа\",\n        \"Договор сервисного обслуживания\",\n        \"Договор субподряда\"\n    ];\n    const systemsDataVector = [\n        \"Вентиляция и кондиционирование\", \n        \"Отопление\",  \n        \"Котельная\",  \n        \"Водоснабжение и канализация\",  \n        \"ЭОМ\", \n        \"Слаботочные сети\",\n        \" Автоматизация\"\n    ];\n    const serversDataVector = [\"сервер один\", \"сервер два\"];\n    const clientDataVector = [\"организация\",\"ИП\",\"физ лицо\"];\n\n// ----------------------------------------------------------------------------------------------------------\n\n    const ObjectSelector = () => (\n        <label for=\"pet-select\"> выбери объект : <br/> \n        <select\n            value={objNameSel} \n            id=\"objNameSel\" \n            name=\"objNameSel\" \n            onChange={e =>updateSelection(e)}\n        >\n            <option value=\"\"> - - - - - - - - - - - - - - - </option>\n            {objectsDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n        </select><br/>\n        </label>\n    );\n    const DogovorSelector = () => (\n       <label for=\"pet-select\"> выбери тип договора : <br/>\n        <select\n            value={dogTypeSel} \n            id=\"dogTypeSel\" \n            name=\"dogTypeSel\" \n            onChange={e =>updateSelection(e)}\n        >\n            <option value=\"\"> - - - - - - - - - - - - - - - </option>\n            {dogovorsDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n        </select><br/> \n        </label>\n    );\n    const ServerSelector = () => (\n        <div>\n            <label for=\"pet-select\"> выбери тип сервера : </label><br/>\n            <select\n                value={servTypeSel} \n                id=\"servTypeSel\" \n                name=\"servTypeSel\" \n                onChange={e =>updateSelection(e)}\n            >\n                <option value=\"\"> - - - - - - - - - - - - - - - </option>\n                {serversDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n            </select><br/>\n        </div>\n    );\n\n    const ClientSelector = () => (\n        <div>\n           <label for=\"pet-select\"> выбери тип клиента : </label><br/>\n            <select\n                value={clientTypeSel} \n                id=\"clientTypeSel\" \n                name=\"clientTypeSel\" \n                onChange={e =>updateSelection(e)}\n            >\n                <option value=\"\"> - - - - - - - - - - - - - - - </option>\n                {clientDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n            </select><br/> \n        </div>\n    );\n    const SystemSelector = () => (\n        <div>\n            {systemsDataVector.map(e => \n                (<div>                    \n                <input\n                    checked={hub[`${e}`]}\n                    name={`${e}`}\n                    type=\"checkbox\"\n                    onChange={e =>updateHub(e)}\n                /><label>{`${e}`}</label>\n                </div>)\n             )}          \n        </div>\n    );\n\n    const FormTab = _props => {\n        return (clientTypeSel===\"организация\"\n                    ? <FormOne/> \n                    : clientTypeSel===\"ИП\"\n                        ? <FormTwo/>\n                        : clientTypeSel===\"физ лицо\"\n                            ? <FormThree/> \n                            : \"тип контрагента не выбран\"\n            );\n    };\n    const [dataSent,setDataSent] = useState(false);\n    const Dogovors = () => (\n        <button type=\"button\" disabled=\"false\">\n            <Link \n                to=\"/dodoc/montaj\"\n                style={link}\n            >\n                CОЗДАТЬ ДОГОВОР\n            </Link>\n        </button>  \n    );\n \n     \n   \n//  OUTPUT COMPONENT ------------------------------------------\n\n    const Basic = () => (\n        <div>\n        <GlobalStyle/>\n        <Container>\n            <Grid>\n                 <AreaBox g={[2,2,6,4]} fd=\"column\" style={naked}>  \n                     <TextBox h={\"100%\"}>\n                         <Text m={\"2vmin\"}>\n\t    \t\t    ЧТО-ТО ТУТ ДОЛЖНО БЫТЬ,<br/>\n\t    \t\t    А ПОКА МОЖЕШЬ ПРОЙТИСЬ ПО МЕНЮ\n                         </Text>\n                     </TextBox>\n                    \n                 </AreaBox>\n                 <AreaBox g={[6,2,11,5]} fd=\"row\" style={naked}>\n                    <ParamBox>\n                        <TextBox h={\"100%\"}>\n                            <Text m={\"2vmin\"}>\n                            </Text>\n                        </TextBox>\n                    </ParamBox>\n                </AreaBox>\n            </Grid>\n        </Container>\n        </div>\n        );\n        return <Basic/>;\n}\n\nconst mapStateToProps = _state => ({\n    store: _state,\n    home: _state.home,\n    formData: _state.formDataNew,\n    dogovorData: _state.dogovorData\n});\nconst mapDispatchToProps = _dispatch => ({\n    onDogovorData: data => _dispatch(actions.dogovorData(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(Home);\n\n//export default Home;\n\n","   \n    import React, {useState,useEffect} from 'react';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,\n        NavbarDropdown,NavbarDropdownContent,link\n    } from '../css/style.js';\n    import FormOneSimp from \"./FormOneSimp\";\n    import FormTwoSimp from \"./FormTwoSimp\";\n    import FormThreeSimp from \"./FormThreeSimp\";\n    import {connect} from 'react-redux';\n    import * as actions from '../actions';\n\n    const Selector = props => {\n        const pool = props.content.home.dogTypes;\n        const formSet = \n            {\n                YL:<FormOneSimp action={props.action}/>,\n                IP:<FormTwoSimp action={props.action}/>,\n                FL:<FormThreeSimp action={props.action}/>\n            };\n        const [select,setSelect] = useState(\"\");\n        console.log(\"select:\", select);\n        const [newdic,setNewdic] = useState(false);\n        return(\n            <div>\n                <button onClick={()=>setNewdic(!newdic)}>добавить агента</button>\n                {newdic===false ? \"\" : \n                    <div>\n                        <select onChange={e => setSelect(e.target.value)}>\n                            <option value=\"-\">-------</option>\n                            {Object.entries(pool).map(e => <option value={e[0]}>{e[0]}</option>)}\n                        </select>\n                        {select===\"\" ? \"\" : <div> {formSet[select]} </div> }\n                    </div>\n                }\n            </div>\n        );\n    };\n    const Article = _props => {\n        const [fold,setFold] = useState(false);\n        const buttonHandler = () => setFold(!fold);\n        return (\n            <div>\n                <div>{_props.name}{\" \"}\n                    <button onClick={buttonHandler}>{fold === false ? \"open\" : \"close\"}</button>            \n                </div>\n                {fold === false ? \"\" : <div>{_props.content}</div>}\n                <br/>\n            </div>        \n        );\n    }\n    const Agentdic = ({majorStore, store,onAgentDicSelection,onAgentDicCreation}) => (\n            <div>\n            <GlobalStyle/>\n            <Container>\n                <Grid>\n                    <AreaBox g={[2,2,10,5]} fd=\"row\" style={naked}> \n                        <TextBox w={\"80%\"}>\n                            <Text>\n                                <div>СПРАВОЧНИК НАШИХ КОНТРАГЕНТОВ:</div><br/>\n                                {store.dics.map(e => \n                                    <Article \n                                        key={e.id} \n                                        name={e.name}\n                                        content={Object.entries(e.data).map(e => <div>{e[0]} : {e[1]}</div>)} \n                                    />)\n                                } \n                             <Selector content={majorStore} action={onAgentDicCreation}/>\n                            </Text>\n                        </TextBox>             \n                    </AreaBox>\n                </Grid>\n            </Container>\n            </div>\n        );\n\n    const mapStateToProps = _state => ({\n        store: _state.agentDic,\n        majorStore: _state\n    });\n    const mapDispatchToProps = _dispatch => ({\n        onAgentDicSelection: data => _dispatch(actions.agentDicSelect(data)),\n        onAgentDicCreation: data => _dispatch(actions.agentDicCreate(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(Agentdic);\n\n    //export default Ownerdic;\n\n","   \n  // FormDog.js\n  import React, {useState} from 'react';\n  import {Input} from '../css/style.js';\n  import * as actions from '../actions';\n  import BeautyText from \"./BeautyText\";\n  import {connect} from 'react-redux';\n  import { Link } from 'react-router-dom';\n  import {\n    GlobalStyle,Container,Grid,AreaBox,Text,\n    TextBox,Button,ParamBox,naked,link\n  } from '../css/style.js'\n\n  const FormDog = _props => {\n    //const {store} = _props;\n    const [formData, setFormData] = useState({\n      objName: \"\",\n      dogType: \"\",\n      systems:\"\",\n      dogName: \"\",\n      zakazchikName: \"\",\n      postavshikName:\"\",\n      date:\"\",\n      bank:\"\",\n      price:\"\",\n      status:\"\",\n      paid:\"\",\n      reponsible:\"\",\n      textLink:\"\",\n      comment:\"\",\n    });\n    const updateFormData = event => {\n      console.log(\"updateFormData :\", formData);\n      console.log(\"event.target.name :\", event.target.name);\n      console.log(\"event.target.value :\", event.target.value);\n      setFormData({\n        ...formData,\n        [event.target.name]: event.target.value\n      });\n    };\n\n    const \n      { \n        objName,\n        dogType,\n        systems,\n        dogName,\n        zakazchikName,\n        postavshikName,\n        date,\n        bank,\n        price,\n        status,\n        paid,\n        reponsible,\n        textLink,\n        comment,\n      } = formData;\n      const handleSubmit = e => {\n        e.preventDefault();\n        _props.action(formData);\n      };\n   const systemsDataVector = [\n      \"Вентиляция и кондиционирование\",\n      \"Отопление\",\n      \"Котельная\",\n      \"Водоснабжение и канализация\",\n      \"ЭОМ\",\n      \"Слаботочные сети\",\n      \" Автоматизация\"\n    ];\n    const owners =  _props.store.ownerDic.dics.map(e => e.name);\n    const agents =  _props.store.agentDic.dics.map(e => e.name);\n    const objects =  _props.store.objDic.dics.map(e => e.name);\n    const dogTypes = [\"YL\",\"IP\",\"FL\"];\n    const Today = () => {\n        var today = new Date();\n        var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n        return date;\n    };\n\n\n  \n    return (\n      <form>\n        <br/>\n          <label> objName : \n            <select\n              id=\"objName\"\n              value= {objName}\n              onChange={e => updateFormData(e)}\n              placeholder=\" objName \"\n              type=\"text\"\n              name=\"objName\"\n              required\n              maxlength=\"120\"\n            ><br/>\n            <option>------------</option>\n\t        {objects.map(e => \n\t         <option value={e}>{e}</option>)}\n\t        </select><br/>\n          </label>\n          <label> dogType : \n            <select\n              id=\"dogType\"\n              value= {dogType}\n              onChange={e => updateFormData(e)}\n              placeholder=\" dogType \"\n              type=\"text\"\n              name=\"dogType\"\n              required\n              maxlength=\"120\"\n            ><br/>\n            <option>------------</option>\n\t        {dogTypes.map(e => \n\t         <option value={e}>{e}</option>)}\n\t        </select><br/>\n          </label>\n\n\n         <label> zakazchikName :\n           <select\n             id=\"zakazchikName\"\n             value= {zakazchikName}\n             onChange={e => updateFormData(e)}\n             placeholder=\" zakazchikName \"\n             type=\"number\"\n             name=\"zakazchikName\"\n             required\n             minlength=\"10\"\n             maxlength=\"10\"\n           >\n           <option>------------</option>\n           {agents.map(e => <option value={e}>{e}</option>)}\n           </select><br/>\n         </label>\n\n         <label> postavshikName :\n           <select\n             id=\"postavshikName\"\n             value= {postavshikName}\n             onChange={e => updateFormData(e)}\n             placeholder=\" postavshikName\"\n             type=\"number\"\n             name=\"postavshikName\"\n             required\n             minlength=\"10\"\n             maxlength=\"10\"\n           >\n           <option>------------</option>\n           {owners.map(e => <option value={e}>{e}</option>)}\n           </select><br/>\n         </label>\n        \n                          <label> dogName: \n           <span>generative<br/></span>\n         </label>\n\n        \n        <label> systems :\n            {systemsDataVector.map(e => \n                (<div>                    \n                    <input\n                        value={systems.concat(\", \" + e)}\n                        name=\"systems\"\n                        type=\"checkbox\"\n                        onChange={e => updateFormData(e)}\n                    /><label>{e}</label>\n                </div>)\n             )}<br/> \n        </label>\n\n\n\n         <label> date : <br/>\n           <Input\n             id=\"date\"\n             value= {date}\n             onChange={e => updateFormData(e)}\n             placeholder={Today()}\n             type=\"number\"\n             name=\"date\"\n             required\n             minlength=\"13\"\n             maxlength=\"13\"\n           /><br/>\n         </label>\n\n         <label> bank : <br/>\n           <Input\n             id=\"bank\"\n             value= {bank}\n             onChange={e => updateFormData(e)}\n             placeholder=\" bank \"\n             type=\"number\"\n             name=\"bank\"\n             required\n             minlength=\"8\"\n             maxlength=\"8\"\n           /><br/>\n         </label>\n\n         <label> price : <br/>\n           <Input\n             id=\"price\"\n             value= {price}\n             onChange={e => updateFormData(e)}\n             placeholder=\" price \"\n             type=\"text\"\n             name=\"price\"\n             required\n           /><br/>\n         </label>\n\n         <label> status : <br/>\n           <Input\n             id=\"status\"\n             value= {status}\n             onChange={e => updateFormData(e)}\n             placeholder=\" 0 \"\n             type=\"text\"\n             name=\"status\"\n             required\n           /><br/>\n         </label>\n\n         <label> paid : <br/>\n           <Input\n             id=\"paid\"\n             value= {paid}\n             onChange={e => updateFormData(e)}\n             placeholder=\" 0 \"\n             type=\"text\"\n             name=\"paid\"\n             required\n           /><br/>\n         </label>\n\n         <label> reponsible : <br/>\n           <Input\n             id=\"reponsible\"\n             value= {reponsible}\n             onChange={e => updateFormData(e)}\n             placeholder=\" whoever \"\n             type=\"text\"\n             name=\"reponsible\"\n             required\n           /><br/>\n         </label>\n\n         <label> text link : <br/>\n           <Input\n             id=\"textLink\"\n             value= {textLink}\n             onChange={e => updateFormData(e)}\n             placeholder=\" textLink \"\n             type=\"text\"\n             name=\"textLink\"\n             required\n           /><br/>\n         </label>\n\n         <label> comment : <br/>\n           <Input\n             id=\"comment\"\n             value= {comment}\n             onChange={e => updateFormData(e)}\n             placeholder=\" comment \"\n             type=\"text\"\n             name=\"comment\"\n             required\n           /><br/>\n         </label><br/>\n\n         <br/>\n         <button onClick={handleSubmit}>Submit</button>\n\n       </form>\n    );\n  };\n  /*\n  const mapStateToProps = _state => ({\n    store: _state,\n    dogovorData: _state.dogovorData\n    //formOneState: _state.form.formOne\n  });\n  const mapDispatchToProps = _dispatch => ({\n    onDataReady: data => _dispatch(actions.formDataNew(data)),\n    onDogovorData: data => _dispatch(actions.dogovorData(data))\n  });\n\n  export default connect (\n    mapStateToProps,\n    mapDispatchToProps\n  )(FormOne);  \n  */\n  export default FormDog; \n\n    \n"," \n  // Dogovordics.js\n  import React, {useState,useEffect} from 'react';\n  import {\n    GlobalStyle,Container,Grid,AreaBox,Text,\n    TextBox,Button,ParamBox,naked,\n    NavbarDropdown,NavbarDropdownContent,link\n  } from '../css/style.js';\n  import FormDog from \"./FormDog\";\n  import {connect} from 'react-redux';\n  import * as actions from '../actions';\n\n  const Article = _props => {\n    const [fold,setFold] = useState(false);\n    const buttonHandler = () => setFold(!fold);\n    return (\n      <div>\n        <div>{_props.name}{\" \"}\n          <button \n            onClick={buttonHandler}\n\t  >\n\t\t        {fold === false ? \"open\" : \"close\"}\n\t\t    </button>            \n                </div>\n                {fold === false ? \"\" : <div>{_props.content}</div>}\n                <br/>\n            </div>        \n        );\n    }\n  const Selector = props => {\n    const [newdic,setNewdic] = useState(false);\n    return(\n      <div>\n        <button \n\t        onClick={()=>setNewdic(!newdic)}>добавить договор\n\t    </button>\n        {newdic===false ? \"\" : <FormDog action={props.action} store={props.content}/>}\n      </div>\n    );\n  };\n  \n  const Dogovordic = (\n    { majorStore, \n      store, \n      onDogDicSelection, \n      onDogDicCreation\n    }) => (\n    <div>\n      <GlobalStyle/>\n      <Container>\n        <Grid>\n          <AreaBox g={[2,2,10,5]} fd=\"row\" style={naked}> \n            <TextBox w={\"80%\"}>\n              <Text>\n                <div>СПРАВОЧНИК НАШИХ ДОГОВОРОВ:</div><br/>\n                 {/*<Exhisting content={store}/>*/}\n                 {store.dics.map(e => \n                        <Article \n                          key={e.id} \n                          name={e.name}\n                          content={Object.entries(e.data)\n\t                        .map(e => <div>{e[0]} : {e[1]}</div>)} \n                        />)} \n                 <Selector \n\t                content={majorStore} \n\t                action={onDogDicCreation}\n\t             />\n\n              </Text>\n            </TextBox>             \n          </AreaBox>\n        </Grid>\n      </Container>\n    </div>\n  );\n\n  const mapStateToProps = _state => ({\n    store: _state.dogDic,\n    majorStore: _state\n  });\n  const mapDispatchToProps = _dispatch => ({\n    onDogDicSelection: data => _dispatch(actions.dogDicSelect(data)),\n    onDogDicCreation: data => _dispatch(actions.dogDicCreate(data))\n  });\n\n  export default connect (\n    mapStateToProps,\n    mapDispatchToProps\n  )(Dogovordic);\n\n  //export default Ownerdic;\n\n","   \n  // FormObj.js\n  import React, {useState} from 'react';\n  import {Input} from '../css/style.js';\n  import * as actions from '../actions';\n  import BeautyText from \"./BeautyText\";\n  import {connect} from 'react-redux';\n  import { Link } from 'react-router-dom';\n  import {\n    GlobalStyle,Container,Grid,AreaBox,Text,\n    TextBox,Button,ParamBox,naked,link\n  } from '../css/style.js'\n\n  const FormObj = _props => {\n    const [formData, setFormData] = useState({\n      name: \"\",\n      adress: \"\",\n      contacts: \"\",\n      workRegime:\"\"\n    });\n    const updateFormData = event => {\n      setFormData({\n        ...formData,\n        [event.target.name]: event.target.value\n      });\n    };\n    const \n      { name,\n        adress,\n        contacts,\n        workRegime,\n      } = formData;\n    const handleSubmit = e => {\n      e.preventDefault();\n      _props.action(formData);\n    };\n    return (\n      <form>\n        <br/>\n          <label> name <br/>\n            <Input\n              id=\"name\"\n              value= {name}\n              onChange={e => updateFormData(e)}\n              placeholder=\" name\"\n              type=\"text\"\n              name=\"name\"\n              required\n              maxlength=\"120\"\n            /><br/>\n          </label>\n          <label> adress: <br/>\n            <Input\n              id=\"adress\"\n              value= {adress}\n              onChange={e => updateFormData(e)}\n              placeholder=\" adress \"\n              type=\"text\"\n              name=\"adress\"\n              required\n              maxlength=\"120\"\n            /><br/>\n          </label>\n\t <label> Contact: <br/>\n            <Input\n              id=\"contacts\"\n              value= {contacts}\n              onChange={e => updateFormData(e)}\n              placeholder=\" FIO role ?contacts \"\n              type=\"text\"\n              name=\"contacts\"\n              required\n              maxlength=\"120\"\n            /><br/>\n          </label>\n\n          <label> workRegime : <br/>\n            <Input\n              id=\"workRegime\"\n              value= {workRegime}\n              onChange={e => updateFormData(e)}\n              placeholder=\" workRegime \"\n              type=\"number\"\n              name=\"workRegime\"\n              required\n              minlength=\"8\"\n              maxlength=\"8\"\n            /><br/>\n          </label>\n          <button onClick={handleSubmit}>Submit</button>\n        </form>\n      );\n    };\n    /*\n  const mapStateToProps = _state => ({\n    store: _state,\n    dogovorData: _state.dogovorData\n    //formOneState: _state.form.formOne\n  });\n  const mapDispatchToProps = _dispatch => ({\n    onDataReady: data => _dispatch(actions.formDataNew(data)),\n    onDogovorData: data => _dispatch(actions.dogovorData(data))\n  });\n  export default connect (\n    mapStateToProps,\n    mapDispatchToProps\n  )(FormOne);  \n  */\n  export default FormObj; \n","  \n  // Objectdic.js\n  import React, {useState,useEffect} from 'react';\n  import {\n    GlobalStyle,Container,Grid,AreaBox,Text,\n    TextBox,Button,ParamBox,naked,\n    NavbarDropdown,NavbarDropdownContent,link\n  } from '../css/style.js';\n  import FormObj from \"./FormObj\";\n  import {connect} from 'react-redux';\n  import * as actions from '../actions';\n\n  const Selector = props => {\n    const pool = props.content.home.dogTypes;\n    const formSet = <FormObj action={props.action}/>\n    const [select,setSelect] = useState(\"\");\n    //console.log(\"select:\", select);\n    const [newdic,setNewdic] = useState(false);\n    return(\n      <div>\n       <button \n         onClick={()=>setNewdic(!newdic)}\n       >\n         добавить объект\n       </button>\n         {newdic===false ? \"\" : formSet}\n       </div>\n    );\n  };\n  const Article = _props => {\n    const [fold,setFold] = useState(false);\n    const buttonHandler = () => setFold(!fold);\n    return (\n      <div>\n        <div>{_props.name}{\" \"}\n          <button \n            onClick={buttonHandler}\n\t  >\n\t\t        {fold === false ? \"open\" : \"close\"}\n\t\t    </button>            \n                </div>\n                {fold === false ? \"\" : <div>{_props.content}</div>}\n                <br/>\n            </div>        \n        );\n    }\n    const Objectdic =( \n      { majorStore, \n        store,\n        onObjDicSelection,\n        onObjDicCreation}) => (\n          <div>\n          <GlobalStyle/>\n            <Container>\n              <Grid>\n                <AreaBox g={[2,2,10,5]} fd=\"row\" style={naked}> \n                  <TextBox w={\"80%\"}>\n                    <Text>\n                      <div>СПРАВОЧНИК НАШИХ ОБЪЕКТОВ:</div><br/>\n                      {store.dics.map(e => \n                        <Article \n                          key={e.id} \n                          name={e.name}\n                          content={Object.entries(e.data)\n\t                        .map(e => <div>{e[0]} : {e[1]}</div>)} \n                        />)} \n                      <Selector \n\t\t                content={majorStore} \n\t\t                action={onObjDicCreation}/>\n                    </Text>\n                  </TextBox>             \n                </AreaBox>\n              </Grid>\n            </Container>\n          </div>\n        );\n\n  const mapStateToProps = _state => ({\n    store: _state.objDic,\n    majorStore: _state\n  });\n  const mapDispatchToProps = _dispatch => ({\n    onObjDicSelection: data => _dispatch(actions.objDicSelect(data)),\n    onObjDicCreation: data => _dispatch(actions.objDicCreate(data))\n  });\n\n  export default connect (\n    mapStateToProps,\n    mapDispatchToProps\n  )(Objectdic);\n\n  //export default Ownerdic;\n\n","import React from 'react';\nimport { Route, Switch,BrowserRouter as Router,Link } from 'react-router-dom';\nimport Home from './components/Home';\nimport Montaj from './components/Montaj';\nimport Ownerdic from './components/Ownerdic';\nimport Agentdic from './components/Agentdic';\nimport Dogovordic from './components/Dogovordic';\nimport Objectdic from './components/Objectdic';\n\nfunction App() {\n  return (\n    <main className=\"container\" >\n            <Router>\n              <div>\n                <ul>\n                  <li>\n                    <Link to=\"/dodoc\">home</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/dodoc/ownerdic\">owners</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/dodoc/agentdic\">agents</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/dodoc/objdic\">objects</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/dodoc/dogdic\">dogovors</Link>\n                  </li>\n                </ul>\n                <hr/>\n            <Switch id=\"main\">\n                <Route exact path=\"/dodoc/\" \n                    component={Home} />\n                <Route exact path=\"/dodoc/ownerdic\" \n                    component={Ownerdic} />\n                <Route exact path=\"/dodoc/agentdic\" \n                    component={Agentdic} />\n                <Route exact path=\"/dodoc/dogdic\" \n                    component={Dogovordic} />\n                <Route exact path=\"/dodoc/objdic\" \n                    component={Objectdic} />\n                <Route exact path=\"/dodoc/montaj\" \n                    component={Montaj} />           \n            </Switch>\n           </div>\n        </Router>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport reducer from './reducers'; \nimport App from './App';\nimport store from './store';\n\n//const store = createStore(reducer);\n//console.log(\"store while initialise in index.js : \", //store.getState());\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nif (window.Cypress) {\n    window.store = store;\n}\n"],"sourceRoot":""}