{"version":3,"sources":["css/Roboto_Mono/RobotoMono-Medium.ttf","state.js","reducers/home.js","reducers/formOne.js","reducers/formTwo.js","reducers/formThree.js","reducers/index.js","constants/actionTypes.js","css/style.js","components/BeautyText.js","components/FormOne.js","actions/index.js","components/FormTwo.js","components/FormThree.js","components/Home.js","App.js","index.js"],"names":["module","exports","state","hello","yurlitzas","dogovorTypes","currentVars","varDialects","basic","make","sell","formData","zakazchikTypes","z1","sampleData","type","compFullName","compShortName","INN","KPP","OGRN","OKPO","GosRegDate","YurAdress","FactAdress","GenDirector","Buhgalter","tel","bankName","BIK","BillOne","BillTwo","z2","Name","FIO","OGRNIP","z3","NameInformal","lastName","firstName","midName","docType","Serial","number","whoGave","whenGave","codeGave","addressGave","initialState","window","Cypress","rootReducer","combineReducers","home","action","yurlitso","payload","dogovorType","formOne","zakazchikTypeOneData","formTwo","zakazchikTypeTwoData","formThree","zakazchikTypeThreeData","GlobalStyle","createGlobalStyle","Container","styled","div","Grid","AreaBox","p","fd","g","ParamBox","w","h","Text","m","TextBox","img","Input","input","b","Font","register","family","src","font","styles","StyleSheet","create","page","margin","fontFamily","display","wordBreak","border","hyphens","section","padding","content","sampleDataOne","sampleDataTwo","zakazchik","template","_data","data","data_to_text","_store","console","log","hold","Object","keys","JSON","parse","stringify","PdfDocument","_props","style","text","BeautyText","store","document","fileName","blob","url","loading","error","connect","_state","formOneState","_dispatch","onDataReady","useState","setFormData","updateFormData","event","target","name","value","id","onChange","e","placeholder","required","maxlength","minlength","onClick","preventDefault","dialects","onYur","_yurlitso","setYurlitso","dogType","setDogType","setZakazchik","Elem","set","YurTab","map","i","key","DogTab","DialTab","zakTypes","Zakazchik","Basic","App","className","exact","path","component","Home","createStore","reducer","getState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1670875c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RobotoMono-Medium.7cfbd428.ttf\";","const z1 =\n{ \n    sampleData:{type:\n        {\n            compFullName: \"-\",\n            compShortName: \"-\",\n            INN: \"-\",\n            KPP:\"-\",\n            OGRN:\"-\",\n            OKPO:\"-\",\n            GosRegDate:\"-\",\n            YurAdress:\"-\",\n            FactAdress:\"-\",\n            GenDirector:\"-\",\n            Buhgalter:\"-\",\n            tel:\"-\",\n            bankName:\"-\",\n            BIK:\"-\",\n            BillOne:\"-\",\n            BillTwo:\"-\"\n        }\n    }\n}\nconst z2 = \n{\n    Name: \"-\",\n    FIO: \"-\",\n    INN: \"-\",\n    OGRNIP:\"-\",\n    OKPO:\"-\",\n    FactAdress:\"-\",\n    bankName:\"-\",\n    BIK:\"-\",\n    BillOne:\"-\",\n    BillTwo:\"-\"\n};\nconst z3 = \n{\n    NameInformal: \"-\",\n    lastName: \"-\",\n    firstName: \"-\",\n    midName:\"-\",\n    docType:\"-\",\n    Serial:\"-\",\n    number:\"-\",\n    whoGave:\"-\",\n    whenGave:\"-\",\n    codeGave:\"-\",\n    addressGave:\"-\"\n};\nconst formDefaultData = \"formDefaultData\";\n\nconst dialects = {\n    basic:\n    [\n        \"имя нашей компании\",\n        \"имя директора нашей компании\",\n        \"имя их компании\",\n        \"имя директора их компании\"\n    ],\n    make:\n    [\n        \"имя подрядчика\",\n        \"имя директора подрядчика\",\n        \"имя звквзчика\",\n        \"имя директора заказчика\"\n    ],\n    sell:\n    [\n      \"имя поставщик\",\n      \"имя директора поставщика\",\n      \"имя покупателя\",\n      \"имя директора покупателя\"\n    ]\n  \n};\n\nconst state = \n{\n    hello:\"hello\",\n    yurlitzas: [ \"Добровент\", \"Доброклад\", \"Доброход\" ],\n    dogovorTypes:[\"проектирование\",\"поставка\"],\n    currentVars:\n    [\n        \"ourCompanyName\",\n        \"ourDirectorName\",\n        \"theirCompanyName\",\n        \"theirDirectorName\"\n    ],\n    varDialects: dialects,\n    formData: formDefaultData,\n    zakazchikTypes: {z1:z1,z2:z2,z3:z3}\n};\n\nexport {state};\n","import {state} from '../state.js';\nimport {\n    YURLITSO,\n    DOGOVOR_TYPE,\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case YURLITSO:\n            return { yurlitso: action.payload };\n        case DOGOVOR_TYPE:\n            return { dogovorType: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPEONE_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPEONE_DATA:\n            return { zakazchikTypeOneData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPETWO_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPETWO_DATA:\n            return { zakazchikTypeTwoData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPETHREE_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPETHREE_DATA:\n            return { zakazchikTypeThreeData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {combineReducers} from 'redux';\nimport home from './home';\nimport formOne from './formOne';\nimport formTwo from './formTwo';\nimport formThree from './formThree';\n\nconst rootReducer = combineReducers({\n    home,\n    formOne,\n    formTwo,\n    formThree\n});\n\nexport default rootReducer;\n","export const YURLITSO = \"YURLITSO\";\nexport const DOGOVOR_TYPE = \"DOGOVOR_TYPE\";\nexport const VARIABLE = \"VARIABLE\";\nexport const ZAKAZCHIK_TYPEONE_DATA = \"ZAKAZCHIK_TYPEONE_DATA\";\nexport const ZAKAZCHIK_TYPETWO_DATA = \"ZAKAZCHIK_TYPETWO_DATA\";\nexport const ZAKAZCHIK_TYPETHREE_DATA = \"ZAKAZCHIK_TYPETHREE_DATA\";\n","import styled from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0px;\n    background:white;\n  }\n`;\nconst Container = styled.div`\n    width:100vw;\n    height:100vh;\n`; \nconst Grid = styled.div`\n    display:grid;\n    grid-template-columns: 5% repeat(3,30%) 5%;\n    grid-template-rows: 2.5vh repeat(8,11.9%) 2.5vh;\n    width:100%;\n    height:100%;\n    background:white;\n`;\nconst AreaBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"column\"};\n    grid-area:${p=> p.g[0]+\"/\"+p.g[1]+\"/\"+p.g[2]+\"/\"+p.g[3]};\n    justify-content:center;\n    align-items:center;\n    border:0.5px solid black;\n    padding:0px;\n    overflow-wrap:normal;\n    background:White;\n`;\nconst ParamBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"row\"};\n    width:${p => p.w || '100%'};\n    height:${p => p.h || '100%'};\n    justify-content:center;\n    align-items:center;\n    overflow-wrap:normal;\n    //overflow:scroll;\n`;\nconst Text = styled.div`\n    margin:${p => p.m};\n`;\nconst Button = styled.div`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    margin:1vmin;\n    padding:5vmin;\n    width:50vw;\n    border:0.5vmin solid DarkSlateGrey;    \n`;\nconst Img = styled.img`\n    width:auto;\n    height:80%;\n`;\nconst TextBox = styled(ParamBox)`\n    display:flex;\n    flex-wrap:wrap;\n    width:100%;\n    height:${p => p.h || \"66%\"};\n    justify-content:flex-start;\n    align-items:flex-start;\n    font-size:1rem;\n    margin:1vmin;\n    overflow:scroll;\n`;\nconst Input = styled.input`\n    color: black;\n    border: 1px solid darkGrey;\n    margin: 0 0 5px 0;\n    width: 300%;\n    background-color: lightGrey;\n        \n    &:hover & {\n        background-color: white;\n        box-shadow: 0px 4px 20px 0px rgba(0, 0, 0, 0.05);\n    }\n\n`\n\nconst Selectable = styled.b`\n    &:hover {\n        background-color: yellow;\n    }\n`\nconst link = {\n  'color': 'black',\n  'text-decoration': 'none'\n};\nconst ghost = {\n  'color': 'grey',\n  'opacity': '50%'\n};\nconst naked = {\n  'border': '0px',\n};\n\nexport {\n    GlobalStyle,Container,Grid,AreaBox,ParamBox,TextBox,Input,Text,Button,Img,link,naked,Selectable,ghost\n}\n","\n    import React from 'react';\n    import font from '../css/Roboto_Mono/RobotoMono-Medium.ttf'\n    import {\n        Page,\n        Text,\n        View,\n        Document,\n        StyleSheet,\n        PDFDownloadLink,\n        Font,\n    } from \"@react-pdf/renderer\";\n\n    // Register font\n    Font.register({\n      family: 'Roboto Mono',\n      src: font\n    })\n\n    const styles = StyleSheet.create({\n        page: {\n\t        margin: \"2em auto\",\n            fontFamily: \"Roboto Mono\",\n            display: \"flex\",\n            wordBreak: \"break-word\",\n            border:\"1px solid black\",\n\t        hyphens: \"auto\"\n        },\n        section: {\n            margin: 10,\n            padding: 10,\n        },\n        content: {\n            display: \"block\"\n        }\n    });\n\n    let sampleDataOne = {type:\n        {\n            compFullName: \" - \",\n            compShortName: \" - \",\n            INN: \" - \",\n            KPP: \" - \",\n            OGRN: \" - \",\n            OKPO: \" - \",\n            GosRegDate: \" - \",\n            YurAdress: \" - \",\n            FactAdress: \" - \",\n            GenDirector: \" - \",\n            Buhgalter: \" - \",\n            tel: \" - \",\n            bankName: \" - \",\n            BIK: \" - \",\n            BillOne: \" - \",\n            BillTwo: \" - \",\n        }\n    };\n    let sampleDataTwo = {type:\n        {\n            Name: \"-\",\n            FIO: \"-\",\n            INN: \"-\",\n            OGRNIP:\"-\",\n            OKPO:\"-\",\n            FactAdress:\"-\",\n            bankName:\"-\",\n            BIK:\"-\",\n            BillOne:\"-\",\n            BillTwo:\"-\"\n        }\n    };\n    let sampleDataThree = {type:\n        {\n            NameInformal: \"-\",\n            lastName: \"-\",\n            firstName: \"-\",\n            midName:\"-\",\n            docType:\"-\",\n            Serial:\"-\",\n            number:\"-\",\n            whoGave:\"-\",\n            whenGave:\"-\",\n            codeGave:\"-\",\n            addressGave:\"-\"\n        }\n    };\n    \n    const templateOne = (_data = sampleDataOne.type) => {\n        return (\"Нашакомпания ,в лице директора ФИОдиректора Нашей Компании действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" +\n        _data.compFullName + \" , в лице генерального директора  ФИО второй стороны , действующего(ей) на основании Устава, именуемое в дальнейшем 'Покупатель',РЕКВИЗИТЫ СТОРОН: \" + \n        \" Покупатель: \" + _data.compShortName  +\n        \" ИНН: \" + _data.INN +\n        \" КПП: \" + _data.KPP +\n        \" ОГРН: \" + _data.OGRN + \n        \" Юр.адрес: \" + _data.YurAdress +\n        \" Факт.адрес: \" + _data.FactAdress +\n        \" Банк: \" +  _data.bankName +\n        \" БИК: \" +  _data.BIK +\n        \" р/с: \" +  _data.BillOne +\n        \" к/с: \" +  _data.BillTwo +\n        \" \")\n    };\n    const templateTwo = (_data = sampleDataTwo.type) => {\n        return(\"Наша компания, в лице директора ФИОдиректора нашей компании, действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" + _data.Name + \" , в лице генерального директора \" + _data.FIO + \", действующего(ей) на основании Устава, именуемое в дальнейшем 'Покупатель', РЕКВИЗИТЫ СТОРОН: Покупатель: \" + \n_data.Name + \" ИНН: \" + _data.INN + \" ОГРНИП: \" + _data.OGRNIP + \" Факт.адрес: \" +  _data.FactAdress + \" Банк: \" + _data.bankName +\n\" БИК: \" +  _data.BIK + \" р/с: \" + _data.BillOne + \" к/с: \" +  _data.BillTwo + \" подписи \" + _data.Name + \" _/инициалы(ФИО)/ \" + _data.FIO + \"\"\n        )\n    };\n    const templateThree = (_data = sampleDataTwo.type) => {\n        return(\"Нашакомпания, в лице директора ФИОдиректора нашей компании, действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" + _data.lastName + \" \" + _data.firstName + \" \" + _data.midName + \" , \" + _data.docType + \" серия \" + _data.Serial + \" номер \" +  _data.number + \" , выдан \" +  _data.whoGave + \" \" +  _data.whenGave + \" код подразделения \" +  _data.codeGave + \" , именуемый(ая) в дальнейшем 'Покупатель', РЕКВИЗИТЫ СТОРОН: Покупатель: \"  + _data.lastName + \" \" + _data.firstName + \" \" + _data.midName + \" , \" + _data.docType + \" серия \" + _data.Serial + \" номер \" +  _data.number + \" , выдан \" +  _data.whoGave + \" \" +  _data.whenGave + \" код подразделения \" +  _data.codeGave + \" подписи \" + \"_/инициалы(ФИО)/\"\n        );\n    };\n\n    const zakazchik = {\n        one:{ template: templateOne, data: sampleDataOne },\n        two:{ template: templateTwo, data: sampleDataTwo },\n        three:{ template: templateThree, data: sampleDataThree }\n    };\n\n    const data_to_text = (_data,_store) => {\n        console.log(\"data_to_text on load : \", _store);\n        const hold = Object.keys(JSON.parse(_data))[0];\n        switch (hold) {\n            case 'zakazchikTypeOneData':\n                return JSON.stringify(zakazchik.one.template(JSON.parse(_data)[hold]));\n            case 'zakazchikTypeTwoData':\n                return JSON.stringify(zakazchik.two.template(JSON.parse(_data)[hold]));\n            case 'zakazchikTypeThreeData':\n                return JSON.stringify(zakazchik.three.template(JSON.parse(_data)[hold]));\n            default:\n                return \"whatever\";\n        }\n    };\n\n    const PdfDocument = _props => (\n        <Document>\n            <Page style={styles.page}>\n                <View style={styles.section}>\n                    <Text style={styles.content}>\n                        {_props.text}\n                    </Text>\n                </View>\n            </Page>\n        </Document>\n    );\n\n    const BeautyText = (_props) => (\n      <div>\n        <PdfDocument text={data_to_text(_props.text,_props.store)}/>\n        <PDFDownloadLink \n            document={<PdfDocument \n                text={data_to_text(_props.text,_props.store)}/>\n            } \n            fileName=\"somename.pdf\"\n        >\n            {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Забери PDF если считаешь что он ок.')}\n        </PDFDownloadLink>\n      </div>\n    );\n\n    export default BeautyText;\n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';\n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n\n    const FormOne = ({store,formOneState,onDataReady}) => {\n        const [formData, setFormData] = useState({\n            compFullName: \"\",\n            compShortName: \"\",\n            INN: \"\",\n            KPP:\"\",\n            OGRN:\"\",\n            OKPO:\"\",\n            GosRegDate:\"\",\n            YurAdress:\"\",\n            FactAdress:\"\",\n            GenDirector:\"\",\n            Buhgalter:\"\",\n            tel:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n        }\n        const \n        { \n            compFullName, \n            compShortName,\n            INN,\n            KPP,\n            OGRN,\n            OKPO,\n            GosRegDate,\n            YurAdress,\n            FactAdress,\n            GenDirector,\n            Buhgalter,\n            tel,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            onDataReady(formData);\n            console.log(\"formData after submit: \", formData);\n        };\n    console.log(\"store in formOne : \", formOneState);\n    return (\n        <form>\n            <br/>\n                <label> Полное название организации : <br/>\n                    <Input\n                        id=\"compFullName\"\n                        value= {compFullName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Полное название организации \"\n                        type=\"text\"\n                        name=\"compFullName\"\n                        required\n                        maxlength=\"120\"\n                    /><br/>\n               </label>\n               <label> Краткое название организации : <br/>\n                    <Input\n                        id=\"compShortName\"\n                        value= {compShortName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Краткое название организации \"\n                        type=\"text\"\n                        name=\"compShortName\"\n                        required\n                        maxlength=\"120\"\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"number\"\n                        name=\"INN\"\n                        required\n                        minlength=\"10\"\n                        maxlength=\"10\"\n                    /><br/>\n               </label>\n               <label> КПП : <br/>\n                    <Input\n                        id=\"KPP\"\n                        value= {KPP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" КПП \"\n                        type=\"text\"\n                        name=\"KPP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРН : <br/>\n                    <Input\n                        id=\"OGRN\"\n                        value= {OGRN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРН \"\n                        type=\"number\"\n                        name=\"OGRN\"\n                        required\n                        minlength=\"13\"\n                        maxlength=\"13\"\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"number\"\n                        name=\"OKPO\"\n                        required\n                        minlength=\"8\"\n                        maxlength=\"8\"\n                    /><br/>\n               </label>\n               <label> Дата государственной регистрации : <br/>\n                    <Input\n                        id=\"GosRegDate\"\n                        value= {GosRegDate}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Дата государственной регистрации \"\n                        type=\"text\"\n                        name=\"GosRegDate\"\n                        required\n                    /><br/>\n               </label>\n               <label> Юридический адрес : <br/>\n                    <Input\n                        id=\"YurAdress\"\n                        value= {YurAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Юридический адрес \"\n                        type=\"text\"\n                        name=\"YurAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Ген. директор (ФИО) : <br/>\n                    <Input\n                        id=\"GenDirector\"\n                        value= {GenDirector}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Ген. директор (ФИО) \"\n                        type=\"text\"\n                        name=\"GenDirector\"\n                        required\n                    /><br/>\n               </label>\n               <label> Бухгалтер (ФИО) : <br/>\n                    <Input\n                        id=\"Buhgalter\"\n                        value= {Buhgalter}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Бухгалтер (ФИО) \"\n                        type=\"text\"\n                        name=\"Buhgalter\"\n                        required\n                    /><br/>\n               </label>\n               <label> телефон : <br/>\n                    <Input\n                        id=\"tel\"\n                        value= {tel}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" телефон \"\n                        type=\"text\"\n                        name=\"tel\"\n                        required\n                    /><br/>\n               </label><br/>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {BIK}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n          <div>\n          </div>\n            <div>\n                <BeautyText text={JSON.stringify(formOneState)} store={store}/>\n            </div>\n        </form>\n    );\n    };\n\nconst mapStateToProps = _state => ({\n    store: _state,\n    formOneState: _state.formOne\n});\nconst mapDispatchToProps = _dispatch => ({\n    onDataReady: data =>\n        _dispatch(actions.zakazchikTypeOneData(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(FormOne);       \n","import * as types from \"../constants/actionTypes\";\n\nexport const yurlitso = _yurlitso => {\n    console.log({type:types.YURLITSO, payload: _yurlitso});\n    return {type:types.YURLITSO, payload: _yurlitso};\n};\n\nexport const dogovorType = _dogovor => {\n    console.log({type:types.DOGOVOR_TYPE, payload: _dogovor});\n    return {type:types.DOGOVOR_TYPE, payload: _dogovor};\n};\n\nexport const zakazchikTypeOneData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPEONE_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPEONE_DATA,\n            payload:_data\n       }\n    );\n};\nexport const zakazchikTypeTwoData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPETWO_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPETWO_DATA,\n            payload:_data\n       }\n    );\n};\nexport const zakazchikTypeThreeData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPETHREE_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPETHREE_DATA,\n            payload:_data\n       }\n    );\n};\n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';    \n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n\n    const FormTwo = ({store,onDataReady}) => {\n        const [formData, setFormData] = useState({\n            Name: \"\",\n            FIO: \"\",\n            INN: \"\",\n            OGRNIP:\"\",\n            OKPO:\"\",\n            FactAdress:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            Name, \n            FIO,\n            INN,\n            OGRNIP,\n            OKPO,\n            FactAdress,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            onDataReady(formData);\n            console.log(\"formData after submit: \", formData);\n        };\n    console.log(\"store in formTwo : \", store)\n    return (\n        <form>\n            <br/>\n                <label> Название : <br/>\n                    <Input\n                        id=\"Name\"\n                        value= {Name}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название \"\n                        type=\"text\"\n                        name=\"Name\"\n                        required\n                    /><br/>\n               </label>\n               <label> ФИО : <br/>\n                    <Input\n                        id=\"FIO\"\n                        value= {FIO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ФИО \"\n                        type=\"text\"\n                        name=\"FIO\"\n                        required\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"text\"\n                        name=\"INN\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРНИП : <br/>\n                    <Input\n                        id=\"OGRNIP\"\n                        value= {OGRNIP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРНИП \"\n                        type=\"text\"\n                        name=\"OGRNIP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"text\"\n                        name=\"OKPO\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {BIK}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n\n            <div>\n                <BeautyText text={JSON.stringify(store)}/>\n            </div>\n\n        \n        </form>\n    );\n    };\n\nconst mapStateToProps = _state => ({\n    store: _state.formTwo,\n    //home: _state.home,\n    //yurlitzas: _state.home.yurlitzas,\n    //dogovorTypes: _state.home.dogovorTypes,\n    //dialects: _state.home.varDialects,\n    //formData: _state.home.formData\n});\nconst mapDispatchToProps = _dispatch => ({\n    //onYur: data => _dispatch(actions.yurlitso(data))\n    onDataReady: data =>\n        _dispatch(actions.zakazchikTypeTwoData(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(FormTwo); \n\n        \n    //export default FormTwo;\n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';\n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n/*\n1. Название (то, как будет отображаться контакт в системе, неформальное название)\n2. Фамилия\n3. Имя\n4. Отчество\n5. Вид документа (чаще всего паспорт, но может быть загранник, военный билет)\n6. Серия\n7. Номер\n8. Кем выдан\n9. Дата выдачи\n10. Код подразделения\n11. Адрес прописки\n*/\n    const FormThree = ({store,onDataReady}) => {\n        const [formData, setFormData] = useState({\n            NameInformal: \"\",\n            lastName: \"\",\n            firstName: \"\",\n            midName:\"\",\n            docType:\"\",\n            Serial:\"\",\n            number:\"\",\n            whoGave:\"\",\n            whenGave:\"\",\n            codeGave:\"\",\n            addressGave:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            NameInformal, \n            lastName,\n            firstName,\n            midName,\n            docType,\n            Serial,\n            number,\n            whoGave,\n            whenGave,\n            codeGave,\n            addressGave\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            onDataReady(formData);\n            console.log(\"formData after submit: \", formData);\n        };\n    return (\n        <form>\n            <br/>\n                <label> Название (неформальное) : <br/>\n                    <Input\n                        id=\"NameInformal\"\n                        value= {NameInformal}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название (неформальное) \"\n                        type=\"text\"\n                        name=\"NameInformal\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фамилия : <br/>\n                    <Input\n                        id=\"lastName\"\n                        value= {lastName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фамилия \"\n                        type=\"text\"\n                        name=\"lastName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Имя : <br/>\n                    <Input\n                        id=\"firstName\"\n                        value= {firstName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Имя \"\n                        type=\"text\"\n                        name=\"firstName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Отчество : <br/>\n                    <Input\n                        id=\"midName\"\n                        value= {midName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Отчество \"\n                        type=\"text\"\n                        name=\"midName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Вид документа : <br/>\n                    <Input\n                        id=\"docType\"\n                        value= {docType}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Вид документа \"\n                        type=\"text\"\n                        name=\"docType\"\n                        required\n                    /><br/>\n               </label>\n               <label> Серия : <br/>\n                    <Input\n                        id=\"Serial\"\n                        value= {Serial}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Серия \"\n                        type=\"text\"\n                        name=\"Serial\"\n                        required\n                    /><br/>\n               </label>\n               <label> Номер : <br/>\n                   <Input\n                       id=\"number\"\n                       value= {number}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Номер \"\n                       type=\"text\"\n                       name=\"number\"\n                       required\n                   /><br/>\n               </label>\n               <label> Кем выдан : <br/>\n                   <Input\n                       id=\"whoGave\"\n                       value= {whoGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Кем выдан \"\n                       type=\"text\"\n                       name=\"whoGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Дата выдачи : <br/>\n                   <Input\n                       id=\"whenGave\"\n                       value= {whenGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Дата выдачи \"\n                       type=\"text\"\n                       name=\"whenGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Код подразделения : <br/>\n                   <Input\n                       id=\"codeGave\"\n                       value= {codeGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Код подразделени \"\n                       type=\"text\"\n                       name=\"codeGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Адрес прописки : <br/>\n                   <Input\n                       id=\"addressGave\"\n                       value= {addressGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Адрес прописки \"\n                       type=\"text\"\n                       name=\"addressGave\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n          <div>\n            <div>\n                <BeautyText text={JSON.stringify(store)}/>\n            </div>\n          </div>\n        \n        </form>\n    );\n    };\n\n        const mapStateToProps = _state => ({\n        store: _state.formThree,\n        //home: _state.home,\n        //yurlitzas: _state.home.yurlitzas,\n        //dogovorTypes: _state.home.dogovorTypes,\n        //dialects: _state.home.varDialects,\n        //formData: _state.home.formData\n    });\n    const mapDispatchToProps = _dispatch => ({\n        //onYur: data => _dispatch(actions.yurlitso(data))\n        onDataReady: data =>\n            _dispatch(actions.zakazchikTypeThreeData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(FormThree); \n\n        \n    //export default FormThree;\n","import React, {useState} from 'react';\nimport {\n    GlobalStyle,Container,Grid,AreaBox,Text,\n    TextBox\n} from '../css/style.js';\nimport * as actions from '../actions';\nimport {connect} from 'react-redux';\nimport FormOne from \"./FormOne\";\nimport FormTwo from \"./FormTwo\";\nimport FormThree from \"./FormThree\";\n\nconst Home = (\n    {\n        store,\n        home,\n        yurlitzas,\n        dogovorTypes,\n        dialects,\n        onYur,\n        formData\n    }) => { \n\n    const [yurlitso,setYurlitso] = useState(\"unknown\");\n    const [dogType,setDogType] = useState(\"unknown\");\n    const [zakazchik,setZakazchik] = useState(\"unknown\");\n    console.log(\"store : \", store);\n    console.log(\"home :\" , home);\n    console.log(\"formData : \", formData);\n    \n    \n    const Elem = _props => {\n        const handleClick = () => {\n            console.log(\"data : \", _props.data);\n            _props.set(_props.data);\n        };\n        return (<b onClick={handleClick}>{_props.data}{\" | \"}</b>\n    )};\n    const YurTab = () => (\n        <Text m={\"2vmin\"}>\n            <div id=\"yurfacesPanel\">\n                ЮРЛИЦО: <b>{yurlitso}</b> <br/>\n                {yurlitzas.map((e,i) => <Elem key={i} data={e} set={setYurlitso}/>)}<br/>  \n            </div>\n        </Text>\n    ); \n    const DogTab = () => (\n        <Text m={\"2vmin\"}>\n            <div id=\"contractTypesPanel\">\n                ТИП ДОГОВОРА: <b>{dogType}</b> <br/>\n                {dogovorTypes.map((e,i) => <Elem key={i} data={e} set={setDogType}/>)}<br/>  \n            </div>\n        </Text>\n    );\n    const DialTab = () => {\n        //console.log(\"dialects : \", dialects);\n        let current = () => {\n            return ((dogType === \"проектирование\") ? [...dialects.make] :\n                (dogType === \"поставка\") ? [...dialects.sell] :\n                dialects.basic\n            );\n        };\n        //console.log(\"current : \", current());\n        return (\n            <Text m={\"2vmin\"}>\n                <div id=\"varsPanel\">\n                    НАБОР ПЕРЕМЕННЫХ: <b>{dogType}</b> <br/>\n                    {current().map((e,i) => <b key={i} >{e}{\" | \"}</b>)}\n                </div>\n            </Text>\n    )};\n\n    const zakTypes = [\"организация\",\"ИП\",\"физическое лицо\"];\n    const Zakazchik = () => (\n        <Text m={\"2vmin\"}>\n            <div id=\"zakazchik\">\n                ТИП ЗАКАЗЧИКА: <b>{zakazchik}</b> <br/>\n                {zakTypes.map((e,i) => <Elem key={i} data={e} set={setZakazchik}/>)}<br/>  \n            </div>\n        </Text>        \n    );\n  const Basic = () => (\n    <div>\n    <GlobalStyle/>\n        <Container>\n            <Grid>\n                <AreaBox g={[2,2,5,5]} fd=\"row\">\n                    <TextBox h={\"100%\"}>\n                        <Text m={\"2vmin\"}>\n                            <YurTab/>\n                            <DogTab/>\n                            <DialTab/>\n                            <Zakazchik/>\n                        </Text>\n                    </TextBox>\n                </AreaBox>\n                <AreaBox g={[5,2,10,5]} fd=\"row\">\n                    \n                    <TextBox h={\"100%\"}>\n                        {zakazchik===\"организация\"\n                                ? <FormOne/> \n                                : zakazchik===\"ИП\"\n                                    ? <FormTwo/>\n                                    : zakazchik===\"физическое лицо\"\n                                        ? <FormThree/> \n                                        : \"who knows\"\n                        }<br/>\n                    </TextBox>\n                </AreaBox>\n                \n            </Grid>\n        </Container>\n    </div>\n  );\n  return (\n    <div>\n        <Basic/>   \n    </div>\n  );\n}\n\n//const mapStateToProps = state => ({\n//    store: state.home\n//},console.log(\"mapState state : \", state));\nconst mapStateToProps = _state => ({\n    store: _state,\n    home: _state.home,\n    yurlitzas: _state.home.yurlitzas,\n    dogovorTypes: _state.home.dogovorTypes,\n    dialects: _state.home.varDialects,\n});\nconst mapDispatchToProps = _dispatch => ({\n    onYur: data => _dispatch(actions.yurlitso(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(Home);\n\n//export default Home;\n\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <main className=\"container\" >\n        <Switch id=\"main\">\n            <Route exact path=\"/dodoc/\" \n                component={Home} />          \n        </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport reducer from './reducers'; \nimport App from './App';\n\nconst store = createStore(reducer);\nconsole.log(\"store while initialise in index.js : \", store.getState());\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nif (window.Cypress) {\n    window.store = store;\n}\n"],"sourceRoot":""}