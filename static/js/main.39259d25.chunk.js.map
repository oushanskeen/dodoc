{"version":3,"sources":["NOTEBOOK/Dogfoot/foot.js","NOTEBOOK/Doghead/OWNERHEAD/ownerHeads.js","NOTEBOOK/SampleData/sampleData.js","NOTEBOOK/Doghead/AGENTHEAD/agentHeads.js","NOTEBOOK/Doghead/dogOut.js","css/Roboto_Mono/RobotoMono-Medium.ttf","NOTEBOOK/Doghead/makeDogovorHeadIO.js","NOTEBOOK/Doghead/OWNERHEAD/makeOwnerHeadIO.js","NOTEBOOK/Doghead/AGENTHEAD/makeAgentHeadIO.js","NOTEBOOK/Dogfoot/makeDogovorFootIO.js","utils/dognums.js","state.js","reducers/home.js","reducers/dogovorData.js","reducers/formOne.js","reducers/formTwo.js","reducers/formThree.js","reducers/ownerDic.js","reducers/agentDic.js","reducers/objDic.js","reducers/dogDic.js","reducers/index.js","constants/actionTypes.js","components/Beautiful.js","css/style.js","actions/index.js","components/PRINT/BeautyText.js","components/FORMS/FormOneSimp.js","components/FORMS/FormTwoSimp.js","components/FORMS/FormThreeSimp.js","components/FORMS/FormObj.js","components/FORMS/DogovorFormElements.js","components/FORMS/FormDog.js","components/FORMS/selectForm.js","components/ELEMENTS/DeleteButton.js","components/DogovorFoot.js","components/Dogovor.js","components/ELEMENTS/Elements.js","components/DICTIONARIES/Ownerdic.js","components/Home.js","components/MONTAJ/MontajSampleData.js","components/FORMS/FormMap.js","components/WIP/HsFs.js","components/MONTAJ/HeadFoot.js","components/MONTAJ/Montaj.js","components/MONTAJ/MontajDefault.js","components/DICTIONARIES/Agentdic.js","components/DICTIONARIES/Dogovordic.js","components/DICTIONARIES/Objectdic.js","theme.js","App.js","store.js","index.js","utils/assert.js"],"names":["YL","require","data","console","log","input","name","compShortName","fio","FIO","INN","KPP","OGRN","yurAdress","YurAdress","bank","bankName","bik","BIK","rs","RS","ks","KS","sign","signature","IP","ShortName","OGRNIP","FL","f","lastName","i","firstName","o","midName","doc","docType","docSer","Serial","docNum","number","docWhere","whoGave","docWhen","whenGave","docWhCode","codeGave","dogTout","module","exports","ownerYurlitsoHeadIO","ownerData","dogovorType","compFullName","ownerIPHeadIO","FullName","ogrnip","ogrnipDate","OGRNIPDate","dog","ownerFizlitsoHeadIO","agentDic","dics","id","type","OKPO","GosRegDate","FactAdress","GenDirector","Buhgalter","tel","BillOne","BillTwo","NameInformal","addressGave","ownerDic","Name","agentYurlitsoHeadIO","agentData","agentIPHeadIO","agentFizlitsoHeadIO","assert","dogT","makeOwnerHeadIO","makeAgentHeadIO","_store","_dogovorId","dicData","store","dic","ID","filter","e","dogovorData","ownerId","agentId","_ownerData","yl","state","dogDic","actorData","extractData","dogs","date","link","nameExtractor","out","Object","keys","map","key","push","latestExtractor","_dogName","length","match","sampleNy","year","month","day","newDogGen","_date","sampleDate","_letter","initStateForNewObject","adress","contactsFIO","workRegime","hello","initStateForNewDogovor","objName","objId","agentName","ownerName","systems","price","systemsDataVector","dogovorTypes","dogTypes","initStateForNewActor","actorType","initialState","window","Cypress","selectors","objNameSel","dogTypeSel","sysTypeSel","servTypeSel","clientTypeSel","hub","formData","contactsRole","contactsContacts","rootReducer","combineReducers","home","action","yurlitso","payload","objDic","Box","styled","div","color","space","layout","Beautiful","bg","width","_","sm","md","lg","m","p","fontSize","GlobalStyle","createGlobalStyle","Container","Grid","AreaBox","fd","g","b","ParamBox","w","h","Text","TextBox","img","Input","naked","NavbarDropdownContent","ownerDicCreate","_data","ownerDicUpdate","agentDicCreate","agentDicUpdate","dogDicDelete","formDataNew","Font","register","family","src","font","StyleSheet","create","page","margin","fontFamily","display","wordBreak","border","hyphens","section","padding","content","connect","_state","_dispatch","onOwnerDicCreate","actions","onOwnerDicUpdate","onAgentDicCreate","onAgentDicUpdate","formName","actorId","currentImportData","actorName","actor","importData","useState","undefined","setFormData","updateFormData","event","target","value","handleSaveCountedData","SaveButton","onClick","onChange","placeholder","required","maxlength","minlength","preventDefault","onDataReady","onDogovorData","onObjDicCreate","onObjDicUpdate","objectId","objectData","objectName","object","ObjectSelect","objects","AgentSelect","agents","OwnerSelect","owners","DogovorTypeSelect","delDoub","string","val","stroke","split","includes","join","concat","SystemsSelect","checked","for","PriceInput","SubmitButton","handleSubmit","onDogovorDicCreate","onDogovorDicUpdate","dogovorId","dogovor","owner","agent","UpdateFormData","Today","today","Date","getFullYear","getMonth","getDate","selectForm","formType","formsLib","def","types","form","formDic","onDelete","onOwnerDelete","onAgentDelete","onObjDelete","onDogDelete","dictionaryName","confirm","dicName","dicDelete","DogovorFoot","makeDogovorHeadIO","useParams","onLoad","style","ShowHideButton","showHide","setShowHide","DetailsButton","entries","record","EditButton","DeleteButton","Selector","select","setSelect","CreateDictionaryArticle","ShowPrintReadyDogovor","ShowDictionaryArticleData","buttons","details","edit","delete","show","buttonSet","DictionaryIO","newDogData","selection","output","Basic","formOrgDataSample","formFLDataSample","serverData","varOne","CompName","firstBill","secondBill","varTwo","ClientDataFL","_d","FLHeader","_clientData","_serverData","ClientOrgFooter","ClientIPFooter","ClientFLFooter","ServerFooter","DataMapper","Cmap","Smap","actualInput","ct","cd","st","defaultInput","ai","di","cmap","smap","a","c","HFROuter","ClientType","_clientType","ClientData","ORG","ServerData","_serverType","aa","bb","cc","HeadFoot","_a","_b","_c","divStyle","wordWrap","MontajHead","onAgentDicSelection","onAgentDicCreation","breakpoints","xl","colors","black","white","blue","navy","App","className","theme","to","exact","path","component","Home","Ownerdic","Agentdic","Dogovordic","Objectdic","Dogovor","Montaj","createStore","reducer","getState","ReactDOM","render","document","getElementById","_statement","_function","_positiveOutcome","JSON","stringify"],"mappings":"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","file":"static/js/main.39259d25.chunk.js","sourcesContent":["import React from 'react';\nconst assert = require(\"../../../src/utils/assert\");\n \n//const agentData = require(\"../SampleData/agentSampleData\").asd;\n//console.log(agentData);\n\nexport const YL = ({data}) => {\n    // given\n    console.log(\"data in yl\", data);\n    // when\n    const input = {\n        name: data.compShortName,\n        fio: data.FIO,\n        INN: data.INN,\n        KPP: data.KPP,\n        OGRN: data.OGRN,\n        yurAdress: data.YurAdress,\n        bank: data.bankName,\n        bik: data.BIK,\n        rs: data.RS,\n        ks: data.KS,\n        sign: data.signature \n    };\n    //sconst string = \"Заказчик: \"+input.name+\" ИНН: \"+input.INN+\" КПП: \"+input.KPP+\" ОГРН: \"+input.OGRN+\" Юр.адрес: \"+input.yurAdress+\" Банк: \"+input.bank+\" БИК: \"+input.bik+\" р/c: \"+input.rs+\" к/с: \"+input.ks+\" \"+input.name+\" \"+input.sign+\"\";\n    // then\n    return(\n        <div>\n            Заказчик: {input.name}<br/>\n            ИНН: {input.INN}<br/>\n            КПП: {input.KPP}<br/>\n            ОГРН: {input.OGRN}<br/>\n            Юр.адрес: {input.yurAdress}<br/>\n            Банк: {input.bank}<br/>\n            БИК: {input.bik}<br/>\n            р/c: {input.rs}<br/>\n            к/с: {input.ks}<br/>\n            name: {input.name}<br/>\n            подпись: {input.signature}<br/>\n        </div>\n    );\n};\n\n\nexport const IP = ({data}) => {\n    // given\n    console.log(\"data in ip\", data);\n\n    // when\n    const input = {\n        name: data.ShortName,\n        INN: data.INN,\n        OGRNIP: data.OGRNIP,\n        yurAdress: data.YurAdress,\n        bank: data.bankName,\n        bik: data.BIK,\n        rs: data.RS,\n        ks: data.KS,\n        sign: data.signature \n    };\n    // then\n    const string = \"Заказчик: \"+input.name+\" ИНН: \"+input.INN+\" ОГРНИП: \"+input.OGRNIP+\" Юр.адрес: \"+input.yurAdress+\" Банк: \"+input.bank+\" БИК: \"+input.bik+\" р/c: \"+input.rs+\" к/с: \"+input.ks+\" \"+input.name+\" \"+input.sign+\"\";\n    return(\n        <div>\n            Заказчик: {input.name}<br/>\n            ИНН: {input.INN}<br/>\n            ОГРНИП: {input.OGRNIP}<br/>\n            Юр.адрес: {input.yurAdress}<br/>\n            Банк: {input.bank}<br/>\n            БИК: {input.bik}<br/> \n            р/c: {input.rs}<br/> \n            к/с: {input.ks}<br/>\n            name: {input.name}<br/>\n            подпись: {input.sign}<br/>\n        </div>\n    );\n};\n\n\nexport const FL = ({data}) => {\n    // given\n    console.log(\"data in fl\", data);\n\n    // when\n    const input = {\n        f: data.lastName,\n        i: data.firstName,\n        o: data.midName,\n        doc: data.docType,\n        docSer: data.Serial,\n        docNum: data.number,\n        docWhere: data.whoGave,\n        docWhen: data.whenGave,\n        docWhCode: data.codeGave,\n        sign: data.signature \n    };\n    // then\n    const string =\n    \"Заказчик: \"+input.f+\" \"+input.i+\" \"+input.o+\" \"+input.doc+\" серия \"+input.docSer+\" номер \"+input.docNum+\" выдан: \"+input.docWhere+\" дата выдачи: \"+input.docWhen+\" код подразделения: \"+input.docWhCode+\" \"+input.sign+\"\"; \n    return (\n        <div>\n            Заказчик: {input.f } {input.i } {input.o}<br/>\n            серия: {input.docSer}<br/>\n            номер: {input.docNum}<br/>\n            выдан: {input.docWhere}<br/>\n            дата выдачи: {input.docWhen}<br/>\n            код подразделения: {input.docWhCode}<br/>\n            подпись: {input.sign}<br/>\n            </div>\n            );\n};\n\n   // module.exports.yl = yl;\n  //  module.exports.Ip = Ip;\n  //  module.exports.Fl = Fl;\n","const dogTout = require('../dogOut');\n\n  const ownerYurlitsoHeadIO = (ownerData,dogovorType) => {\n    let input = {\n      name:ownerData.compFullName,\n      fio:ownerData.FIO,\n      dog:dogTout(dogovorType)[0]\n    };\n    return (  \n      \"\"+input.name+\", в лице генерального директора \"+input.fio+\n          \", действующего на основании Устава, именуемое в дальнейшем \\'\"+input.dog+\"\\', с одной стороны, и \");\n      };\n\n//  1.2 ownerIP\n//    ownerIP :: ownerData -> dogovorType -> ownerHead\n      const ownerIPHeadIO = (ownerData,dogovorType) => {\n        // given\n        // when\n        let input = {\n          name:ownerData.FullName,\n          ogrnip:ownerData.OGRNIP,\n          ogrnipDate:ownerData.OGRNIPDate,\n          dog:dogTout(dogovorType)[0]\n        };\n        console.log(\"ownerIPHeadIO: \", input);\n        // then\n        return (  \n          \"\"+input.name+\", действующий на основании свидетельства ОГРНИП \"+input.ogrnip+\" от \"+input.ogrnipDate+\", именуемый в дальнейшем \\'\"+input.dog+\"\\', с одной стороны, и \"\n    );\n    };\n\n//  1.3 ownerFL\n//  ownerFL :: ownerData -> dogovorType -> ownerHead\n    const ownerFizlitsoHeadIO = (ownerData,dogovorType) => {\n      const input = {\n        f:ownerData.lastName,\n        i:ownerData.firstName,\n        o:ownerData.midName,\n        docType:ownerData.docType,\n        docSer:ownerData.Serial,\n        docNum:ownerData.number,\n        docDate:ownerData.whenGave,\n        docWhere:ownerData.whoGave,\n        docWhCode:ownerData.codeGave,\n        dog:dogTout(dogovorType)[0]\n      };\n      return (  \n        \"\"+input.f+\" \"+input.i+\" \"+input.o+\", \"+input.docType+\" \"+\n        input.docSer+\" \"+input.docNum+\", выдан \"\n        +input.docWhere+\" \"+input.docDate+\" код подразделения \"+\n        input.docWhCode+\", именуемый(ая) в дальнейшем \\'\"+\n        input.dog+\"\\', с одной стороны, и \");\n    };\n\n    module.exports.ownerYurlitsoHeadIO = ownerYurlitsoHeadIO;\n    module.exports.ownerIPHeadIO = ownerIPHeadIO;\n    module.exports.ownerFizlitsoHeadIO = ownerFizlitsoHeadIO;\n","const sampleData = \n{agentDic:\n    {dics:\n      [ \n        {\n          id:0,\n          type:\"YL\",\n          data:\n            {\n              compFullName:\"Общество с ограниченной ответственностью 'Аксинель'\",\n              compShortName: \"ОOO 'Аксинель'\",\n              FIO:\"Царевского Анатолия Михайловича\", \n              INN:\"7724912950\",\n              KPP:\"772401001\",\n              OGRN:\"1147746259430\",\n              OKPO:\"ORGОКРО\",\n              GosRegDate:\"ORGДАТА ГОС РЕГИСТРАЦИИ\",\n              YurAdress:\"115404, Россия, Москва, Радиальная 6-я улица, дом 7а строение 2, комната 1 эт 2\",\n              FactAdress:\"ORGФАКТИЧЕСКИЙ АДРЕСС\",\n              GenDirector:\"ORGГЕН ДИРЕКТОР\",\n              Buhgalter:\"ORGБУХГАЛТЕР\",\n              tel:\"ORGТЕЛЕФОН\",\n              bankName:\"МОСКОВСКИЙ ФИЛИАЛ АО КБ 'МОДУЛЬБАНК'\",\n              BIK:\"044525092\",\n              BillOne:\"40702810970010127006\",\n              BillTwo:\"80101810645250000092\",\n              signature: \"Царевский.А.М\"\n            }  \n        },\n        {\n          id:1,\n          type:\"IP\",\n          data:\n            {\n              FullName:\"Индивидуальный предприниматель Колыхан Карина Олеговна\",\n              ShortName: \"ИП Колыхан Карина Олеговна\",\n              FIO:\"Колыхан Карина Олеговна\",\n              INN:\"343902925395\",\n              OGRNIP:\"317344300061296\",\n              OGRNIPDate:\"2 мая 2017\",\n              OKPO:\"IPОКРО\",\n              YurAdress:\"Волгоградская область г.Фролово\",\n              FactAdress:\"IPФАКТИЧЕСКИЙ АДРЕСС\",\n              bankName:\"ПАО 'СБЕРБАНК РОССИИ' г.Москва\",\n              BIK:\"044525225\",\n              BillOne:\"40702810970010127006\",\n              BillTwo:\"80101810645250000092\",\n              signature: \"Колыхан.К.О\"\n            }\n        },\n        {\n          id:2,\n          type:\"FL\",\n          data:\n            {\n              NameInformal:\"FLНЕФОРМАЛЬНОЕ ИМЯ\",\n              lastName:\"Иночкин\",\n              firstName:\"Игорь\",\n              midName:\"Владимирович\",\n              docType:\"паспорт\",\n              Serial:\"4519\",\n              number:\"022226\",\n              whoGave:\"ГУ МВД РОССИИ ПО Г.МОСКВЕ\",\n              whenGave:\"25.01.2019\",\n              codeGave:\"770-045\",\n              addressGave:\"FLГДЕ ВЫДАН\",\n              signature: \"Иночкин И.В.\"\n            }\n        }\n      ]\n    },\n  \n  ownerDic:\n    {dics:\n      [\n        {\n          id:0,\n          type:\"YL\",\n          data:\n            {\n              compFullName:\"Общество с ограниченной ответственностью 'Умный Климат Инжениринг'\",\n              compShortName: \"ОOO 'Умный Климат Инжениринг'\",\n              FIO:\"Лылова Дмитрия Павловича\", \n              INN:\"ORGИНН\",\n              KPP:\"ORGКПП\",\n              OGRN:\"ORGОГРН\",\n              OKPO:\"ORGОКРО\",\n              GosRegDate:\"ORGДАТА ГОС РЕГИСТРАЦИИ\",\n              YurAdress:\"ORGЮРИДИЧЕСКИЙ АДРЕСС\",\n              FactAdress:\"ORGФАКТИЧЕСКИЙ АДРЕСС\",\n              GenDirector:\"ORGГЕН ДИРЕКТОР\",\n              Buhgalter:\"ORGБУХГАЛТЕР\",\n              tel:\"ORGТЕЛЕФОН\",\n              bankName:\"ORGИМЯ БАНКА\",\n              BIK:\"ORGБИК\",\n              BillOne:\"ORGРАСЧЁТНЫЙ СЧЁТ\",\n              BillTwo:\"ORGКОРРЕСПОНДЕНДТСКИЙ СЧЁТ\"\n            }\n        },\n        {\n          id:1,\n          type:\"IP\",\n          data:\n            {\n              Name:\"Индивидуальный предприниматель Попов Александр Петрович\",\n              FIO:\"Попов Александр Петрович\",\n              INN:\"IPИНН\",\n              OGRNIP:\"317502700029527\",\n              OGRNIPDate:\"2 мая 2017\",\n              OKPO:\"IPОКРО\",\n              FactAdress:\"IPФАКТИЧЕСКИЙ АДРЕСС\",\n              bankName:\"IPИМЯ БАНКА\",\n              BIK:\"IPБИК\",\n              BillOne:\"IPРАСЧЁТНЫЙ СЧЁТ\",\n              BillTwo:\"IPКОРЕСПОНДЕНТСКИЙ СЧЁТ\"\n           }\n        },\n        {\n          id:2,\n          type:\"FL\",\n          data:\n            {\n              NameInformal:\"FLНЕФОРМАЛЬНОЕ ИМЯ\",\n              lastName:\"Попов\",\n              firstName:\"Александр\",\n              midName:\"Петрович\",\n              docType:\"паспорт\",\n              Serial:\"4512\",\n              number:\"123421\",\n              whoGave:\"ГУ МВД РОССИИ ПО Г.МОСКВЕ\",\n              whenGave:\"25.01.2019\",\n              codeGave:\"770-007\",\n              addressGave:\"FLГДЕ ВЫДАН\"\n            }\n        }\n      ]\n    }\n};\n      //const osd = {yl:yl,ip:ip,fl:fl};\n\n      module.exports = sampleData;\n","const dogTout = require('../dogOut');\n\n const agentYurlitsoHeadIO = (agentData,dogovorType) => {\n      console.log(\"agentYurlitsoHeadIO:\", agentData,dogovorType);\n      let input = {\n          name:agentData.compFullName,\n          fio:agentData.FIO,\n          dog:dogTout(dogovorType)[1]\n      };\n      return (  \n        \"\"+input.name+\", в лице генерального директора \"+input.fio+\", действующего на основании Устава, именуемое в дальнейшем \\'\"+input.dog+\"\\', совместно именуемые в дальнейшем 'Стороны', или каждая в отдельности 'Сторона', заключили настоящий Договор, далее именуемый 'Договор', о нижеследующем: \");\n    };\n\n//  2.2 agentFL \n//  agentFL :: agentData -> dogovorType -> agentHeaf\n    const agentIPHeadIO = (agentData,dogovorType) => {\n    console.log(\"agentIPHeadIO:\", agentData,dogovorType);\n      let input = {\n          name:agentData.FullName,\n          ogrnip:agentData.OGRNIP,\n          ogrnipDate:agentData.OGRNIPDate,\n          dog:dogTout(dogovorType)[1]\n        };\n      return (\"\"+input.name+\", действующ(ая) на основании свидетельства ОГРНИП \"+input.ogrnip+\" от \"+input.ogrnipDate+\", именуемый(ая) в дальнейшем \\'\"+input.dog+\"\\', совместно именуемые в дальнейшем 'Стороны', или каждая в отдельности 'Сторона', заключили настоящий Договор, далее именуемый 'Договор', о нижеследующем: \");\n    };\n\n    const agentFizlitsoHeadIO = (agentData,dogovorType) => {\n      const input = {\n        f:agentData.lastName,\n        i:agentData.firstName,\n        o:agentData.midName,\n        docType:agentData.docType,\n        docSer:agentData.Serial,\n        docNum:agentData.number,\n        docDate:agentData.whenGave,\n        docWhere:agentData.whoGave,\n        docWhCode:agentData.codeGave,\n        dog:dogTout(dogovorType)[1]\n      };\n      return (  \n        \"\"+input.f+\" \"+input.i+\" \"+input.o+\" \"+input.docType+\" \"+input.docSer+\" \"+input.docNum+\" выдан \"+input.docWhere+\" \"+input.docDate+\", код подразделения \"+input.docWhCode+\", именуемый(ая) в дальнейшем \\'\"+input.dog+\"\\', совместно именуемые в дальнейшем 'Стороны', или каждая в отдельности 'Сторона', заключили настоящий Договор, далее именуемый 'Договор', о нижеследующем: \");\n    };\n\n\n    module.exports.agentYurlitsoHeadIO = agentYurlitsoHeadIO;\n    module.exports.agentIPHeadIO = agentIPHeadIO;\n    module.exports.agentFizlitsoHeadIO = agentFizlitsoHeadIO;\n","\n  const assert = require('../../../src/utils/assert');\n      const dogTout = dogT => {\n        switch(dogT){\n          // given\n          case \"Поставка\":\n          // then\n            return [\"Поставщик\",\"Покупатель\"];\n          // given\n          case \"Проектирование\":\n          // then\n            return [\"Исполнитель\",\"Заказчик\"];\n          // given\n          default:\n          // then\n            return \"who knows\";\n        };\n      };\n      assert(\n        \"dogTout('Поставка') =>['Поставщик','Покупатель']\",\n        dogTout(\"Поставка\"),\n        [\"Поставщик\",\"Покупатель\"]\n      );\n      assert(\n        'dogTout(\"Проектирование\") => [\"Исполнитель\",\"Заказчик\"]',\n        dogTout(\"Проектирование\"),\n        [\"Исполнитель\",\"Заказчик\"]\n      );\n\n        module.exports = dogTout;\n","module.exports = __webpack_public_path__ + \"static/media/RobotoMono-Medium.7cfbd428.ttf\";","\n    const assert = require('../../../src/utils/assert');\n    const makeOwnerHeadIO = require('./OWNERHEAD/makeOwnerHeadIO');\n    const makeAgentHeadIO = require('./AGENTHEAD/makeAgentHeadIO');\n    const sampleData = require('../SampleData/sampleData');\n\n//----------------------------------------------------------------------\n\n    const makeDogovorHeadIO = \n    ( _store, _dogovorId) => {\n        const dicData = \n        (store,dic,ID) =>\n            store[dic].filter(e => e.id==ID)[0];\n            const dogovorData = \n            \tdicData(_store,\"dogDic\",_dogovorId);\n            const ownerData = \n\t\tdicData(_store,\"ownerDic\",dogovorData.ownerId);\n            const agentData = \n\t\tdicData(_store,\"agentDic\",dogovorData.agentId);\nconsole.log(makeAgentHeadIO(agentData, dogovorData.dogovorType));\n        return (\n            makeOwnerHeadIO(ownerData, dogovorData.dogovorType)\n            +makeAgentHeadIO(agentData, dogovorData.dogovorType)\n            );\n            };\n\n    module.exports = makeDogovorHeadIO;\n\n\n","//sample data\n//const osd = require('./ownerSampleData').osd;\n//const sdata = require('../../SampleData/sampleData');\n// processors\nconst ownerYurlitsoHeadIO = require('./ownerHeads').ownerYurlitsoHeadIO;\nconst ownerIPHeadIO = require('./ownerHeads').ownerIPHeadIO;\nconst ownerFizlitsoHeadIO = require('./ownerHeads').ownerFizlitsoHeadIO;\nconst assert = require('../../../../src/utils/assert');\n\n\n     const makeOwnerHeadIO = (_ownerData,dogovorType) => {\n        console.log(\"_ownerData in makeOwnerHeadIO: \",_ownerData);\n        switch(_ownerData.type){\n          case \"YL\": \n            return ownerYurlitsoHeadIO(_ownerData,dogovorType);\n          case \"IP\": \n            return ownerIPHeadIO(_ownerData,dogovorType);\n          case \"FL\": \n            return ownerFizlitsoHeadIO(_ownerData,dogovorType);\n          default: return \"who cares\";\n        };\n    };\n    assert(\n        \"GIVEN ownerData, WHEN type is extracted THEN it returns relevant template filled with relevant data\",\n        makeOwnerHeadIO({type:\"IP\",Name:\"NAME\",\n             OGRNIP:\"NUM\",\n             OGRNIPDate:\"DATE\",\n             dog:\"KAKTO\"\n            },\"Проектирование\"),\n        \"Name, действующий на основании свидетельства ОГРНИП NUM от DATE, именуемый в дальнейшем KAKTO, с одной стороны, и \"\n    );\n/*\n assert(\n      \"ownerHeadOut processer for yurlitso works\",\n       oOut(sData.ownerDic.dics[0],\"Проектирование\"),\n      \"Общество с ограниченной ответственностью 'Умный Климат Инжениринг', в лице генерального директора Лылова Дмитрия Павловича, действующего на основании Устава, именуемое в дальнейшем 'Исполнитель', с одной стороны, и \"\n    );\n     assert(\n      \"owner head processer for ip works\",\n       oOut(sData.ownerDic.dics[1],\"Проектирование\"),\n      \"Индивидуальный предприниматель Попов Александр Петрович, действующий на основании свидетельства ОГРНИП 317502700029527 от 2 мая 2017, именуемый в дальнейшем 'Исполнитель', с одной стороны, и \"\n    );\n    assert(\n      \"owner head processer for fizlitso works\",\n       oOut(sData.ownerDic.dics[2],\"Проектирование\"),\n        \"Попов Александр Петрович, паспорт 4512 123421, выдан ГУ МВД РОССИИ ПО Г.МОСКВЕ 25.01.2019 код подразделения 770-007, именуемый(ая) в дальнейшем 'Исполнитель', с одной стороны, и \"\n    );\n*/\n    module.exports = makeOwnerHeadIO;\n","//sample data\n//const asd = require('./agentSampleData').asd;\nconst sampleData = require('../../SampleData/sampleData');\n// processors\nconst agentYurlitsoHeadIO = require\n  ('./agentHeads').agentYurlitsoHeadIO;\nconst agentIPHeadIO = require\n  ('./agentHeads').agentIPHeadIO;\nconst agentFizlitsoHeadIO = require\n  ('./agentHeads').agentFizlitsoHeadIO;\nconst assert = require('../../../../src/utils/assert');\n\n  const makeAgentHeadIO = (agentData,dogovorType) => {\n    console.log(\"makeAgentHeadIO: \", agentData, dogovorType);\n    switch(agentData.type){\n      case \"YL\": \n        return agentYurlitsoHeadIO(agentData,dogovorType);\n      case \"IP\": \n        return agentIPHeadIO(agentData,dogovorType);\n      case \"FL\": \n        return agentFizlitsoHeadIO(agentData,dogovorType);\n      default: return \"who cares\";      \n    };\n  };\n\n    module.exports = makeAgentHeadIO;\n","//import React from 'react';\n//import {Yl} from \"./foot\";\n////sample data\nconst sdata = require('../SampleData/sampleData');\n// processors\nconst yl = require('./foot').yl;\n\n//const ip = require('./foot').ip;\n//const fl = require('./foot').fl;\nconst assert = require('../../../src/utils/assert');\n\n    const footOut = (state,id) => {\n      console.log(\"state in footOut: \", state);\n      console.log(\"id in footOut: \", id);\n      const dogovorData = \n        state.dogDic.filter(e => e.id===id);\n      console.log(\"dogovorData in footOut: \", dogovorData);\n      const ownerId =  dogovorData[0].ownerId;\n      console.log(\"ownerId infootOut :\",ownerId);\n      const agentId = dogovorData[0].agentId;\n      const ownerData = \n        state.ownerDic.filter(e => e.id===ownerId)[0];\n      const agentData = \n        state.agentDic.filter(e => e.id===agentId)[0];\n      const extractData = \n      (actorData) => {\n            console.log(\"actorData: \", actorData);\n            switch(actorData.type){\n            case \"YL\": \n                return yl(actorData);\n            //case \"IP\": return Ip(actorData);\n            //case \"FL\": return Fl(actorData);\n            default: return \"who cares\";\n            }\n            }; \n      const out = extractData(ownerData)\n            //+ extractData(agentData)\n      //console.log(\"foouOut: \", out)     \n      return out; \n    };\n\n//console.log(\"footOut(asd.yl,0):\",footOut(asd.yl,0));\n/*\nassert(\n    \"agent foot for AXINEL\",\n    footOut( sdata , \"agentDic\" , 0 ),\n    \"Заказчик: ОOO 'Аксинель' ИНН: 7724912950 КПП: 772401001 ОГРН: 1147746259430 Юр.адрес: 115404, Россия, Москва, Радиальная 6-я улица, дом 7а строение 2, комната 1 эт 2 Банк: МОСКОВСКИЙ ФИЛИАЛ АО КБ 'МОДУЛЬБАНК' БИК: 044525092 р/c: 40702810970010127006 к/с: 80101810645250000092 ОOO 'Аксинель' Царевский.А.М\"\n);\n*/\n/*\nassert(\n    \"agent foot for Kolyhan\",\n    footOut(sdata,\"agentDic\",1),\n    \"Заказчик: ИП Колыхан Карина Олеговна ИНН: 343902925395 ОГРНИП: 317344300061296 Юр.адрес: Волгоградская область г.Фролово Банк: ПАО 'СБЕРБАНК РОССИИ' г.Москва БИК: 044525225 р/c: 40702810970010127006 к/с: 80101810645250000092 ИП Колыхан Карина Олеговна Колыхан.К.О\"\n);\nassert(\n    \"agent foot for ip\",\n    footOut(sdata,\"agentDic\",2),\n    \"Заказчик: Иночкин Игорь Владимирович паспорт серия 4519 номер 022226 выдан: ГУ МВД РОССИИ ПО Г.МОСКВЕ дата выдачи: 25.01.2019 код подразделения: 770-045 Иночкин И.В.\"\n);\n*/\n//const makeDogovorFootIO = () => {\n    //return \"cat in the jar\"\n    //};\n    //module.exports = makeDogovorFootIO;\n    module.exports = footOut\n\n","\n//  IMPORTS ---------------------------------------------------------------------------------------\n\n    const assert = require(\"./assert\");\n    \n//   TASK -----------------------------------------------------------------------------------------\n\n    /*\n    В процессе создания договоров им присваивается {название} по формуле:\n    + 1. Договор проектирования. {Договор проектирования №{текущийгод}А{порядковыйномер} от {дд-месяц-гггг}}\n    + 2. Договор поставки. {Договор поставки №{текущийгод}Б{порядковыйномер}. от {дд-месяц-гггг}}\n    + 3. Договор монтажа {Договор монтажа №{текущийгод}В{порядковыйномер}. от {дд-месяц-гггг}}\n    + 4. Договор сервисного обслуживания. {Договор сервисного обслуживания №{текущийгод}СО{порядковыйномер} от {дд-месяц-гггг}}\n    + 5. Договор субподряда {Договор монтажа №{текущийгод}ВСУБ{порядковыйномер}. от {дд-месяц-гггг}}\n\n    + С началом нового года {порядковый_номер} обнуляется и счет начинается заново с 1.\n    + {название} является названием файла при выгрузке в формате {название}.pdf или {название}.doc\n    */\n\n//  INPUT DATA: DOGS data (DOGOVORS) -------------------------------------------------------------------\n\n    const dogs = {\n        \"Договор проектирования\":\n            {\n                \"1999_1\": {date:\"1999/2/2\", link:\"link\", name: \"Договор проектирования №1999А1. от 1999/2/2\"},\n                \"1999_2\": {date:\"1999/12/5\", link:\"link\", name: \"Договор проектирования №1999A2. от 1999/12/5\"},\n                \"2000_1\": {date:\"2000/24/7\", link:\"link\", name: \"Договор проектирования №2000A1. от 2000/24/7\"}\n            },\n        \"Договор поставки\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор поставки №1999Б1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор поставки №1999Б2. oт 1999/12/5\"},\n                \"2019_2\": {date:\"24/7/2000\", link:\"link\", name: \"Договор поставки №2019Б2. от 2019/24/7\"}\n            },        \n        \"Договор монтажа\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор монтажа №1999В1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор монтажа №1999В2. от 1999/12/5\"},\n                \"2000_3\": {date:\"24/7/2000\", link:\"link\", name: \"Договор монтажа №1999В3. от 2000/24/7\"}\n            },\n        \"Договор сервисного обслуживания\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор сервисного обслуживания №1999СО1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор сервисного обслуживания №1999СО2. от 1999/12/5\"},\n                \"2000_4\": {date:\"24/7/2000\", link:\"link\", name: \"Договор сервисного обслуживания №2000СО4. от 2000/24/7\"}\n            },\n        \"Договор субподряда\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор субподряда №1999ВСУБ1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор субподряда №1999ВСУБ2. от 1999/12/5\"},\n                \"2000_5\": {date:\"24/7/2000\", link:\"link\", name: \"Договор субподряда №2000ВСУБ5. от 2000/24/7\"}        \n            }\n    };\n\n//  FUNCTIONS ----------------------------------------------------------------------------------------------------\n\n    //  1 NAME EXTRACTOR ---------------------------------------------------------------------------------------------\n\n    const nameExtractor = (_dogs=dogs) => {\n        let out = [];\n        Object.keys(dogs).map(dog => {for (let key in dogs[dog]) out.push(dogs[dog][key].name)});\n        return out;\n    };\n    assert(\n        \"Name extractor extracts names\",\n        nameExtractor(),\n        [\n            \"Договор проектирования №1999A1. от 1999/2/2\",\n            \"Договор проектирования 1999A2. от №1999/12/5\",\n            \"Договор проектирования №2000A1. от 2000/24/7\",\n            \"Договор поставки №1999Б1. от 1999/2/2\",\n            \"Договор поставки 1999Б2. от №1999/12/5\",\n            \"Договор поставки №2019Б2. от 2019/24/7\",\n            \"Договор монтажа №1999В1. от 1999/2/2\",\n            \"Договор монтажа 1999В2. от №1999/12/5\",\n            \"Договор монтажа №1999В3. от 2000/24/7\",\n            \"Договор сервисного обслуживания №1999СО1. от 1999/2/2\",\n            \"Договор сервисного обслуживания 1999СО2. от №1999/12/5\",\n            \"Договор сервисного обслуживания №2000СО4. от 2000/24/7\",\n            \"Договор субподряда №1999ВСУБ1. от 1999/2/2\",\n            \"Договор субподряда 1999ВСУБ2. от №1999/12/5\",\n            \"Договор субподряда №2000ВСУБ5. от 2000/24/7\"\n        ]\n    );\n\n    //  2 LATEST DOGOVORTYPE NUMBER EXTRACTOR ------------------------------------------------------------------------------\n\n    const latestExtractor = _dogName => {\n        let keys = Object.keys(dogs[_dogName]); \n        let out = keys[keys.length-1].match(/(?<=\\_)\\d+/g)[0];\n        return out;\n    };\n    assert(\n        \"IN: dogType & dogs pool, OUT: latest #num of required dogtype \",\n        latestExtractor(\"Договор проектирования\"),\n        \"1\"\n    );\n    \n    //  3 NEW DOGOVOR GENERATOR ---------------------------------------------------------------------------------------\n\n    const sampleNy = { year:2020, month:1, day:1};\n    \n    const newDogGen = (_dogName,_date=sampleNy) => {\n        const sampleDate = `${_date.year}/${_date.day}/${_date.month}`;   \n        const out = _letter => {\n            return ( (_date.month === 1 && _date.day === 1) && (latestExtractor(_dogName) === 1)\n                ? `${_dogName} №${_date.year}${_letter}${+latestExtractor(_dogName)+1}. ot ${sampleDate}`\n                : `${_dogName} №${_date.year}${_letter}1. ot ${sampleDate}` \n            );\n        };\n        switch(_dogName){\n            case \"Договор проектирования\": return out(\"A\");\n            case \"Договор поставки\": return out(\"Б\");\n            case \"Договор монтажа\": return out(\"В\");\n            case \"Договор сервисного обслуживания\": return out(\"СО\");\n            case \"Договор субподряда\": return out(\"ВСУБ\");\n            default : return \"who knows\";\n        };\n        \n    };\n    assert(\n            \"IN: dog name, OUT: new dog name\",\n            newDogGen(\"nameOne\",sampleNy),\n            \"nameOne №2020A2. ot 2020/1/1\" // prev = \"nameOne 2000 A1 2000/24/7\"\n        );\n    assert(\n        \"IN: dog name, OUT: new dog name\",\n        newDogGen(\"nameTwo\",sampleNy),\n        \"nameTwo №2020B1. ot 2020/1/1\" //prev === \"nameTwo 2019 B2 2019/24/7\"\n    );\n\n//  EXPORTS ---------------------------------------------------------------------------------------------------------\n\n    exports.newDogGen = newDogGen;\n    exports.nameExtractor = nameExtractor;\n\n","const YL =\n    {\n        id:\"\",\n        name:\"\",\n        type:\"YL\",\n        compFullName: \"-\",\n        compShortName: \"-\",\n        INN: \"-\",\n        KPP:\"-\",\n        OGRN:\"-\",\n        OKPO:\"-\",\n        GosRegDate:\"-\",\n        YurAdress:\"-\",\n        FactAdress:\"-\",\n        GenDirector:\"-\",\n        Buhgalter:\"-\",\n        tel:\"-\",\n        bankName:\"-\",\n        BIK:\"-\",\n        RS:\"-\",\n        KS:\"-\"\n    }\nconst IP= \n    {\n        id:\"\",\n        name:\"\",\n        type:\"IP\",\n        Name: \"-\",\n        FIO: \"-\",\n        INN: \"-\",\n        OGRNIP:\"-\",\n        OKPO:\"-\",\n        FactAdress:\"-\",\n        bankName:\"-\",\n        BIK:\"-\",\n        RS:\"-\",\n        KS:\"-\"\n    };\nconst FL = \n    {\n        id:\"\",\n        name:\"\",\n        type:\"FL\",\n        NameInformal: \"-\",\n        lastName: \"-\",\n        firstName: \"-\",\n        midName:\"-\",\n        docType:\"-\",\n        Serial:\"-\",\n        number:\"-\",\n        whoGave:\"-\",\n        whenGave:\"-\",\n        codeGave:\"-\",\n        addressGave:\"-\"\n    };\nconst formDefaultData = \"formDefaultData\";\nlet initStateForNewDogovor= {\n      id: \"\",\n      name: \"\",\n      date: \"\",\n      objName: \"\",\n      objId: \"\",\n      agentName: \"\",\n      agentId: \"\",\n      ownerName:\"\",\n      ownerId: \"\",\n      dogovorType: \"\",\n      systems:\"\",\n      price:\"\",\n}; \nlet initStateForNewActor = actorType => {\n    switch (actorType){\n        case \"YL\":\n            return YL;\n        case \"IP\":\n            return IP;\n        case \"FL\":\n            return FL;\n        default:\n            return \"pardon, have no idea about actor type\"    \n    };\n};\nlet initStateForNewObject= {\n      id:\"-\",\n      name: \"-\",\n      adress: \"-\",\n      contactsFIO: \"-\",\n      workRegime:\"-\"\n}; \nconst systemsDataVector = [\n  \"вентиляция и кондиционирование\",\"отопление\",\n  \"котельная\",\n  \"водоснабжение и канализация\",\n  \"ЭОМ\",\n  \"слаботочные сети\",\n  \"автоматизация\"\n];\nconst dogovorTypes = [\"Проектирование\",\"Поставка\"];\nconst companyTypes = [\"YL\",\"IP\",\"FL\"];\n\n\nconst state = \n{\n    hello:\"hello\",\n    initStateForNewDogovor:initStateForNewDogovor,\n    initStateForNewObject:initStateForNewObject,\n    systemsDataVector:systemsDataVector,\n    dogovorTypes:dogovorTypes,\n    dogTypes: {YL:YL,IP:IP,FL:FL},\n    initStateForNewActor:initStateForNewActor,\n    initStateForNewObject:initStateForNewObject,\n    companyTypes:companyTypes\n};\n\nexport {state};\n","import {state} from '../state.js';\nimport {\n    YURLITSO,\n    DOGOVOR_TYPE,\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case YURLITSO:\n            return { yurlitso: action.payload };\n        case DOGOVOR_TYPE:\n            return { dogovorType: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    DOGOVOR_DATA,\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\n{\n    selectors:{objNameSel:\"-\",dogTypeSel:\"-\",sysTypeSel: \"-\",servTypeSel: \"-\",clientTypeSel: \"-\",hub: {}},\n    formData:{\n        NameInformal:\"-\",\n        lastName:\"-\",\n        firstName:\"-\",\n        midName:\"-\",\n        docType:\"-\",\n        Serial:\"-\",\n        number:\"-\",\n        whoGave:\"-\",\n        whenGave:\"-\",\n        codeGave:\"-\",\n        addressGave:\"-\"\n    }\n};\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case DOGOVOR_DATA:\n            return action.payload;\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPEONE_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPEONE_DATA:\n            return { zakazchikTypeOneData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPETWO_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPETWO_DATA:\n            return { zakazchikTypeTwoData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPETHREE_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPETHREE_DATA:\n            return { zakazchikTypeThreeData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","//import {state} from '../state.js';\nimport {\n    OWNERDIC_SELECT,\n    OWNERDIC_CREATE,\n    OWNERDIC_UPDATE,\n    OWNERDIC_DELETE\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\n[ \n  {\n    id:0,\n    type:\"YL\",\n    name: \"OWNER ID:0 TYPE:YL COMP_FULL_NAME\",\n    compFullName:\"OWNER ID:0 TYPE:YL COMP_FULL_NAME\",\n    compShortName: \"OWNER ID:0 TYPE:YL COMP_SHORT_NAME\",\n    FIO:\"OWNER ID:0 TYPE:YL FIO\", \n    INN:\"OWNER ID:0 TYPE:YL INN\",\n    KPP:\"OWNER ID:0 TYPE:YL KPP\",\n    OGRN:\"OWNER ID:0 TYPE:YL OGRN\",\n    OKPO:\"OWNER ID:0 TYPE:YL OKPO\",\n    GosRegDate:\"OWNER ID:0 TYPE:YL GOS_REG_DATE\",\n    YurAdress:\"OWNER ID:0 TYPE:YL YUR_ADRESS\",\n    FactAdress:\"OWNER ID:0 TYPE:YL FACT_ADRESS\",\n    GenDirector:\"OWNER ID:0 TYPE:YL GEN_DIRECTOR\",\n    Buhgalter:\"OWNER ID:0 TYPE:YL BUHGALTER\",\n    tel:\"OWNER ID:0 TYPE:YL TEL\",\n    bankName:\"OWNER ID:0 TYPE:YL BANK_NAME\",\n    BIK:\"OWNER ID:0 TYPE:YL BIK\",\n    RS:\"OWNER ID:0 TYPE:YL RS\",\n    KS:\"OWNER ID:0 TYPE:YL KS\",\n    signature: \"OWNER ID:0 TYPE:YL SIGNATURE\"\n  },\n  {\n    id:1,\n    type:\"IP\",\n    name: \"OWNER ID:1 TYPE:IP FULL_NAME\",\n    FullName:\"OWNER ID:1 TYPE:IP FULL_NAME\",\n    ShortName: \"OWNER ID:1 TYPE:IP SHORT_NAME\",\n    FIO:\"OWNER ID:1 TYPE:IP FIO\",\n    INN:\"OWNER ID:1 TYPE:IP INN\",\n    OGRNIP:\"OWNER ID:1 TYPE:IP OGRNIP\",\n    OGRNIPDate:\"OWNER ID:1 TYPE:IP OGRNIP_DATE\",\n    OKPO:\"OWNER ID:1 TYPE:IP ОКРО\",\n    YurAdress:\"OWNER ID:1 TYPE:IP YUR_ADRESS\",\n    FactAdress:\"OWNER ID:1 TYPE:IP FACT_ADRESS\",\n    bankName:\"OWNER ID:1 TYPE:IP BANK_NAME\",\n    BIK:\"OWNER ID:1 TYPE:IP BIK\",\n    RS:\"OWNER ID:1 TYPE:IP RS\",\n    KS:\"OWNER ID:1 TYPE:IP KS\",\n    signature: \"OWNER ID:1 TYPE:IP SIGNATURE\"\n  },\n  {\n    id:2,\n    type:\"FL\",\n    name: \"OWNER ID:2 TYPE:FL NAME_INFORMAL\",\n    NameInformal:\"OWNER ID:2 TYPE:FL NAME_INFORMAL\",\n    lastName:\"OWNER ID:2 TYPE:FL LAST_NAME\",\n    firstName:\"OWNER ID:2 TYPE:FL FIRST_NAME\",\n    midName:\"OWNER ID:2 TYPE:FL MID_NAME\",\n    docType:\"OWNER ID:2 TYPE:FL DOC_TYPE\",\n    Serial:\"OWNER ID:2 TYPE:FL SERIAL\",\n    number:\"OWNER ID:2 TYPE:FL NUMBER\",\n    whoGave:\"OWNER ID:2 TYPE:FL WHO_GAVE\",\n    whenGave:\"OWNER ID:2 TYPE:FL WHEN_GAVE\",\n    codeGave:\"OWNER ID:2 TYPE:FL CODE_GAVE\",\n    addressGave:\"OWNER ID:2 TYPE:FL ADRESS_GAVE\",\n    signature: \"OWNER ID:2 TYPE:FL SIGNATURE\"\n  }\n];\n\n//---------------------------------------------------------------------\n\nexport default function(state = initialState,action){\n  switch (action.type){\n    case OWNERDIC_CREATE:\n      return [...state,{...action.payload}];\n    case OWNERDIC_UPDATE:\n      return state.map(e => \n        e.id===action.payload.id ? action.payload : e);\n    case OWNERDIC_DELETE:\n      return state.filter(e => e.id != action.payload);\n    default:        \n      return state;\n    };\n};\n\n","//import {state} from '../state.js';\nimport {\n    AGENTDIC_SELECT,\n    AGENTDIC_CREATE,\n    AGENTDIC_UPDATE,\n    AGENTDIC_DELETE\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\n[\n  {\n    id:0,\n    type:\"YL\",\n    name: \"AGENT ID:0 TYPE:YL COMP_FULL_NAME\",\n    compFullName:\"AGENT ID:0 TYPE:YL COMP_FULL_NAME\",\n    compShortName: \"AGENT ID:0 TYPE:YL COMP_SHORT_NAME\",\n    FIO:\"AGENT ID:0 TYPE:YL FIO\", \n    INN:\"AGENT ID:0 TYPE:YL INN\",\n    KPP:\"AGENT ID:0 TYPE:YL KPP\",\n    OGRN:\"AGENT ID:0 TYPE:YL OGRN\",\n    OKPO:\"AGENT ID:0 TYPE:YL OKPO\",\n    GosRegDate:\"AGENT ID:0 TYPE:YL GOS_REG_DATE\",\n    YurAdress:\"AGENT ID:0 TYPE:YL YUR_ADRESS\",\n    FactAdress:\"AGENT ID:0 TYPE:YL FACT_ADRESS\",\n    GenDirector:\"AGENT ID:0 TYPE:YL GEN_DIRECTOR\",\n    Buhgalter:\"AGENT ID:0 TYPE:YL BUHGALTER\",\n    tel:\"AGENT ID:0 TYPE:YL TEL\",\n    bankName:\"AGENT ID:0 TYPE:YL BANK_NAME\",\n    BIK:\"AGENT ID:0 TYPE:YL BIK\",\n    RS:\"AGENT ID:0 TYPE:YL RS\",\n    KS:\"AGENT ID:0 TYPE:YL KS\",\n    signature: \"AGENT ID:0 TYPE:YL SIGNATURE\"\n  },               \n  { \n    id:1,\n    type:\"IP\",\n    name: \"AGENT ID:1 TYPE:IP FULL_NAME\",\n    FullName:\"AGENT ID:1 TYPE:IP FULL_NAME\",\n    ShortName: \"AGENT ID:1 TYPE:IP SHORT_NAME\",\n    FIO:\"AGENT ID:1 TYPE:IP FIO\",\n    INN:\"AGENT ID:1 TYPE:IP INN\",\n    OGRNIP:\"AGENT ID:1 TYPE:IP OGRNIP\",\n    OGRNIPDate:\"AGENT ID:1 TYPE:IP OGRNIP_DATE\",\n    OKPO:\"AGENT ID:1 TYPE:IP ОКРО\",\n    YurAdress:\"AGENT ID:1 TYPE:IP YUR_ADRESS\",\n    FactAdress:\"AGENT ID:1 TYPE:IP FACT_ADRESS\",\n    bankName:\"AGENT ID:1 TYPE:IP BANK_NAME\",\n    BIK:\"AGENT ID:1 TYPE:IP BIK\",\n    RS:\"AGENT ID:1 TYPE:IP RS\",\n    KS:\"AGENT ID:1 TYPE:IP KS\",\n    signature: \"AGENT ID:1 TYPE:IP SIGNATURE\"\n  },\n  {\n    id:2,\n    type:\"FL\",\n    name: \"AGENT ID:2 TYPE:FL NAME_INFORMAL\",\n    NameInformal:\"AGENT ID:2 TYPE:FL NAME_INFORMAL\",\n    lastName:\"AGENT ID:2 TYPE:FL LAST_NAME\",\n    firstName:\"AGENT ID:2 TYPE:FL FIRST_NAME\",\n    midName:\"AGENT ID:2 TYPE:FL MID_NAME\",\n    docType:\"AGENT ID:2 TYPE:FL DOC_TYPE\",\n    Serial:\"AGENT ID:2 TYPE:FL SERIAL\",\n    number:\"AGENT ID:2 TYPE:FL NUMBER\",\n    whoGave:\"AGENT ID:2 TYPE:FL WHO_GAVE\",\n    whenGave:\"AGENT ID:2 TYPE:FL WHEN_GAVE\",\n    codeGave:\"AGENT ID:2 TYPE:FL CODE_GAVE\",\n    addressGave:\"AGENT ID:2 TYPE:FL ADRESS_GAVE\",\n    signature: \"AGENT ID:2 TYPE:FL SIGNATURE\"\n  }\n];\n\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case AGENTDIC_SELECT:\n            return {...state,\"currentDic\":action.payload};\n        case AGENTDIC_CREATE:\n            return [...state,{...action.payload}];\n        case AGENTDIC_UPDATE:\n            return state.map(e => \n                e.id===action.payload.id ? action.payload : e);\n        case AGENTDIC_DELETE:\n            return state.filter(e => e.id != action.payload);\n        default:        \n            return state;\n    };\n};\n\n","//import {state} from '../state.js';\nimport {\n    OBJDIC_SELECT,\n    OBJDIC_CREATE,\n    OBJDIC_UPDATE,\n    OBJDIC_DELETE\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\n[\n  {  \n    id:0,\n    name:\"OBJECT ID:0 OBJECT_NAME\",\n    adress:\"OBJECT ID:0 OBJECT_NAME ADRESS\",\n    contactsFIO:\"OBJECT ID:0 OBJECT_NAME CONTACTS_FIO\",\n    contactsRole:\"OBJECT ID:0 OBJECT_NAME CONTACTS_ROLE\",\n    contactsContacts:\"OBJECT ID:0 OBJECT_NAME CONTACTS_CONTACTS\",\n    workRegime: \"OBJECT ID:0 OBJECT_NAME SCHEDULE\"\n  },\n  {\n    id:1,\n    name:\"OBJECT ID:1 OBJECT_NAME\",\n    adress:\"OBJECT ID:1 OBJECT_NAME ADRESS\",\n    contactsFIO:\"OBJECT ID:1 OBJECT_NAME CONTACTS_FIO\",\n    contactsRole:\"OBJECT ID:1 OBJECT_NAME CONTACTS_ROLE\",\n    contactsContacts:\"OBJECT ID:1 OBJECT_NAME CONTACTS_CONTACTS\",\n    workRegime: \"OBJECT ID:1 OBJECT_NAME SCHEDULE\"               \n  },\n  {\n    id:2,\n    name:\"OBJECT ID:2 OBJECT_NAME\",\n    adress:\"OBJECT ID:2 OBJECT_NAME ADRESS\",\n    contactsFIO:\"OBJECT ID:2 OBJECT_NAME CONTACTS_FIO\",\n    contactsRole:\"OBJECT ID:2 OBJECT_NAME CONTACTS_ROLE\",\n    contactsContacts:\"OBJECT ID:2 OBJECT_NAME CONTACTS_CONTACTS\",\n    workRegime: \"OBJECT ID:2 OBJECT_NAME SCHEDULE\"\n  }     \n];\n\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case OBJDIC_SELECT:\n            return {...state,\"currentDic\":action.payload};\n        case OBJDIC_CREATE:\n           return [...state,{...action.payload}];\n        case OBJDIC_UPDATE:\n            return state.map(e => \n                e.id===action.payload.id ? action.payload : e);\n        case OBJDIC_DELETE:\n            return state.filter(e => e.id != action.payload);\n        default:        \n            return state;\n    };\n};\n\n","//import {state} from '../state.js';\nimport {\n    DOGDIC_SELECT,\n    DOGDIC_CREATE,\n    DOGDIC_UPDATE,\n    DOGDIC_DELETE\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\n[\n  {\n    id:0, \n    name:\"DOGOVOR ID:0 TYPE:PROJECT DATE\",\n    date: \"DOGOVOR ID:0 DATE\",\n    objName:\"OBJECT ID:0 OBJECT_NAME\",\n    objId: 0,\n    ownerName: \"OWNER ID:0 TYPE:YL COMP_FULL_NAME\",\n    ownerId: 0,\n    agentName: \"AGENT ID:0 TYPE:YL COMP_FULL_NAME\",\n    agentId: 0,\n    dogovorType:\"Проектирование\",\n    systems:\"вентиляция и кондиционирование\",\n    price: \"DOGOVOR ID:0 PRICE\"\n  },\n  { \n    id:1,           \n    name:\"DOGOVOR ID:1 TYPE:DELIVER DATE\",\n    date: \"DOGOVOR ID:1 DATE\",\n    objName:\"OBJECT ID:1 OBJECT_NAME\",\n    objId: 1,\n    ownerName: \"OWNER ID:1 TYPE:IP FULL_NAME\",\n    ownerId: 1,\n    agentName: \"AGENT ID:1 TYPE:IP FULL_NAME\",\n    agentId: 1,\n    dogovorType:\"Поставка\",\n    systems: \"вентиляция и кондиционирование,отопление\",\n    price: \"DOGOVOR ID:1 PRICE\"\n  },\n  { \n    id:2, \n    name:\"DOGOVOR ID:2 TYPE:DELIVER DATE\",\n    date: \"DOGOVOR ID:2 DATE\",\n    objName:\"OBJECT ID:2 OBJECT_NAME\",\n    objId: 2,\n    ownerName: \"OWNER ID:2 TYPE:FL NAME_INFORMAL\",\n    ownerId: 2,\n    agentName: \"AGENT ID:2 TYPE:FL NAME_INFORMAL\",\n    agentId: 2,\n    dogovorType:\"Поставка\",\n    systems:\"вентиляция и кондиционирование,отопление,котельная\",\n    price: \"DOGOVOR ID:2 PRICE\"\n  }\n];\n\n//---------------------------------------------------------------------\n\nexport default function(state = initialState,action){\n  switch (action.type){\n    case DOGDIC_CREATE:\n      return [...state,{...action.payload}];\n    case DOGDIC_UPDATE:\n      return state.map(e => \n        e.id===action.payload.id ? action.payload : e);\n    case DOGDIC_DELETE:\n      return state.filter(e => e.id != action.payload);\n    default:        \n      return state;\n    };\n};\n\n","import {combineReducers} from 'redux';\nimport home from './home';\nimport formOne from './formOne';\nimport formTwo from './formTwo';\nimport formThree from './formThree';\nimport dogovorData from './dogovorData';\nimport ownerDic from './ownerDic';\nimport agentDic from './agentDic';\nimport objDic from './objDic';\nimport dogDic from './dogDic';\n\nconst rootReducer = combineReducers({\n    home,\n    dogovorData,\n    ownerDic,\n    agentDic,\n    objDic,\n    dogDic\n});\n\nexport default rootReducer;\n","\nexport const OWNERDIC_SELECT = \"OWNERDIC_SELECT\";\nexport const OWNERDIC_CREATE = \"OWNERDIC_CREATE\";\nexport const OWNERDIC_UPDATE = \"OWNERDIC_UPDATE\";\nexport const OWNERDIC_DELETE = \"OWNERDIC_DELETE\";\n\nexport const AGENTDIC_SELECT = \"AGENTDIC_SELECT\";\nexport const AGENTDIC_CREATE = \"AGENTDIC_CREATE\";\nexport const AGENTDIC_UPDATE = \"AGENTDIC_UPDATE\";\nexport const AGENTDIC_DELETE = \"AGENTDIC_DELETE\";\n\nexport const OBJDIC_SELECT = \"OBJDIC_SELECT\";\nexport const OBJDIC_CREATE = \"OBJDIC_CREATE\";\nexport const OBJDIC_UPDATE = \"OBJDIC_UPDATE\";\nexport const OBJDIC_DELETE = \"OBJDIC_DELETE\";\n\nexport const DOGDIC_SELECT = \"DOGDIC_SELECT\";\nexport const DOGDIC_CREATE = \"DOGDIC_CREATE\";\nexport const DOGDIC_UPDATE = \"DOGDIC_UPDATE\";\nexport const DOGDIC_DELETE = \"DOGDIC_DELETE\";\n\nexport const YURLITSO = \"YURLITSO\";\nexport const DOGOVOR_TYPE = \"DOGOVOR_TYPE\";\nexport const VARIABLE = \"VARIABLE\";\nexport const FORM_DATA_NEW = \"FORM_DATA_NEW\";\nexport const DOGOVOR_DATA = \"DOGOVOR_DATA\";\nexport const ZAKAZCHIK_TYPEONE_DATA = \"ZAKAZCHIK_TYPEONE_DATA\";\nexport const ZAKAZCHIK_TYPETWO_DATA = \"ZAKAZCHIK_TYPETWO_DATA\";\nexport const ZAKAZCHIK_TYPETHREE_DATA = \"ZAKAZCHIK_TYPETHREE_DATA\";\n","   \n  import React from 'react';\n  import styled from 'styled-components';\n  import { color, space, layout } from 'styled-system';\n\n  const Box = styled.div`\n    ${color}\n    ${space}\n    ${layout}\n  `;\n\n  const Beautiful = () => (\n    <div>\n      <Box \n        color='#fff' \n        bg='blue'\n        width={{\n          _: 1,\n          sm: 1,\n          md: 1/2,\n          lg: 1/4\n        }}\n        m={[ 0, 1, 2 ]}\n        p={[ 2, 3, 4 ]}\n        fontSize={[ 3, 4, 5 ]}\n      >\n        Tomato\n        <div> me beautiful </div>\n      </Box>\n      \n    </div>\n  );\n\n  export default Beautiful;\n\n","import styled from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0px;\n    background:white;\n    font-family: 'Roboto Mono', monospace;\n  }\n`;\nconst Container = styled.div`\n    width:100vw;\n    height:100vh;\n`; \nconst Grid = styled.div`\n    display:grid;\n    grid-template-columns: 5% repeat(3,30%) 5%;\n    grid-template-rows: 2.5vh repeat(8,11.9%) 2.5vh;\n    width:100%;\n    height:100%;\n    background:white;\n`;\nconst AreaBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"column\"};\n    grid-area:${p=> p.g[0]+\"/\"+p.g[1]+\"/\"+p.g[2]+\"/\"+p.g[3]};\n    justify-content:center;\n    align-items:center;\n    border:${p=> p.b || \"0.5px solid black\"};\n    padding:0px;\n    overflow-wrap:normal;\n    background:White;\n`;\nconst ParamBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"row\"};\n    width:${p => p.w || '100%'};\n    height:${p => p.h || '100%'};\n    justify-content:center;\n    align-items:center;\n    overflow-wrap:normal;\n    //overflow:scroll;\n`;\nconst Text = styled.div`\n    margin:${p => p.m};\n`;\nconst Button = styled.div`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    margin:1vmin;\n    padding:5vmin;\n    width:30vw;\n    border:0.5vmin solid DarkSlateGrey;    \n`;\nconst Img = styled.img`\n    width:auto;\n    height:80%;\n`;\nconst TextBox = styled(ParamBox)`\n    display:flex;\n    flex-wrap:wrap;\n    width:100%;\n    height:${p => p.h || \"66%\"};\n    justify-content:flex-start;\n    align-items:flex-start;\n    font-size:1rem;\n    margin:1vmin;\n    //overflow:scroll;\n`;\nconst Input = styled.input`\n    color: black;\n    border: 1px solid darkGrey;\n    margin: 0 0 5px 0;\n    width: 300%;\n    background-color: lightGrey;\n        \n    &:hover & {\n        background-color: white;\n        box-shadow: 0px 4px 20px 0px rgba(0, 0, 0, 0.05);\n    }\n\n`\n\nconst Selectable = styled.b`\n    &:hover {\n        background-color: yellow;\n    }\n`\nconst link = {\n  'color': 'black',\n  'text-decoration': 'none'\n};\nconst ghost = {\n  'color': 'grey',\n  'opacity': '50%'\n};\nconst naked = {\n  'border': '0px',\n};\n\nconst NavbarDropdownContent = styled.div`\n    display: none;\n    position: absolute;\n    background-color: #f9f9f9;\n    opacity:90%;\n    min-width: 300px;\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0, 2);\n    padding: 12px 16px;\n    z-index: 1;\n`;\n\nconst NavbarDropdown = styled.div`\nposition: relative;\ndisplay: inline-block;\n&:hover ${NavbarDropdownContent} {\n  display: block;\n}\n`;\n\n\nexport {\n    GlobalStyle,NavbarDropdown,NavbarDropdownContent,Container,Grid,AreaBox,ParamBox,TextBox,Input,Text,Button,Img,link,naked,Selectable,ghost\n}\n","\n\n    import * as types from \"../constants/actionTypes\";\n\n\n//  CONTENT -----------------------------------------------------------\n\n//  OWNER DIC\n//      ownerDicSelect :: \"a\" -> {type:\"OWNERDIC_SELECT\", payload:\"a\"}\n//      ownerDicCreate :: \"a\" -> {type:\"OWNERDIC_CREATE\", payload:\"a\"}\n//  AGENT DIC\n//      agentDicSelect :: \"a\" -> {type:\"AGENTDIC_SELECT\", payload:\"a\"}\n//      agentDicCreate :: \"a\" -> {type:\"AGENTDIC_CREATE\", payload:\"a\"}\n//  OBJECT DIC \n//      objDicSelect :: \"a\" -> {type:\"OBJDIC_SELECT\", payload:\"a\"}\n//      objDicCreate :: \"a\" -> {type:\"OBJDIC_CREATE\", payload:\"a\"}\n//  DOGOVOR DIC\n//      dogDicSelect :: \"a\" -> {type:\"DOGDIC_SELECT\", payload:\"a\"};\n//      dogDicCreate :: \"a\" -> {type:\"DOGDIC_CREATE\", payload:\"a\"}\n//      dogDicUpdate :: \"a\" -> {type:\"DOGDIC_UPDATE\", payload:\"a\"}\n//      dogDicDelete :: \"a\" -> {type:\"DOGDIC_DELETE\", payload:\"a\"}\n\n\n//  OWNER DIC ---------------------------------------------------------\n\n    // \"a\" -> {type:\"OWNERDIC_SELECT\", payload:\"a\"};\n    export const ownerDicSelect = \n    _data => {\n        console.log({type:types.OWNERDIC_SELECT,payload:_data});\n        return {type:types.OWNERDIC_SELECT, payload: _data};\n        };\n    // \"a\" -> {type:\"OWNERDIC_CREATE\", payload:\"a\"};\n    export const ownerDicCreate = \n    _data => {\n        console.log({type:types.OWNERDIC_CREATE,payload:_data});\n        return {type:types.OWNERDIC_CREATE, payload: _data};\n        };\n    // \"a\" -> {type:\"OWNERDIC_UPDATE\", payload:\"a\"};\n    export const ownerDicUpdate = \n    _data => {\n        console.log({type:types.OWNERDIC_UPDATE,payload:_data});\n        return {type:types.OWNERDIC_UPDATE, payload: _data};\n        };\n    // \"a\" -> {type:\"OWNERDIC_DELETE\", payload:\"a\"};\n    export const ownerDicDelete = \n    _data => {\n        console.log({type:types.OWNERDIC_DELETE,payload:_data});\n        return {type:types.OWNERDIC_DELETE, payload: _data};\n        };\n\n\n//  AGENT DIC ---------------------------------------------------------\n\n    //  \"a\" -> {type:\"AGENTDIC_SELECT\", payload:\"a\"};\n    export const agentDicSelect = \n    _data => {\n        console.log({type:types.AGENTDIC_SELECT,payload:_data});\n        return {type:types.AGENTDIC_SELECT, payload: _data};\n        };\n    // \"a\" -> {type:\"AGENTDIC_CREATE\", payload:\"a\"};\n    export const agentDicCreate = \n    _data => {\n        console.log({type:types.AGENTDIC_CREATE,payload:_data});\n        return {type:types.AGENTDIC_CREATE, payload: _data};\n        };\n    //  \"a\" -> {type:\"AGENTDIC_UPDATE\", payload:\"a\"};\n    export const agentDicUpdate = \n    _data => {\n        console.log({type:types.AGENTDIC_UPDATE,payload:_data});\n        return {type:types.AGENTDIC_UPDATE, payload: _data};\n        };\n    // \"a\" -> {type:\"AGENTDIC_DELETE\", payload:\"a\"};\n    export const agentDicDelete = \n    _data => {\n        console.log({type:types.AGENTDIC_DELETE,payload:_data});\n        return {type:types.AGENTDIC_DELETE, payload: _data};\n        };\n\n//  OBJECT DIC --------------------------------------------------------\n\n    // \"a\" -> {type:\"OBJDIC_SELECT\", payload:\"a\"};\n    export const objDicSelect = \n    _data => {\n        console.log({type:types.OBJDIC_SELECT,payload:_data});\n        return {type:types.OBJDIC_SELECT, payload: _data};\n        };\n    // \"a\" -> {type:\"OBJDIC_CREATE\", payload:\"a\"};\n    export const objDicCreate = \n    _data => {\n        console.log({type:types.OBJDIC_CREATE,payload:_data});\n        return {type:types.OBJDIC_CREATE, payload: _data};\n        };\n    // \"a\" -> {type:\"OBJDIC_UPDATE\", payload:\"a\"};\n    export const objDicUpdate = \n    _data => {\n        console.log({type:types.OBJDIC_UPDATE,payload:_data});\n        return {type:types.OBJDIC_UPDATE, payload: _data};\n        };\n    // \"a\" -> {type:\"OBJDIC_DELETE\", payload:\"a\"};\n    export const objDicDelete = \n    _data => {\n        console.log({type:types.OBJDIC_DELETE,payload:_data});\n        return {type:types.OBJDIC_DELETE, payload: _data};\n        };\n\n//  DOGOVOR DIC -------------------------------------------------------\n\n    // \"a\" -> {type:\"DOGDIC_SELECT\", payload:\"a\"};\n    export const dogDicSelect = \n    _data => {\n        console.log({type:types.DOGDIC_SELECT,payload:_data});\n        return {type:types.DOGDIC_SELECT, payload: _data};\n        };\n    // \"a\" -> {type:\"DOGDIC_CREATE\", payload:\"a\"}\n    export const dogDicCreate = \n    _data => {\n        console.log({type:types.DOGDIC_CREATE,payload:_data});\n        return {type:types.DOGDIC_CREATE, payload: _data};\n        };\n    // \"a\" -> {type:\"DOGDIC_UPDATE\", payload:\"a\"}\n    export const dogDicUpdate = \n    _data => {\n        console.log({type:types.DOGDIC_UPDATE,payload:_data});\n        return {type:types.DOGDIC_UPDATE, payload: _data};\n        };\n    // \"a\" -> {type:\"DOGDIC_DELETE\", payload:\"a\"}\n    export const dogDicDelete = \n    _data => {\n        console.log({type:types.DOGDIC_DELETE,payload:_data});\n        return {type:types.DOGDIC_DELETE, payload: _data};\n        };\n\n// MISC- HAVE NO IDEA WHAT FOR ----------------------------------------\n\n    // \"a\" -> {type:\"DOGDIC_SELECT\", payload:\"a\"}\n    export const dogovorData = \n    _data => {\n        console.log({type:types.DOGOVOR_DATA, payload: _data});\n        return {type:types.DOGOVOR_DATA, payload: _data}\n    };\n    export const formDataNew = \n    _data => {\n        console.log({type:types.FORM_DATA_NEW, payload: _data});\n        return {type:types.FORM_DATA_NEW, payload: _data};\n        };\n    export const yurlitso = \n    _yurlitso => {\n        console.log({type:types.YURLITSO, payload: _yurlitso});\n        return {type:types.YURLITSO, payload: _yurlitso};\n        };\n    export const dogovorType = \n    _dogovor => {\n        console.log({type:types.DOGOVOR_TYPE, payload: _dogovor});\n        return {type:types.DOGOVOR_TYPE, payload: _dogovor};\n        };\n    export const zakazchikTypeOneData = \n    _data => {\n        console.log(\n            {type:types.ZAKAZCHIK_TYPEONE_DATA,payload:_data});\n        return ({type:types.ZAKAZCHIK_TYPEONE_DATA,payload:_data}\n        );\n        };\n    export const zakazchikTypeTwoData = \n    _data => {\n        console.log(\n            {type:types.ZAKAZCHIK_TYPETWO_DATA,payload:_data}\n            );\n        return ({type:types.ZAKAZCHIK_TYPETWO_DATA,payload:_data}\n        );\n        };\nexport const zakazchikTypeThreeData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPETHREE_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPETHREE_DATA,\n            payload:_data\n       }\n    );\n};\n","\n    import React from 'react';\n    import font from '../../css/Roboto_Mono/RobotoMono-Medium.ttf'\n    import {\n        Page,\n        Text,\n        View,\n        Document,\n        StyleSheet,\n        PDFDownloadLink,\n        Font,\n    } from \"@react-pdf/renderer\";\n\n    // Register font\n    Font.register({\n      family: 'Roboto Mono',\n      src: font\n    })\n\n    const styles = StyleSheet.create({\n        page: {\n\t        margin: \"2em auto\",\n            fontFamily: \"Roboto Mono\",\n            display: \"flex\",\n            wordBreak: \"break-word\",\n            border:\"1px solid black\",\n\t        hyphens: \"auto\"\n        },\n        section: {\n            margin: 10,\n            padding: 10,\n        },\n        content: {\n            display: \"block\"\n        }\n    });\n\n    let sampleDataOne = {type:\n        {\n            compFullName: \" - \",\n            compShortName: \" - \",\n            INN: \" - \",\n            KPP: \" - \",\n            OGRN: \" - \",\n            OKPO: \" - \",\n            GosRegDate: \" - \",\n            YurAdress: \" - \",\n            FactAdress: \" - \",\n            GenDirector: \" - \",\n            Buhgalter: \" - \",\n            tel: \" - \",\n            bankName: \" - \",\n            BIK: \" - \",\n            BillOne: \" - \",\n            BillTwo: \" - \",\n        }\n    };\n    let sampleDataTwo = {type:\n        {\n            Name: \"-\",\n            FIO: \"-\",\n            INN: \"-\",\n            OGRNIP:\"-\",\n            OKPO:\"-\",\n            FactAdress:\"-\",\n            bankName:\"-\",\n            BIK:\"-\",\n            BillOne:\"-\",\n            BillTwo:\"-\"\n        }\n    };\n    let sampleDataThree = {type:\n        {\n            NameInformal: \"-\",\n            lastName: \"-\",\n            firstName: \"-\",\n            midName:\"-\",\n            docType:\"-\",\n            Serial:\"-\",\n            number:\"-\",\n            whoGave:\"-\",\n            whenGave:\"-\",\n            codeGave:\"-\",\n            addressGave:\"-\"\n        }\n    };\n    \n    const templateOne = (_data = sampleDataOne.type) => {\n        return (\"Нашакомпания ,в лице директора ФИОдиректора Нашей Компании действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" +\n        _data.compFullName + \" , в лице генерального директора  ФИО второй стороны , действующего(ей) на основании Устава, именуемое в дальнейшем 'Покупатель',РЕКВИЗИТЫ СТОРОН: \" + \n        \" Покупатель: \" + _data.compShortName  +\n        \" ИНН: \" + _data.INN +\n        \" КПП: \" + _data.KPP +\n        \" ОГРН: \" + _data.OGRN + \n        \" Юр.адрес: \" + _data.YurAdress +\n        \" Факт.адрес: \" + _data.FactAdress +\n        \" Банк: \" +  _data.bankName +\n        \" БИК: \" +  _data.BIK +\n        \" р/с: \" +  _data.BillOne +\n        \" к/с: \" +  _data.BillTwo +\n        \" \")\n    };\n    const templateTwo = (_data = sampleDataTwo.type) => {\n        return(\"Наша компания, в лице директора ФИОдиректора нашей компании, действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" + _data.Name + \" , в лице генерального директора \" + _data.FIO + \", действующего(ей) на основании Устава, именуемое в дальнейшем 'Покупатель', РЕКВИЗИТЫ СТОРОН: Покупатель: \" + \n_data.Name + \" ИНН: \" + _data.INN + \" ОГРНИП: \" + _data.OGRNIP + \" Факт.адрес: \" +  _data.FactAdress + \" Банк: \" + _data.bankName +\n\" БИК: \" +  _data.BIK + \" р/с: \" + _data.BillOne + \" к/с: \" +  _data.BillTwo + \" подписи \" + _data.Name + \" _/инициалы(ФИО)/ \" + _data.FIO + \"\"\n        )\n    };\n    const templateThree = (_data = sampleDataTwo.type) => {\n        return(\"Нашакомпания, в лице директора ФИОдиректора нашей компании, действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" + _data.lastName + \" \" + _data.firstName + \" \" + _data.midName + \" , \" + _data.docType + \" серия \" + _data.Serial + \" номер \" +  _data.number + \" , выдан \" +  _data.whoGave + \" \" +  _data.whenGave + \" код подразделения \" +  _data.codeGave + \" , именуемый(ая) в дальнейшем 'Покупатель', РЕКВИЗИТЫ СТОРОН: Покупатель: \"  + _data.lastName + \" \" + _data.firstName + \" \" + _data.midName + \" , \" + _data.docType + \" серия \" + _data.Serial + \" номер \" +  _data.number + \" , выдан \" +  _data.whoGave + \" \" +  _data.whenGave + \" код подразделения \" +  _data.codeGave + \" подписи \" + \"_/инициалы(ФИО)/\"\n        );\n    };\n\n    const zakazchik = {\n        one:{ template: templateOne, data: sampleDataOne },\n        two:{ template: templateTwo, data: sampleDataTwo },\n        three:{ template: templateThree, data: sampleDataThree }\n    };\n\n    const data_to_text = (_data,_store) => {\n        console.log(\"data_to_text on load : \", _store);\n        const hold = Object.keys(JSON.parse(_data))[0];\n        switch (hold) {\n            case 'zakazchikTypeOneData':\n                return JSON.stringify(zakazchik.one.template(JSON.parse(_data)[hold]));\n            case 'zakazchikTypeTwoData':\n                return JSON.stringify(zakazchik.two.template(JSON.parse(_data)[hold]));\n            case 'zakazchikTypeThreeData':\n                return JSON.stringify(zakazchik.three.template(JSON.parse(_data)[hold]));\n            default:\n                return \"whatever\";\n        }\n    };\n\n    const PdfDocument = _props => (\n        <Document>\n            <Page style={styles.page}>\n                <View style={styles.section}>\n                    <Text style={styles.content}>\n                        {_props.text}\n                    </Text>\n                </View>\n            </Page>\n        </Document>\n    );\n\n    const BeautyText = (_props) => (\n      <div>\n        <PdfDocument text={data_to_text(_props.text,_props.store)}/>\n        <PDFDownloadLink \n            document={<PdfDocument \n                text={data_to_text(_props.text,_props.store)}/>\n            } \n            fileName=\"somename.pdf\"\n        >\n            {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Забери PDF если считаешь что он ок.')}\n        </PDFDownloadLink>\n      </div>\n    );\n\n    export default BeautyText;\n","   \n    import React, {useState} from 'react';\n    import {Input} from '../../css/style.js';\n    import * as actions from '../../actions';\n    import BeautyText from \"../PRINT/BeautyText\";\n    import {connect} from 'react-redux';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../../css/style.js'\n\n    const FormOneSimp =\n    ({formName,ownerId,agentId,state,\n      onOwnerDicCreate,onOwnerDicUpdate,\n      onAgentDicCreate,onAgentDicUpdate}) => {\n        console.log(\"formName in FormOneSimp :\", formName);\n\n    // state,formName,ownerId,agentId    \n    const actorId = \n    formName => {\n        switch(formName){\n            case \"ownerDic\": return ownerId;\n            case \"agentDic\": return agentId;\n            default: return \"no actor id\";\n            };\n            };\n    const importData = \n    (formName, actorId) => ({\n        actorData:\n            state[formName]\n            .filter(e => e.id===actorId)[0],\n        actorName: \n            state[formName]\n            .map(actor => actor.name),\n        initStateForNewActor:\n            state.home.initStateForNewActor(\"YL\")\n        });\n    const currentImportData = \n    () => (\n        importData(\n            formName,\n            actorId(formName))\n            );\n    const [formData, setFormData] = useState(\n        {...(actorId(formName) === undefined \n            ? {...currentImportData().initStateForNewActor} \n            : currentImportData().actorData)\n            }     \n            );\n    const updateFormData = \n    event => {\n        setFormData({\n            ...formData,\n            [event.target.name]: event.target.value\n            });\n            };\n    const handleSubmit = \n    e => {\n        e.preventDefault();\n        if(formName===\"ownerDic\"){\n            if(ownerId === undefined){ \n                onOwnerDicCreate(formData)\n                }else{\n                onOwnerDicUpdate(formData)\n                }\n                }\n        else{\n        if(formName===\"agentDic\"){\n             if(agentId === undefined){\n                onAgentDicCreate(formData)\n                }else{\n                onAgentDicUpdate(formData)\n                }\n                }\n                }              \n                };\n    const Id = \n    () => {\n        console.log(\"formData in formDog: \", formData.id);\n        return (typeof formData.id===\"number\" \n            ? formData.id \n            : state[formName][state[formName].length-1].id+1\n            );  \n            };\n    const Name = \n    () => {\n       // console.log(\"state[formName]:\", state[formName]);\n        console.log(\"fprmData: \", formData);\n        return (formData.name===\"\" \n            ? formData.compShortName\n            : state[formName]\n              .filter(e => e.name===formData.name)[0].name\n        ); \n    };\n      const handleSaveCountedData =\n      ()=> \n          setFormData({...formData,\n            id:Id(),\n            name:Name()\n        });\n    const SaveButton = () => {\n        return <button onClick={handleSaveCountedData}>Save</button>    \n    };\n\n    return (\n        <form>\n            <br/>\n                <label> Полное название организации : <br/>\n                    <Input\n                        id=\"compFullName\"\n                        value= {formData.compFullName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Полное название организации \"\n                        type=\"text\"\n                        name=\"compFullName\"\n                        required\n                        maxlength=\"120\"\n                        />\n                        <br/>\n                        </label>\n               <label> Краткое название организации : <br/>\n                    <Input\n                        id=\"compShortName\"\n                        value= {formData.compShortName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Краткое название организации \"\n                        type=\"text\"\n                        name=\"compShortName\"\n                        required\n                        maxlength=\"120\"\n                        />\n                        <br/>\n                        </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {formData.INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"text\"\n                        name=\"INN\"\n                        required\n                        minlength=\"10\"\n                        maxlength=\"10\"\n                    /><br/>\n               </label>\n               <label> КПП : <br/>\n                    <Input\n                        id=\"KPP\"\n                        value= {formData.KPP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" КПП \"\n                        type=\"text\"\n                        name=\"KPP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРН : <br/>\n                    <Input\n                        id=\"OGRN\"\n                        value= {formData.OGRN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРН \"\n                        type=\"text\"\n                        name=\"OGRN\"\n                        required\n                        minlength=\"13\"\n                        maxlength=\"13\"\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {formData.OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"text\"\n                        name=\"OKPO\"\n                        required\n                        minlength=\"8\"\n                        maxlength=\"8\"\n                    /><br/>\n               </label>\n               <label> Дата государственной регистрации : <br/>\n                    <Input\n                        id=\"GosRegDate\"\n                        value= {formData.GosRegDate}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Дата государственной регистрации \"\n                        type=\"text\"\n                        name=\"GosRegDate\"\n                        required\n                    /><br/>\n               </label>\n               <label> Юридический адрес : <br/>\n                    <Input\n                        id=\"YurAdress\"\n                        value= {formData.YurAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Юридический адрес \"\n                        type=\"text\"\n                        name=\"YurAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {formData.FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Ген. директор (ФИО) : <br/>\n                    <Input\n                        id=\"GenDirector\"\n                        value= {formData.GenDirector}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Ген. директор (ФИО) \"\n                        type=\"text\"\n                        name=\"GenDirector\"\n                        required\n                    /><br/>\n               </label>\n               <label> Бухгалтер (ФИО) : <br/>\n                    <Input\n                        id=\"Buhgalter\"\n                        value= {formData.Buhgalter}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Бухгалтер (ФИО) \"\n                        type=\"text\"\n                        name=\"Buhgalter\"\n                        required\n                    /><br/>\n               </label>\n               <label> телефон : <br/>\n                    <Input\n                        id=\"tel\"\n                        value= {formData.tel}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" телефон \"\n                        type=\"text\"\n                        name=\"tel\"\n                        required\n                    /><br/>\n               </label><br/>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {formData.bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {formData.BIK}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"RS\"\n                       value= {formData.RS}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"RS\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"KS\"\n                       value= {formData.KS}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"KS\"\n                       required\n                   /><br/>\n               </label><br/>\n\n             <button onClick={handleSubmit}>Submit</button>\n                <SaveButton/>\n             \n        </form>\n    );\n    };\n    \n    const mapStateToProps = _state => ({\n        state: _state    \n    });\n    const mapDispatchToProps = _dispatch => ({\n        onOwnerDicCreate: \n            data => _dispatch(actions.ownerDicCreate(data)),\n        onOwnerDicUpdate: \n            data => _dispatch(actions.ownerDicUpdate(data)),\n        onAgentDicCreate: \n            data => _dispatch(actions.agentDicCreate(data)),\n        onAgentDicUpdate: \n            data => _dispatch(actions.agentDicUpdate(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(FormOneSimp);  \n    \n    //export default FormOneSimp; \n\n    \n","   \n    import React, {useState} from 'react';\n    import {Input} from '../../css/style.js';\n    import * as actions from '../../actions';    \n    import BeautyText from \"../PRINT/BeautyText\";\n    import {connect} from 'react-redux';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../../css/style.js'\n\n    const FormTwoSimp =\n    ({formName,ownerId,agentId,state,\n      onOwnerDicCreate,onOwnerDicUpdate,\n      onAgentDicCreate,onAgentDicUpdate}) => {\n\n        const actorId = formName => {\n            switch(formName){\n                case \"ownerDic\":\n                    return ownerId;\n                case \"agentDic\":\n                    return agentId;\n                default:\n                    return \"no actor id\";\n                    };\n                    };\n\n        const importData = (formName, actorId) => ({\n          actorData:\n            state[formName]\n            .filter(e => e.id===actorId)[0],\n          actorName: \n             state[formName]\n             .map(actor => actor.name),\n          initStateForNewActor: \n              state.home.initStateForNewActor(\"IP\")\n            });\n        const currentImportData = \n        () => (\n            importData(\n                formName,\n                actorId(formName))\n                );\n        console.log(\"objDog importData: \", currentImportData());\n        const [formData, setFormData] = useState(\n           {...(actorId(formName) === undefined \n                ? {...currentImportData().initStateForNewActor} \n                : currentImportData().actorData)\n                }     \n                );\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n                });\n            //setDataSent(\"OK\");\n            //console.log(\"form data : \", formData);\n            };\n\n        const handleSubmit = e => {\n            e.preventDefault();\n            //ownerId===undefined || agentId===undefined \n            if(formName===\"ownerDic\"){\n                if(ownerId === undefined){ \n                    onOwnerDicCreate(formData)\n                    }else{\n                    onOwnerDicUpdate(formData)\n                    }\n                    }\n            else{\n            if(formName===\"agentDic\"){\n                 if(agentId === undefined){\n                    onAgentDicCreate(formData)\n                    }else{\n                    onAgentDicUpdate(formData)\n                    }\n                    }\n                    }\n                    };\n        const Id = \n    () => {\n        console.log(\"formData in formDog: \", formData.id);\n        return (typeof formData.id===\"number\" \n            ? formData.id \n            : state[formName][state[formName].length-1].id+1\n            );  \n            };\n    const Name = \n    () => {\n       // console.log(\"state[formName]:\", state[formName]);\n        console.log(\"fprmData: \", formData);\n        return (formData.name===\"\" \n            ? formData.Name\n            : state[formName]\n              .filter(e => e.name===formData.name)[0].name\n        ); \n    };\n      const handleSaveCountedData =\n      ()=> \n          setFormData({...formData,\n            id:Id(),\n            name:Name()\n        });\n    const SaveButton = () => {\n        return <button onClick={handleSaveCountedData}>Save</button>    \n    };\n    \n\n    //console.log(\"store in formTwo : \", store)\n    return (\n        <form>\n            <br/>\n                <label> Название : <br/>\n                    <Input\n                        id=\"ShortName\"\n                        value= {formData.ShortName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название \"\n                        type=\"text\"\n                        name=\"ShortName\"\n                        required\n                    /><br/>\n               </label>\n               <label> ФИО : <br/>\n                    <Input\n                        id=\"FIO\"\n                        value= {formData.FIO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ФИО \"\n                        type=\"text\"\n                        name=\"FIO\"\n                        required\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {formData.INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"text\"\n                        name=\"INN\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРНИП : <br/>\n                    <Input\n                        id=\"OGRNIP\"\n                        value= {formData.OGRNIP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРНИП \"\n                        type=\"text\"\n                        name=\"OGRNIP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {formData.OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"text\"\n                        name=\"OKPO\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {formData.FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {formData.bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {formData.BIK}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"RS\"\n                       value= {formData.RS}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"RS\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"KS\"\n                       value= {formData.KS}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"KS\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n          <SaveButton/>\n        \n        </form>\n    );\n    };\n\nconst mapStateToProps = _state => ({\n     store: _state,\n     state: _state,\n     dogovorData: _state.dogovorData\n});\nconst mapDispatchToProps = _dispatch => ({\n    onOwnerDicCreate: \n        data => _dispatch(actions.ownerDicCreate(data)),\n    onOwnerDicUpdate: \n        data => _dispatch(actions.ownerDicUpdate(data)),\n    onAgentDicCreate: \n        data => _dispatch(actions.agentDicCreate(data)),\n    onAgentDicUpdate: \n        data => _dispatch(actions.agentDicUpdate(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(FormTwoSimp); \n\n        \n//    export default FormTwoSimp;\n","   \n    import React, {useState} from 'react';\n    import {Input} from '../../css/style.js';\n    import * as actions from '../../actions';\n    import BeautyText from \"../PRINT/BeautyText\";\n    import {connect} from 'react-redux';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../../css/style.js'\n\n    const FormThreeSimp =     \n    ({formName,ownerId,agentId,state,\n      onOwnerDicCreate,onOwnerDicUpdate,\n      onAgentDicCreate,onAgentDicUpdate}) => {\n const actorId = formName => {\n            switch(formName){\n                case \"ownerDic\":\n                    return ownerId;\n                case \"agentDic\":\n                    return agentId;\n                default:\n                    return \"no actor id\";\n                };\n        };\n        const importData = (formName, actorId) => ({\n          actorData:\n            state[formName]\n            .filter(e => e.id===actorId)[0],\n          actorName: \n             state[formName]\n             .map(actor => actor.name),\n          initStateForNewActor: \n              state.home.initStateForNewActor(\"FL\")\n            });\n        const currentImportData = () => (\n            importData(\n                formName,\n                actorId(formName))\n                );\n        console.log(\"objDog importData: \", currentImportData);\n        const [formData, setFormData] = useState(\n           {...(actorId(formName) === undefined \n                ? {...currentImportData().initStateForNewActor} \n                : currentImportData().actorData)\n                }     \n                );\n        const updateFormData = event => {\n            setFormData({\n                ...formData,\n                [event.target.name]: event.target.value\n                });\n                };\n\n        const handleSubmit = e => {\n            e.preventDefault();\n            //ownerId===undefined || agentId===undefined \n            if(formName===\"ownerDic\"){\n                if(ownerId === undefined){ \n                    onOwnerDicCreate(formData)\n                    }else{\n                    onOwnerDicUpdate(formData)\n                    }\n                    }\n            else{\n            if(formName===\"agentDic\"){\n                 if(agentId === undefined){\n                    onAgentDicCreate(formData)\n                    }else{\n                    onAgentDicUpdate(formData)\n                    }\n                    }\n                    }\n               \n        };\n\n            const Id = \n    () => {\n        console.log(\"formData in formDog: \", formData.id);\n        return (typeof formData.id===\"number\" \n            ? formData.id \n            : state[formName][state[formName].length-1].id+1\n            );  \n            };\n    const Name = \n    () => {\n       // console.log(\"state[formName]:\", state[formName]);\n        console.log(\"fprmData: \", formData);\n        return (formData.name===\"\" \n            ? formData.NameInformal\n            : state[formName]\n              .filter(e => e.name===formData.name)[0].name\n        ); \n    };\n      const handleSaveCountedData =\n      ()=> \n          setFormData({...formData,\n            id:Id(),\n            name:Name()\n        });\n    const SaveButton = () => {\n        return <button onClick={handleSaveCountedData}>Save</button>    \n    };\n           \n    return (\n        <form>\n            <br/>\n                <label> Название (неформальное) : <br/>\n                    <Input\n                        id=\"NameInformal\"\n                        value= {formData.NameInformal}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название (неформальное) \"\n                        type=\"text\"\n                        name=\"NameInformal\"\n                        required\n                        />\n                        <br/>\n                        </label>\n               <label> Фамилия : <br/>\n                    <Input\n                        id=\"lastName\"\n                        value= {formData.lastName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фамилия \"\n                        type=\"text\"\n                        name=\"lastName\"\n                        required\n                        />\n                        <br/>\n                        </label>\n               <label> Имя : <br/>\n                    <Input\n                        id=\"firstName\"\n                        value= {formData.firstName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Имя \"\n                        type=\"text\"\n                        name=\"firstName\"\n                        required\n                        />\n                        <br/>\n                        </label>\n               <label> Отчество : <br/>\n                    <Input\n                        id=\"midName\"\n                        value= {formData.midName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Отчество \"\n                        type=\"text\"\n                        name=\"midName\"\n                        required\n                    /><br/>\n                    </label>\n               <label> Вид документа : <br/>\n                    <Input\n                        id=\"docType\"\n                        value= {formData.docType}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Вид документа \"\n                        type=\"text\"\n                        name=\"docType\"\n                        required\n                    /><br/>\n                    </label>\n               <label> Серия : <br/>\n                    <Input\n                        id=\"Serial\"\n                        value= {formData.Serial}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Серия \"\n                        type=\"text\"\n                        name=\"Serial\"\n                        required\n                        /><br/>\n                        </label>\n               <label> Номер : <br/>\n                   <Input\n                       id=\"number\"\n                       value= {formData.number}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Номер \"\n                       type=\"text\"\n                       name=\"number\"\n                       required\n                       />\n                       <br/>\n               </label>\n               <label> Кем выдан : <br/>\n                   <Input\n                       id=\"whoGave\"\n                       value= {formData.whoGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Кем выдан \"\n                       type=\"text\"\n                       name=\"whoGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Дата выдачи : <br/>\n                   <Input\n                       id=\"whenGave\"\n                       value= {formData.whenGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Дата выдачи \"\n                       type=\"text\"\n                       name=\"whenGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Код подразделения : <br/>\n                   <Input\n                       id=\"codeGave\"\n                       value= {formData.codeGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Код подразделени \"\n                       type=\"text\"\n                       name=\"codeGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Адрес прописки : <br/>\n                   <Input\n                       id=\"addressGave\"\n                       value= {formData.addressGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Адрес прописки \"\n                       type=\"text\"\n                       name=\"addressGave\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n        <SaveButton/>\n           \n        </form>\n    );\n    };\n\n    const mapStateToProps = _state => ({\n     store: _state,\n     state: _state,\n     dogovorData: _state.dogovorData\n    });\n    const mapDispatchToProps = _dispatch => ({\n        onOwnerDicCreate: \n            data => _dispatch(actions.ownerDicCreate(data)),\n        onOwnerDicUpdate: \n            data => _dispatch(actions.ownerDicUpdate(data)),\n        onAgentDicCreate: \n            data => _dispatch(actions.agentDicCreate(data)),\n        onAgentDicUpdate: \n            data => _dispatch(actions.agentDicUpdate(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(FormThreeSimp); \n\n        \n","   \n  // FormObj.js\n  import React, {useState} from 'react';\n  import {Input} from '../../css/style.js';\n  import * as actions from '../../actions';\n  import BeautyText from \"../PRINT/BeautyText\";\n  import {connect} from 'react-redux';\n  import { Link } from 'react-router-dom';\n  import {\n    GlobalStyle,Container,Grid,AreaBox,Text,\n    TextBox,Button,ParamBox,naked,link\n  } from '../../css/style.js'\n\n  const FormObj =\n  ({onObjDicCreate,onObjDicUpdate,objectId,state}) => {\n    const importData = {\n      objectData:state.objDic.filter(e => e.id===objectId)[0],\n      objectName: state.objDic.map(object => object.name),\n      initStateForNewObject: state.home.initStateForNewObject\n    };\n    console.log(\"objDog importData: \", importData);\n    \n    //const [formData, setFormData] = useState({\n    //  name: \"\",\n    // adress: \"\",\n    //  contacts: \"\",\n    //  workRegime:\"\"\n    //});\n    const [formData, setFormData] = useState(\n        {...(objectId === undefined \n            ? {...importData.initStateForNewObject} \n            : importData.objectData)\n        }\n    );\n    const updateFormData = event => {\n      setFormData({\n        ...formData,\n        [event.target.name]: event.target.value\n      });\n    };\n    \n//  Calculated Data\n    \n    const Id = () => {\n        console.log(\"formData in formDog: \", formData.id);\n        return (typeof formData.id===\"number\" \n            ? formData.id \n            : state.objDic[state.objDic.length-1].id+1\n        );  \n    };  \n      const handleSaveCountedData =()=> setFormData({...formData,\n            id:Id()\n        });\n    const SaveButton = () => {\n        return <button onClick={handleSaveCountedData}>Save</button>    \n    };  \n\n// --------------------------------------------------------------------\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      ( objectId === undefined \n        ? onObjDicCreate(formData)\n        : onObjDicUpdate(formData)\n      );\n    //onObjDicCreate(formData);\n    };\n    return (\n      <form>\n        <br/>\n          <label> name <br/>\n            <Input\n              id=\"name\"\n              value= {formData.name}\n              onChange={e => updateFormData(e)}\n              placeholder=\" name\"\n              type=\"text\"\n              name=\"name\"\n              required\n              maxlength=\"120\"\n            /><br/>\n          </label>\n          <label> adress: <br/>\n            <Input\n              id=\"adress\"\n              value= {formData.adress}\n              onChange={e => updateFormData(e)}\n              placeholder=\" adress \"\n              type=\"text\"\n              name=\"adress\"\n              required\n              maxlength=\"120\"\n            /><br/>\n          </label>\n\t <label> Contact: <br/>\n            <Input\n              id=\"contactsFIO\"\n              value= {formData.contactsFIO}\n              onChange={e => updateFormData(e)}\n              placeholder=\" FIO role ?contacts \"\n              type=\"text\"\n              name=\"contactsFIO\"\n              required\n              maxlength=\"120\"\n            /><br/>\n          </label>\n\n          <label> workRegime : <br/>\n            <Input\n              id=\"workRegime\"\n              value= {formData.workRegime}\n              onChange={e => updateFormData(e)}\n              placeholder=\" workRegime \"\n              type=\"text\"\n              name=\"workRegime\"\n              required\n              minlength=\"8\"\n              maxlength=\"8\"\n            /><br/>\n          </label>\n          <button onClick={handleSubmit}>Submit</button>\n          <SaveButton/>\n        </form>\n      );\n    };\n    \n  const mapStateToProps = _state => ({\n    state: _state,\n    store: _state,\n    //dogovorData: _state.dogovorData\n    //formOneState: _state.form.formOne\n  });\n  const mapDispatchToProps = _dispatch => ({\n    onDataReady: data => _dispatch(actions.formDataNew(data)),\n    onDogovorData: data => _dispatch(actions.dogovorData(data)),\n    onObjDicCreate: \n        data => _dispatch(actions.objDicCreate(data)),\n    onObjDicUpdate: \n        data => _dispatch(actions.objDicUpdate(data))\n  });\n  export default connect (\n    mapStateToProps,\n    mapDispatchToProps\n  )(FormObj);  \n  \n // export default FormObj; \n","import React from 'react';\nimport {Input} from '../../css/style.js';\n\nexport const ObjectSelect = ({importData,formData,updateFormData}) => (\n      <label> objName : \n        <select\n          id=\"objName\"\n          value= {formData.objName}\n          onChange={e => updateFormData(e)}\n          placeholder=\" objName \"\n          type=\"text\"\n          name=\"objName\"\n          required\n          maxlength=\"120\"\n        ><br/>\n        <option>------------</option>\n\t    {importData.objects.map(e => \n\t      <option value={e}>{e}</option>)}\n\t    </select><br/>\n      </label>\n    );\nexport const AgentSelect = ({importData,formData,updateFormData}) => (\n          <label> agentName :\n           <select\n             id=\"agentName\"\n             value= {formData.agentName}\n             onChange={e => updateFormData(e)}\n             name=\"agentName\"\n             required\n           >\n             <option>------------</option>\n             {importData.agents.map(e => <option value={e}>{e}</option>)}\n           </select><br/>\n         </label>   \n    );\nexport const OwnerSelect = ({importData,formData,updateFormData}) => (\n                 <label> ownerName :\n           <select\n             id=\"ownerName\"\n             value= {formData.ownerName}\n             onChange={e => updateFormData(e)}\n             placeholder=\" ownerName\"\n             name=\"ownerName\"\n             required\n             minlength=\"10\"\n             maxlength=\"10\"\n           >\n           <option>------------</option>\n           {importData.owners.map(e => <option value={e}>{e}</option>)}\n           </select><br/>\n         </label>\n    );\nexport const DogovorTypeSelect = ({importData,formData,updateFormData}) => (\n        <label> dogovorType : \n            <select\n              id=\"dogovorType\"\n              value= {formData.dogovorType}\n              onChange={e => updateFormData(e)}\n              placeholder=\" dogovorType \"\n              type=\"text\"\n              name=\"dogovorType\"\n              required\n              maxlength=\"120\"\n            ><br/>\n            <option>------------</option>\n\t        {importData.dogovorTypes.map(e => \n\t         <option value={e}>{e}</option>)}\n\t        </select><br/>\n          </label>\n    );\nconst delDoub = (string,val) => {\n//const magic = (string,val) => {\n  const stroke = string.split(\",\");\n  return (\n    stroke.includes(val)\n    ? stroke.filter(e => e!==val).join()\n    :  stroke.concat(val).join()\n  );\n//};\n};\nexport const SystemsSelect =  \n  ({importData,formData,updateFormData}) => {\n    const handleChange = event => {\n      return (\n        {target:\n          {name:event.target.name,\n           value:delDoub(formData.systems,event.target.value)}\n        });\n    };\n    return (\n        <label> systems :\n          {importData.systemsDataVector.map((e,i) =>\n            <div>\n              <input\n                checked={formData.systems\n                  .split(\",\").includes(e)?\"yes\":\"\"\n                } \n                value={e}           \n                type=\"checkbox\" \n                name=\"systems\" \n                onChange={e => updateFormData(handleChange(e))}\n              />\n              <label for={e}>{e}</label>\n            </div>\n          )}<br/> \n        </label>\n  )\n  }; \nexport const PriceInput = ({formData,updateFormData}) => (\n  <label> price : <br/>\n    <Input\n      id=\"price\"\n      value= {formData.price}\n      onChange={e => updateFormData(e)}\n      placeholder=\" price \"\n      type=\"text\"\n      name=\"price\"\n      required\n    /><br/>\n  </label>\n);\nexport const SubmitButton = ({handleSubmit}) => (<button onClick={handleSubmit}>Submit</button>);\n","   \n  // FormDog.js\n  import React, {useState,useEffect} from 'react';\n  import {Input} from '../../css/style.js';\n  import * as actions from '../../actions';\n  import {\n          ObjectSelect,\n          AgentSelect,\n          OwnerSelect,\n          DogovorTypeSelect, \n          SystemsSelect,\n          PriceInput,\n          SubmitButton  \n  } from './DogovorFormElements';\n  import BeautyText from \"../PRINT/BeautyText\";\n  import {connect} from 'react-redux';\n  import { Link } from 'react-router-dom';\n  import {\n      GlobalStyle,Container,Grid,AreaBox,Text,\n      TextBox,Button,ParamBox,naked,link\n  } from '../../css/style.js'\n\n  const FormDog = (\n    { store,    \n      dogovorId,\n      onDogovorDicCreate,\n      onDogovorDicUpdate }) => {\n\n// --------------------------------------------------------------------\n    // IMPORTS --------------------------------------------------------\n    const importData = {\n      dogovor: store.dogDic.filter(e => e.id===dogovorId)[0],\n      owners: store.ownerDic.map(owner => owner.name),\n      agents:  store.agentDic.map(agent => agent.name),\n      objects:  store.objDic.map(object => object.name),\n      systemsDataVector: store.home.systemsDataVector,\n      dogovorTypes: store.home.dogovorTypes,\n      initStateForNewDogovor: store.home.initStateForNewDogovor\n    };\n    console.log(\"formDog importData: \", importData);\n\n    // FORM STATE MANAGEMENT ----------------------------------------------------\n\n    const [formData, setFormData] = useState(\n        {...(dogovorId === undefined \n            ? {...importData.initStateForNewDogovor} \n            : importData.dogovor)\n        }\n    );\n\n    console.log(\"formData: \", formData);\n    const UpdateFormData = event => {\n      console.log(\"event.target.name: \", event.target.name);\n      console.log(\"event.target.value: \", event.target.value);\n      console.log(\"formData: \", formData);\n        setFormData({\n            ...formData,\n            [event.target.name]: event.target.value\n        });\n       \n    };\n\n    // CALCULATED DATA FOR THE FORM --------------------------------------------\n\n    const Today = () => {\n        var today = new Date();\n        var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n        //return date;\n                return (formData.date===\"\" \n            ? date \n            : store.dogDic.filter(e => e.date===formData.date)[0].date\n        ); \n    };\n    //console.log(\"Today: \", Today());\n    const Id = () => {\n        console.log(\"formData in formDog: \", formData.id);\n        return (typeof formData.id===\"number\" \n            ? formData.id \n            : store.dogDic[store.dogDic.length-1].id+1\n        );  \n    };\n    const Name = () => {\n        return (formData.name===\"\" \n            ? \"NAME\" \n            : store.dogDic.filter(e => e.name===formData.name)[0].name\n        ); \n    };\n    //console.log(\"ID count: \", Id());\n    const ObjectId = () => {\n        return(store.objDic.filter(e => e.name===formData.objName)[0].id);\n    };\n    console.log(\"objId in DormDog: \", formData.objId);\n    //console.log(\"ObjectId: \", ObjectId());\n    const AgentId = () => {\n        return store.agentDic.filter(e => e.name===formData.agentName)[0].id;\n        \n    };\n    //console.log(\"AfentId: \", AgentId());\n    const OwnerId = () => {\n        return store.ownerDic.filter(e => e.name===formData.ownerName)[0].id;  \n  };\n  //console.log(\"FormData: \", formData);\n  const handleSubmit = e => {\n  e.preventDefault();\n    ( dogovorId === undefined \n      ? onDogovorDicCreate(formData)\n      : onDogovorDicUpdate(formData)\n    )\n  };\n  const handleSaveCountedData =()=> setFormData({...formData,\n            id:Id(),\n            name:Name(),\n            date:Today(),\n            objId:ObjectId(),\n            agentId:AgentId(),\n            ownerId:OwnerId()\n        });\n    const SaveButton = () => {\n        return <button onClick={handleSaveCountedData}>Save</button>    \n    };\n    // FORM ELEMENTS ----------------------------------------------------------\n    return (\n      <form><br/>\n          <ObjectSelect \n            importData={importData} formData={formData} updateFormData={UpdateFormData}/>\n          <AgentSelect importData={importData} formData={formData} updateFormData={UpdateFormData}/>\n          <OwnerSelect importData={importData} formData={formData} updateFormData={UpdateFormData}/>\n          <DogovorTypeSelect importData={importData} formData={formData} updateFormData={UpdateFormData}/>\n          <SystemsSelect importData={importData} formData={formData} updateFormData={UpdateFormData}/>\n          <PriceInput formData={formData} updateFormData={UpdateFormData}/><br/>\n          <SubmitButton handleSubmit={handleSubmit}/>\n          <SaveButton/>\n      </form>\n    )\n    };\n\n  \n  \n  const mapStateToProps = _state => ({\n    store: _state,\n    dogovorData: _state.dogovorData\n    //formOneState: _state.form.formOne\n  });\n  const mapDispatchToProps = _dispatch => ({\n    onDataReady: data => _dispatch(actions.formDataNew(data)),\n    onDogovorData: data => _dispatch(actions.dogovorData(data)),\n    onDogovorDicCreate: \n      data => _dispatch(actions.dogDicCreate(data)),\n    onDogovorDicUpdate:\n      data => _dispatch(actions.dogDicUpdate(data))\n  });\n\n  export default connect (\n    mapStateToProps,\n    mapDispatchToProps\n  )(FormDog);  \n  \n  //export default FormDog; \n\n    \n","       \n  import React, {useState,useEffect} from 'react';\n  //import {\n  //  GlobalStyle,Container,Grid,AreaBox,Text,\n  //  TextBox,Button,ParamBox,naked,\n  //  NavbarDropdown,NavbarDropdownContent,link\n  //} from '../../css/style.js';\n  import FormOneSimp from \"./FormOneSimp\";\n  import FormTwoSimp from \"./FormTwoSimp\";\n  import FormThreeSimp from \"./FormThreeSimp\";\n  import FormObj from \"./FormObj\";\n  import FormDog from \"./FormDog\";\n\n  // SelectForm :: formaName -> fornmType -> (DogovorTypesList,FormByType,FormSetByName)\n  export const selectForm = (\n    formName,\n    formType=\"def\",\n    id=undefined) => {\n        console.log(\"selectForm input: \", formName,formType,id)\n        const formsLib = {\n            ownerDic:{\n                YL:<FormOneSimp \n                     formName={formName} \n                     ownerId={id}\n                   />,\n                IP:<FormTwoSimp \n                     formName={formName} \n                     ownerId={id}\n                   />,\n                FL:<FormThreeSimp \n                     formName={formName} \n                     ownerId={id}\n                   />\n            },\n            agentDic:{\n                YL:<FormOneSimp \n                    formName={formName}\n                    agentId={id}\n                   />,\n                IP:<FormTwoSimp \n                     formName={formName} \n                     agentId={id}\n                   />,\n                FL:<FormThreeSimp \n                     formName={formName} \n                     agentId={id}\n                   />\n            },\n            objDic:{\n                def:<FormObj objectId={id}/>       \n            },\n            dogDic:{\n                def:<FormDog dogovorId={id}/>        \n            }\n        };\n        return (\n            { \n              types:Object.keys(formsLib[formName]),\n              form:formsLib[formName][formType],\n              formDic:formsLib[formName]\n            }\n        );\n    };\n","   \n    import React,{useState} from 'react';\n    import {connect} from 'react-redux';\n    import * as actions from '../../actions';\n\n// --------------------------------------------------------------------\n\n    const DeleteButtonEmptyDiv = \n    ({dogovorId,\n      onDelete,\n      dictionaryName,\n      onOwnerDelete,\n      onAgentDelete,\n      onObjDelete,\n      onDogDelete}) => {\n      const dicDelete = dicName => {\n        console.log(\"dicName\", dicName);\n        switch(dicName){\n            case \"ownerDic\":\n                onOwnerDelete(dogovorId);\n                break;\n            case \"agentDic\":\n                onAgentDelete(dogovorId);\n                break;\n            case \"objDic\":\n                onObjDelete(dogovorId);\n                break;\n            case \"dogDic\":\n                onDogDelete(dogovorId);\n                break;\n            default:\n                console.log('nothing to delete');   \n        }\n      }; \n        \n        return(       \n            <button  \n                onClick={() => { \n                    if (window.confirm(\n                        `Are you sure you want to delete ${dictionaryName}'s ${dogovorId} ?`))\n                    dicDelete(dictionaryName)\n                    }}\n                    >\n                    delete\n                    </button>\n                    )\n                    };\n  const mapStateToProps = \n  _state => ({});\n  const mapDispatchToProps =\n  _dispatch => ({\n      onDelete: data => _dispatch(actions.dogDicDelete(data)),\n      onOwnerDelete: data => _dispatch(actions.ownerDicDelete(data)),\n      onAgentDelete: data => _dispatch(actions.agentDicDelete(data)),\n      onObjDelete: data => _dispatch(actions.objDicDelete(data)),\n      onDogDelete: data => _dispatch(actions.dogDicDelete(data)),\n      });\n  export default connect(\n      mapStateToProps,\n      mapDispatchToProps\n      )\n      (DeleteButtonEmptyDiv);\n\n","import React from 'react';\nimport {YL,IP,FL} from \"../NOTEBOOK/Dogfoot/foot\";\n////sample data\n//const sdata = require('../SampleData/sampleData');\n// processors\n//const yl = require('./foot').yl;\n\n//const ip = require('./foot').ip;\n//const fl = require('./foot').fl;\n//const assert = require('../../../src/utils/assert');\n\n    export const DogovorFoot = ({state,id}) => {\n      console.log(\"state in footOut: \", state);\n      console.log(\"id in footOut: \", id);\n      const dogovorData = \n        state.dogDic.filter(e => e.id===id);\n      console.log(\"dogovorData in footOut: \", dogovorData);\n      const ownerId =  dogovorData[0].ownerId;\n      console.log(\"ownerId infootOut :\",ownerId);\n      const agentId = dogovorData[0].agentId;\n      const ownerData = \n        state.ownerDic.filter(e => e.id===ownerId)[0];\n      const agentData = \n        state.agentDic.filter(e => e.id===agentId)[0];\n      const extractData = \n      (actorData) => {\n            console.log(\"actorData: \", actorData);\n            switch(actorData.type){\n            case \"YL\": \n                return <YL data={actorData}/>;\n            case \"IP\": \n                return <IP data={actorData}/>;\n            case \"FL\": \n                return <FL data={actorData}/>;\n            default: return \"who cares\";\n            }\n            }; \n      const out = (\n            <div>\n                {extractData(ownerData)}\n                {extractData(agentData)}\n                </div>\n                );\n      //console.log(\"foouOut: \", out)     \n      return out; \n    };\n\n//console.log(\"footOut(asd.yl,0):\",footOut(asd.yl,0));\n/*\nassert(\n    \"agent foot for AXINEL\",\n    footOut( sdata , \"agentDic\" , 0 ),\n    \"Заказчик: ОOO 'Аксинель' ИНН: 7724912950 КПП: 772401001 ОГРН: 1147746259430 Юр.адрес: 115404, Россия, Москва, Радиальная 6-я улица, дом 7а строение 2, комната 1 эт 2 Банк: МОСКОВСКИЙ ФИЛИАЛ АО КБ 'МОДУЛЬБАНК' БИК: 044525092 р/c: 40702810970010127006 к/с: 80101810645250000092 ОOO 'Аксинель' Царевский.А.М\"\n);\n*/\n/*\nassert(\n    \"agent foot for Kolyhan\",\n    footOut(sdata,\"agentDic\",1),\n    \"Заказчик: ИП Колыхан Карина Олеговна ИНН: 343902925395 ОГРНИП: 317344300061296 Юр.адрес: Волгоградская область г.Фролово Банк: ПАО 'СБЕРБАНК РОССИИ' г.Москва БИК: 044525225 р/c: 40702810970010127006 к/с: 80101810645250000092 ИП Колыхан Карина Олеговна Колыхан.К.О\"\n);\nassert(\n    \"agent foot for ip\",\n    footOut(sdata,\"agentDic\",2),\n    \"Заказчик: Иночкин Игорь Владимирович паспорт серия 4519 номер 022226 выдан: ГУ МВД РОССИИ ПО Г.МОСКВЕ дата выдачи: 25.01.2019 код подразделения: 770-045 Иночкин И.В.\"\n);\n*/\n//const makeDogovorFootIO = () => {\n    //return \"cat in the jar\"\n    //};\n    //module.exports = makeDogovorFootIO;\n    //module.exports = footOut\n\n","   \n    import React, {useState,useEffect} from 'react';\n    import { Link,useParams } from 'react-router-dom';\n    import {connect} from 'react-redux';\n    import assert from '../utils/assert';\n    import {\n      GlobalStyle,Container,Grid,AreaBox,Text,\n      TextBox,Button,ParamBox,naked,\n      NavbarDropdown,NavbarDropdownContent,link\n    } from '../css/style.js';\n    import {DogovorFoot} from \"./DogovorFoot\"; \n    const makeDogovorHeadIO = require\n        ('../NOTEBOOK/Doghead/makeDogovorHeadIO');\n    const makeDogovorFootIO = require\n\t(\"../NOTEBOOK/Dogfoot/makeDogovorFootIO\");\n    \n\n    const Dogovor = ({state,id}) => {\n      let {dogovor} = useParams();\n      return(\n        <div onLoad={console.log(`dogovorId: ${dogovor}`)}>\n        <GlobalStyle/>\n        <Container>\n          <Grid>\n\t      <AreaBox g={[2,2,10,5]} fd=\"row\" style={naked}>\n              <TextBox h={\"100%\"} w={\"auto%\"}>\n                <Text m={\"2vmin\"}>\n                  <div>{state.dogDic.filter(e=>e.id===id)[0].name}<br/>\n\t               {state.dogDic.filter(e=>e.id===id)[0].date}<br/>\n                    {makeDogovorHeadIO(state,id)}\n              <DogovorFoot state={state} id={id}/>    \n\t      </div>\n\n                  <div><br/>\n\n                  </div>\n                </Text>\n              </TextBox>\n\t      </AreaBox>\n          </Grid>\n        </Container>\n        </div>\n      )\n    };\n\n\n  const mapStateToProps = _state => ({\n    state: _state,\n    store: _state.dogDic.dics,\n  });\n  const mapDispatchToProps = _dispatch => ({\n    //onDogovorData: data => _dispatch(actions.dogovorData(data)),\n    //onLoad: data => _dispatch(actions.setCurrentDogovor(data))\n  });\n\n  export default connect (\n    mapStateToProps,\n    mapDispatchToProps\n  )(Dogovor);\n\n  //export default Dogovor;\n\n","\n\n    import React, {useState,useEffect} from 'react'; \n    import {selectForm} from \"../FORMS/selectForm\"; \n    import DeleteButtonEmptyDiv from \"./DeleteButton\";\n    import Dogovor from \"../Dogovor\";\n\n//  CONTENT -----------------------------------------------------------\n    \n//  0.1 ShowHideButton :: ... -> content -> FoldableDiv\n//      : ..., a -> (div a -> click -> \"\")\n//      : ..., a -> (\"\"    -> click -> div a)\n//  0.2 DetailsButton :: \n//      ^ShowHideButton -> data -> DetailsFoldableDiv\n//      : [\"a\",\"b\"] -> (div a -> click -> \"\") -> \"\"\n//      : [\"a\",\"b\"] -> (\"\" -> click -> div a) -> div a div b\n//  0.3 EditButton ::  \n//      ^ShowHideButton -> ^formManager -> \n//      dictionaryName  -> EditFoldableDiv      \n//  0.4 DeleteButton:: \n//      ^ShowHideButton -> dictionaryName -> articleId -> dictionary\n//      : {1:\"a\",2:\"b\"} -> 2 -> {1:\"a\"} \n//  0.5 ButtonSetSelector :: buttonSet -> div buttonSet\n//      : [\"read\",\"update\"] -> <DetailsButton/> <EditButton/>\n//      : [\"delete\"] -> <DeleteButton/>\n    \n    //export const ShowDictionaryArticleData = \n    //({dictionary,dictionaryName}) => (\n\n   // Selector :: selectForm -> dictName -> FormSelector\n    //export const Selector = \n    //({selectForm,dictionaryName}) => {\n\n    //export const CreateDictionaryArticle = \n    //({dictionaryName,selectForm}) => {\n\n    // DicitonaryIO :: state -> dicName ->        \n    // HidableDivWithFormSelector+DictMappedToHidableDiv\n    //export const DictionaryIO = \n    \n//  0.1\n    // ShowHideButton :: ... -> content -> FoldableDiv\n    // : ..., a -> (div a -> click -> \"\")\n    // : ..., a -> (\"\"    -> click -> div a)\n    export const ShowHideButton =\n    ({name=[\"show\",\"hide\"],\n      content=\"content\" }) => {\n        const [showHide,setShowHide] = useState(false);\n        //console.log(\"ShowHideButton: \", showHide);\n        //console.log(\"content: \", content);\n        return (\n            <span>                                          \n                <button \n                    onClick={()=>setShowHide(!showHide)}\n                    > \n                    {showHide===false ? name[0] : name[1]} \n\t                </button>\n                    {showHide===false ? \"\" : content}\n                    </span>\n                    );\n                    };\n//  0.2\n    // DetailsButton :: \n    //   data -> ShowHideButton -> DetailsFoldableDiv\n    // : [\"a\",\"b\"] -> (div a -> click -> \"\") -> \"\"\n    // : [\"a\",\"b\"] -> (\"\" -> click -> div a) -> div a div b \n    const DetailsButton = \n    ({owner}) => (\n        <ShowHideButton \n            name={[\"open\",\"close\"]} \n            content={\n                Object\n                .entries(owner)\n                .map(record => \n                    <div>{record[0]} : {record[1]}</div>)\n                    }\n                    />\n                    );\n//  0.3\n    // EditButton ::  \n    //   formManager -> dictionaryName \n    //   -> ShowHideButton -> EditFoldableDiv\n    const EditButton = \n    ({owner,dictionaryName}) => (\n        <ShowHideButton\n            name={[\"edit\",\"stop\"]}\n            content={\n                <div> \n                    {console.log(\"edit button owner,dictionaryName: \",\n                     owner,dictionaryName)\n                     }\n                    {selectForm(\n                        dictionaryName,owner.type,\n                        owner.id)\n                        .form\n                        } \n                        </div> \n                        }\n                        />\n                        );\n//  0.4 \n    // DeleteButton :: dictionaryName -> articleId -> dictionary\n    // : {1:\"a\",2:\"b\"} -> 2 -> {1:\"a\"} \n   const DeleteButton = ({id,dictionaryName}) => (\n        <DeleteButtonEmptyDiv\n            dogovorId={id}\n            dictionaryName={dictionaryName}\n            />        \n            ); \n\n    // Selector :: formMananger -> dictName -> FormSelector\n    export const Selector = \n    ({selectForm,dictionaryName}) => {\n        const [select,setSelect] = useState(\"\");\n        return (\n            <div>\n                <select \n                    onChange={e => setSelect(e.target.value)}\n                    >\n                    <option value=\"-\">-------</option>\n                        {Object.entries(\n                        selectForm(dictionaryName,select).formDic)\n\t                    .map(e => <option value={e[0]}>{e[0]}\n                        </option>)}\n                        </select>\n                <div>        \n                    {select===\"\" \n                    ? \"\" \n                    : <div> \n                        {selectForm(dictionaryName,select).form} \n                        </div> \n                        }\n                        </div>\n                        </div>\n                        );\n                        };\n\n    export const CreateDictionaryArticle = \n    ({dictionaryName,selectForm}) => {\n        return (\n            <ShowHideButton \n                name={[\"создать договор\",\"скрыть\"]} \n                content={\n                    selectForm(dictionaryName).types[0]===\"def\"\n                    ?  selectForm(dictionaryName).form\n                    : <Selector \n                          selectForm={selectForm} \n                          dictionaryName={dictionaryName}\n                          />\n                          }\n                          />\n                          );\n                          };\n    const ShowPrintReadyDogovor = \n    ({state,id}) => {\n        return(\n            <ShowHideButton\n                name={[\"show beauty\", \"hide beauty\"]}\n                content={\n                    <Dogovor\n                        state={state}\n                        id={id}\n                        /> \n                        }          \n                        />\n                        );    \n                        };\n\n    const buttonSet = \n    (state,owner,dictionaryName) => ({\n        details: <DetailsButton owner={owner} />,\n        edit: <EditButton \n                    owner={owner} \n                    dictionaryName={dictionaryName}\n                    />,\n        delete: <DeleteButton \n                    id={owner.id}\n                    dictionaryName={dictionaryName}\n                    />,\n        show: <ShowPrintReadyDogovor\n                state={state}\n                id={owner.id}\n                />\n                });\n    //  1\n    // ShowDictionaryArticleData :: \n    // buttonSet -> div buttonSet\n    // : [\"read\",\"update\"] -> <DetailsButton/><EditButton/>\n    // : [\"delete\"] -> <DeleteButton/>\n    export const ShowDictionaryArticleData = \n    ({state,dictionaryName,buttons}) => (\n        state[dictionaryName].map(owner =>\n            <div>\n                {owner.name}\n                {buttons.map(e => \n                    buttonSet(state,owner,dictionaryName)[e])\n                }\n                </div>\n                )\n                );\n\n    // DicitonaryIO :: state -> dicName ->        \n    // HidableDivWithFormSelector+DictMappedToHidableDiv\n    export const DictionaryIO = \n    ({state,dictionaryName,buttons}) => (\n        <div>\n            <ShowDictionaryArticleData \n                dictionaryName={dictionaryName}\n                state={state}\n                buttons={buttons}\n                />\n            <CreateDictionaryArticle \n                dictionaryName={dictionaryName} \n                selectForm={selectForm}\n                />\n                </div>\n                );\n\n\n","   \n  import React, {useState,useEffect} from 'react';\n  import {\n    GlobalStyle,Container,Grid,AreaBox,Text,\n    TextBox,Button,ParamBox,naked,\n    NavbarDropdown,NavbarDropdownContent,link\n  } from '../../css/style.js';\n  import {DictionaryIO} from \"../ELEMENTS/Elements\";\n  import {connect} from 'react-redux';\n  import * as actions from '../../actions';\n\n  const Ownerdic = ({state}) => (\n    <div>\n      <GlobalStyle/>\n      <Container>\n        <Grid>\n          <AreaBox g={[2,2,10,5]} fd=\"row\" style={naked}> \n            <TextBox w={\"80%\"}>\n              <Text>\n                <div>СПРАВОЧНИК НАШИХ ФИРМ:</div><br/>\n                <DictionaryIO \n                    state={state} \n                    dictionaryName={\"ownerDic\"}\n                    buttons={[\"details\",\"edit\",\"delete\"]}\n                    />\n              </Text>\n            </TextBox>             \n          </AreaBox>\n        </Grid>\n      </Container>\n    </div>\n  );\n\n  const mapStateToProps = _state => ({ state: _state });\n  const mapDispatchToProps = _dispatch => ({ });\n  export default connect (\n    mapStateToProps,\n    mapDispatchToProps\n  )(Ownerdic);\n  \n  //export default Ownerdic;\n\n","   \n    import React, {useState,useEffect} from 'react';\n    import Beautiful from \"./Beautiful\";\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,\n        NavbarDropdown,NavbarDropdownContent,link\n    } from '../css/style.js';\n    import { Link } from 'react-router-dom';\n    import * as actions from '../actions';\n    import {connect} from 'react-redux';\n    //import FormOne from \"./FormOne\";\n    //import FormTwo from \"./FormTwo\";\n    //import FormThree from \"./FormThree\";\n    //import Montaj from \"./Montaj\";\n    import Ownerdic from \"./DICTIONARIES/Ownerdic\";\n    const {newDogGen,nameExtractor} = require(\"../utils/dognums\");\n\n\n    const Home = (\n        {\n            store,\n            home,\n            formData,\n            newDogData,\n            onDogovorData,\n            dogovorData\n        }) => { \n        console.log(\"store inside home : \", store);\n        console.log(\"form data : \", formData);\n        console.log(\"new dogovor data : \", newDogData);\n\n//  STATE -------------------------------------------------------------\n    \n    \n    // INIT\n    const [selection, setSelection] = useState({\n        objNameSel:\"\",\n        dogTypeSel:\"\",\n        sysTypeSel:\"\",\n        servTypeSel:\"\",\n        clientTypeSel:\"\"    \n    });\n    const [hub,setHub] = useState({});\n    const output = {...dogovorData,selectors:{...selection,hub}};\n    \n    console.log(\"output : \", output);\n\n//  REDUCERS ---------------------------------------------------------\n\n    const updateSelection = event => {\n        setSelection({\n          ...selection,\n          [event.target.name]: event.target.value\n        });\n        onDogovorData(output);\n        console.log(\"updateSelection : \", selection);\n    }; \n    const updateHub = event => {\n        const target = event.target;      \n        const value = target.value === \"on\" ? target.checked : !target.checked;\n        const name = target.name;\n        setHub({...hub,[name]: value});\n    }; \n    const { objNameSel,\n            dogTypeSel,\n            sysTypeSel,\n            servTypeSel,\n            clientTypeSel,\n            } = selection;\n\n//  SAMPLE HARDCODED DATA VECTORS ------------------------------------ \n\n    const objectsDataVector = [\"Липки\",\"Лапки\",\"Пипки\"];\n    const dogovorsDataVector  = [\n        \"Договор проектирования\",\n        \"Договор поставки\",\n        \"Договор монтажа\",\n        \"Договор сервисного обслуживания\",\n        \"Договор субподряда\"\n    ];\n    const systemsDataVector = [\n        \"Вентиляция и кондиционирование\", \n        \"Отопление\",  \n        \"Котельная\",  \n        \"Водоснабжение и канализация\",  \n        \"ЭОМ\", \n        \"Слаботочные сети\",\n        \" Автоматизация\"\n    ];\n    const serversDataVector = [\"сервер один\", \"сервер два\"];\n    const clientDataVector = [\"организация\",\"ИП\",\"физ лицо\"];\n\n// ----------------------------------------------------------------------------------------------------------\n\n    const ObjectSelector = () => (\n        <label for=\"pet-select\"> выбери объект : <br/> \n        <select\n            value={objNameSel} \n            id=\"objNameSel\" \n            name=\"objNameSel\" \n            onChange={e =>updateSelection(e)}\n        >\n            <option value=\"\"> - - - - - - - - - - - - - - - </option>\n            {objectsDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n        </select><br/>\n        </label>\n    );\n    const DogovorSelector = () => (\n       <label for=\"pet-select\"> выбери тип договора : <br/>\n        <select\n            value={dogTypeSel} \n            id=\"dogTypeSel\" \n            name=\"dogTypeSel\" \n            onChange={e =>updateSelection(e)}\n        >\n            <option value=\"\"> - - - - - - - - - - - - - - - </option>\n            {dogovorsDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n        </select><br/> \n        </label>\n    );\n    const ServerSelector = () => (\n        <div>\n            <label for=\"pet-select\"> выбери тип сервера : </label><br/>\n            <select\n                value={servTypeSel} \n                id=\"servTypeSel\" \n                name=\"servTypeSel\" \n                onChange={e =>updateSelection(e)}\n            >\n                <option value=\"\"> - - - - - - - - - - - - - - - </option>\n                {serversDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n            </select><br/>\n        </div>\n    );\n\n    const ClientSelector = () => (\n        <div>\n           <label for=\"pet-select\"> выбери тип клиента : </label><br/>\n            <select\n                value={clientTypeSel} \n                id=\"clientTypeSel\" \n                name=\"clientTypeSel\" \n                onChange={e =>updateSelection(e)}\n            >\n                <option value=\"\"> - - - - - - - - - - - - - - - </option>\n                {clientDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n            </select><br/> \n        </div>\n    );\n    const SystemSelector = () => (\n        <div>\n            {systemsDataVector.map(e => \n                (<div>                    \n                <input\n                    checked={hub[`${e}`]}\n                    name={`${e}`}\n                    type=\"checkbox\"\n                    onChange={e =>updateHub(e)}\n                /><label>{`${e}`}</label>\n                </div>)\n             )}          \n        </div>\n    );\n    /*\n    const FormTab = _props => {\n        return (clientTypeSel===\"организация\"\n                    ? <FormOne/> \n                    : clientTypeSel===\"ИП\"\n                        ? <FormTwo/>\n                        : clientTypeSel===\"физ лицо\"\n                            ? <FormThree/> \n                            : \"тип контрагента не выбран\"\n            );\n    };\n    */\n    const [dataSent,setDataSent] = useState(false);\n    const Dogovors = () => (\n        <button type=\"button\" disabled=\"false\">\n            <Link \n                to=\"/dodoc/montaj\"\n                style={link}\n            >\n                CОЗДАТЬ ДОГОВОР\n            </Link>\n        </button>  \n    );\n \n     \n   \n//  OUTPUT COMPONENT ------------------------------------------\n\n    const Basic = () => (\n        <div>\n        <GlobalStyle/>\n        <Container>\n            <Grid>\n                 <AreaBox g={[2,2,6,4]} fd=\"column\" style={naked}>  \n                     <TextBox h={\"100%\"}>\n                         <Text m={\"2vmin\"}>\n\t    \t\t    ЧТО-ТО ТУТ ДОЛЖНО БЫТЬ,<br/>\n\t    \t\t    А ПОКА МОЖЕШЬ ПРОЙТИСЬ ПО МЕНЮ\n                         </Text>\n                     </TextBox>\n                    \n                 </AreaBox>\n                 <AreaBox g={[6,2,11,5]} fd=\"row\" style={naked}>\n                    <ParamBox>\n                        <TextBox h={\"100%\"}>\n                            <Text m={\"2vmin\"}>\n                                <Beautiful/>\n                            </Text>\n                        </TextBox>\n                    </ParamBox>\n                </AreaBox>\n            </Grid>\n        </Container>\n        </div>\n        );\n        return <Basic/>;\n}\n\nconst mapStateToProps = _state => ({\n    store: _state,\n    home: _state.home,\n    formData: _state.formDataNew,\n    dogovorData: _state.dogovorData\n});\nconst mapDispatchToProps = _dispatch => ({\n    onDogovorData: data => _dispatch(actions.dogovorData(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(Home);\n\n//export default Home;\n\n","\n    export const dogSampleData = {\n        name:\"Договор монтажа № 2020В07\",\n        start:\"06.04.2020\",\n        end:\"06.10.2020\",\n        money:[315000, \"(триста пятнадцать тысяч рублей 00 копеек)\"],\n        systems:[\"вентиляции, кондиционирования\"],\n    };\n\n    export const formOrgDataSample = {\n        compFullName:\"ORGПОЛНОЕ ИМЯ КОМАНИИ\",\n        compShortName: \"ORGКОРОТКОЕ ИМЯ КОМПАНИИ\",\n        FIO:\"ORGИМЯ ФАМИЛИЯ ОТЧЕСТВО\", \n        INN:\"ORGИНН\",\n        KPP:\"ORGКПП\",\n        OGRN:\"ORGОГРН\",\n        OKPO:\"ORGОКРО\",\n        GosRegDate:\"ORGДАТА ГОС РЕГИСТРАЦИИ\",\n        YurAdress:\"ORGЮРИДИЧЕСКИЙ АДРЕСС\",\n        FactAdress:\"ORGФАКТИЧЕСКИЙ АДРЕСС\",\n        GenDirector:\"ORGГЕН ДИРЕКТОР\",\n        Buhgalter:\"ORGБУХГАЛТЕР\",\n        tel:\"ORGТЕЛЕФОН\",\n        bankName:\"ORGИМЯ БАНКА\",\n        BIK:\"ORGБИК\",\n        BillOne:\"ORGРАСЧЁТНЫЙ СЧЁТ\",\n        BillTwo:\"ORGКОРРЕСПОНДЕНДТСКИЙ СЧЁТ\"\n    };\n    export const formIPDataSample = {\n        Name:\"IPИМЯ ИП\",\n        FIO:\"IPФИО\",\n        INN:\"IPИНН\",\n        OGRNIP:\"IPОГРНИП\",\n        OKPO:\"IPОКРО\",\n        FactAdress:\"IPФАКТИЧЕСКИЙ АДРЕСС\",\n        bankName:\"IPИМЯ БАНКА\",\n        BIK:\"IPБИК\",\n        BillOne:\"IPРАСЧЁТНЫЙ СЧЁТ\",\n        BillTwo:\"IPКОРЕСПОНДЕНТСКИЙ СЧЁТ\"\n    };\n    export const formFLDataSample = {\n        NameInformal:\"FLНЕФОРМАЛЬНОЕ ИМЯ\",\n        lastName:\"FLФАМИЛИЯ\",\n        firstName:\"FLИМЯ\",\n        midName:\"FLОТЧЕСТВО\",\n        docType:\"FLВИД ДОКУМЕНТА\",\n        Serial:\"FLСЕРИЯ\",\n        number:\"FLНОМЕР\",\n        whoGave:\"FLВЫДАН\",\n        whenGave:\"FLДАТА ВЫДАЧИ\",\n        codeGave:\"FLКОД ПОДРАЗДЕЛЕНИЯ\",\n        addressGave:\"FLГДЕ ВЫДАН\"\n    };\n\n    export const serverData = {\n        varOne:{\n            CompName:\"ИП Попов Александр Петрович\",\n            FIO:\"Попов Александр Петрович\",\n            INN: \"1111111111111111\",\n            OGRN: \"11111111111111111\",\n            yurAdress: \"111111 Россия Домодедово г., 1 кв-л, 11\", \n            bank: \"Сбербанк\",\n            BIK: \"1111111111111111\",\n            firstBill: \"111111111111111111111111\",\n            secondBill: \"1111111111111111111111111\"\n        },\n        varTwo:{\n            CompName:\"ЮРЛИЦО ДВА\",\n            FIO:\"Клопов Алексей Ветрович\",\n            INN: '222222222222',\n            OGRN: \"22222222222222222222\",\n            yurAdress: \"22222222 Россия Довобродово г., 222 кв-л, 222\", \n            bank: \"Сбедбанк\",\n            BIK: \"222222222\",\n            firstBill: \"222222222222222222222\",\n            secondBill: \"22222222222222222222222\"\n        },\n        \"-\":{\n            CompName:\"-\",\n            FIO:\"-\",\n            INN: '-',\n            OGRN: \"-\",\n            yurAdress: \"-\", \n            bank: \"-\",\n            BIK: \"-\",\n            firstBill: \"-\",\n            secondBill: \"-\"\n        }     \n    };\n \n"," export const ClientDataORG = _d => {\n            return {\n                compFullName:_d.compFullName,\n                compShortName:_d.compShortName,\n                FIO:_d.FIO, \n                INN:_d.INN,\n                KPP: _d.KPP,\n                OGRN:_d.OGRN,\n                OKPO:_d.OKPO,\n                GosRegDate:_d.GosRegDate,\n                YurAdress:_d.YurAdress,\n                FactAdress:_d.FactAdress,\n                GenDirector:_d.GenDirector,\n                Buhgalter:_d.Buhgalter,\n                tel:_d.tel,\n                bankName:_d.bankName,\n                BIK:_d.BIK,\n                BillOne:_d.BillOne,\n                BillTwo:_d.BillTwo\n            };\n        };\n        // IP data -----------------------------------------------------\n        export const ClientDataIP = _d => {\n            return {\n                Name:_d.Name,\n                FIO:_d.FIO,\n                INN:_d.INN,\n                OGRNIP:_d.OGRNIP,\n                OKPO:_d.OKPO,\n                FactAdress:_d.FactAdress,\n                bankName:_d.bankName,\n                BIK:_d.BIK,\n                BillOne:_d.BillOne,\n                BillTwo:_d.BillTwo\n           };\n        };\n        // FL data -------------------------------------------------------\n        export const ClientDataFL = _d => {\n            return {\n                NameInformal:_d.NameInformal,\n                lastName:_d.lastName,\n                firstName:_d.firstName,\n                midName:_d.midName,\n                docType:_d.docType,\n                Serial:_d.Serial,\n                number:_d.number,\n                whoGave:_d.whoGave,\n                whenGave:_d.whenGave,\n                codeGave:_d.codeGave,\n                addressGave:_d.addressGave\n            };\n        };\n","import React from 'react';\n\n//  HEADER ELEMENTS -------------------------------------\n    // Org -----------------------------------------------\n    export const OrgHeader = (_clientData,_serverData) => (\n        <div> {_serverData.CompName}, в лице \n            директора {_serverData.FIO}, \n            действующего на основании Устава, с одной \n            стороны, именуемое в дальнейшем {\"Поставщик\"}\n            и {_clientData.compFullName}, в лице\n            генерального директора {_clientData.\n            FIO}, действующего(ей) на основании Устава, именуемое в \n            дальнейшем «Покупатель»,\n        </div>\n     );\n    // IP ---------------------------------------------\n    export const IPHeader = (_clientData,_serverData) => (\n        <div>  {_serverData.CompName}, в лице директора  {_serverData.FIO},\n            действующего на основании Устава, с одной стороны, именуемое в\n            дальнейшем \"Поставщик\" и {_clientData.Name}, в лице генерального\n            директора {_clientData.FIO}, действующего(ей) на основании\n            Устава, именуемое в дальнейшем «Покупатель»,\n        </div>\n    );\n    // FL\n  export const FLHeader = (_clientData,_serverData) => (\n    <div> {_serverData.CompName}, в лице директора\n      {_serverData.FIO},  действующего на основании Устава, \n      с одной стороны, именуемое в дальнейшем \"Поставщик\" и\n      {_clientData.lastName} {_clientData.firstName}\n      {_clientData.midName}, {_clientData.lastName} серия\n      {_clientData.Serial} номер {_clientData.number}, выдан\n      {_clientData.whoGave} {_clientData.whenGave} код\n      подразделения {_clientData.codeGave}, именуемый(ая) в\n      дальнейшем «Покупатель»,\n    </div>\n  );\n    \n\n    // FOOTERS ------------------------------------------------\n\n        // Org ------------------------------------------------\n        export const ClientOrgFooter = (_clientData,_serverData) => (\n            <div>\n                Покупатель:{_clientData.compShortName}<br/>\n                ИНН: {_clientData.INN}<br/>\n                КПП: {_clientData.KPP}<br/>\n                ОГРН: {_clientData.OGRN}<br/>\n                Юр.адрес: {_clientData.YurAdress}<br/>\n                Факт.адрес: {_clientData.FactAdress}<br/>\n                Банк: {_clientData.bankName}<br/>\n                БИК: {_clientData.BIK}<br/>\n                р/с: {_clientData.BillOne}<br/>\n                к/с: {_clientData.BillTwo}<br/>\n                <br/>\n                подписи<br/>\n                <br/>\n                {_clientData.compShortName}<br/>\n                <br/>\n                _____________/инициалы(Ген. директор {_clientData.FIO})/<br/>\n                <br/>\n                место печати (м.п.)<br/>\n           </div>\n        );\n        \n        // IP ------------------------------------------------\n        export const ClientIPFooter = (_clientData,_serverData) => (\n            <div>\n                Покупатель: {_clientData.Name}<br/>\n                ИНН: {_clientData.INN}<br/>\n                ОГРНИП: {_clientData.OGRNIP}<br/>\n                Факт.адрес: {_clientData.FactAdress}<br/>\n                Банк: {_clientData.bankName}<br/>\n                БИК: {_clientData.BIK}<br/>\n                р/с: {_clientData.BillOne} <br/>\n                к/с: {_clientData.BillTwo}<br/>\n                <br/>\n                подписи<br/>\n                <br/>\n                {_clientData.Name}<br/>\n                <br/>\n                _____________/(инициалы {(_clientData.FIO)})/<br/>\n                <br/>\n                _______________________________________________________\n            </div>\n        );\n        // FL ----------------------------------------------------------------------------\n        export const ClientFLFooter = (_clientData,_serverData) => (\n            <div>\n                Покупатель:<br/>\n                {_clientData.lastName} {_clientData.firstName}\n                {_clientData.midName}<br/>\n                {_clientData.docType} серия {_clientData.Serial}<br/>\n                номер {_clientData.number}<br/>\n                выдан {_clientData.whoGave} {_clientData.whenGave} <br/>\n                код подразделения {_clientData.codeGave}<br/>\n                <br/>\n                подписи<br/>\n                <br/>\n                _____________/(инициалы {_clientData.lastName}\n                {_clientData.firstName} <br/>      \n                {_clientData.midName})/<br/>\n            </div>\n        );\n        export const ServerFooter = _serverData=> {\n            return {\n                varOne:(        \n                    <div>\n                        Имя Компании:{_serverData.CompName}<br/>\n                        ФИО:{_serverData.FIO}<br/>\n                        ИНН: {_serverData.INN}<br/>\n                        ОГРН: {_serverData.OGRN}<br/>\n                        Юридический адрес: {_serverData.yurAdress}<br/>\n                        Банк: {_serverData.bank}<br/>\n                        БИК: {_serverData.BIK}<br/>\n                        р/с: {_serverData.firstBill}<br/>\n                        к/c: {_serverData.secondBill}<br/>\n                    </div>),\n                varTwo:(\n                    <div>\n                        Имя Компании:{_serverData.CompName}<br/>\n                        ФИО:{_serverData.FIO}<br/>\n                        ИНН: {_serverData.INN}<br/>\n                        ОГРН: {_serverData.OGRN}<br/>\n                        Юридический адрес: {_serverData.yurAdress}<br/>\n                        Банк: {_serverData.bank}<br/>\n                        БИК: {_serverData.BIK}<br/>\n                        р/с: {_serverData.firstBill}<br/>\n                        к/c: {_serverData.secondBill}<br/>\n                    </div>),\n                };\n        };\n        \n  \n","    \nimport React from 'react';\nimport {\n    dogSampleData,\n    formOrgDataSample,\n    formIPDataSample,\n    formFLDataSample,\n    serverData\n    } \n    from \"./MontajSampleData\";\nimport {ClientDataORG,ClientDataIP,ClientDataFL} from '../FORMS/FormMap';\nimport {OrgHeader,IPHeader,FLHeader,ClientOrgFooter,ClientIPFooter,ClientFLFooter,ServerFooter} from '../WIP//HsFs';\nimport * as actions from '../../actions';\n//import store from '../store';\nimport {connect} from 'react-redux';\nimport assert from \"../../utils/assert\";\n\nconst HeadFootOut = ({store,selectors,formData}) => {\n\n\n\n    const DataMapper = () => {\n        const Cmap = {\n            \"организация\":\"ORG\",\n            \"ИП\":\"IP\",    \n            \"физ лицо\":\"FL\",\n            \"-\":\"-\"\n        };\n        const Smap = {\n            \"сервер один\":\"varOne\",\n            \"cервер два\":\"varTwo\",\n            \"-\":\"-\"        \n        };\n        const actualInput = {ct:selectors.clientTypeSel, cd:formData ,st:selectors.servTypeSel };\n        const defaultInput = {ct:\"FL\", cd:formFLDataSample ,st:\"varOne\"};\n        const input = (ai,di,cmap,smap) => {\n            const DefaultData = () => di;\n            const ActualData = () => {\n                return {\n                ct: cmap[ai.ct],\n                cd: ai.cd,\n                st: smap[ai.st]             \n                }\n            };\n            //return (ai.ct === ai.cd) ? DefaultData() : ActualData();\n            return (ai.ct === \"-\" && ai.cd === \"-\") ? DefaultData() : ActualData();\n        };/*\n        assert(\"Input is properly mapped to relevant object fields\",\n            input(\n                {ct:\"организация\", cd:\"actualTestData\" ,st:\"сервер один\"},\n                {ct:\"FL\", cd:\"defaultTestData\" ,st:\"varOne\"},\n                Cmap,\n                Smap),\n            {ct: \"ORG\",cd: \"actualTestData\",st: \"varOne\"}\n        );\n        */\n        return {\n            a : input(actualInput,defaultInput,Cmap,Smap).ct,\n            b : input(actualInput,defaultInput,Cmap,Smap).cd,\n            c : input(actualInput,defaultInput,Cmap,Smap).st\n        };\n    };\n\n    const a = DataMapper().a;\n    const b = DataMapper().b;\n    const c = DataMapper().c;\n    const d = serverData;\n\n    // 1 \n    const HFROuter = () => {\n        const ClientType = _clientType => _clientType; \n        // 2\n        const ClientData = (_clientType,_clientData) => {\n            const chooseData = {\n                ORG:_clientData => ClientDataORG(_clientData),\n                IP:_clientData => ClientDataIP(_clientData),\n                FL:_clientData => ClientDataFL(_clientData),\n                \"-\":_clientData => ClientDataFL(_clientData),\n            };\n            return chooseData[_clientType](_clientData);        \n        };\n        /*\n        assert(\"Data is properly mapped to local keys\",\n            ClientData(\"ORG\",\n                { compFullName:1, compShortName:2, FIO:3, INN:4, KPP:5, OGRN:6, OKPO:7, GosRegDate:8, YurAdress:9, \n                  FactAdress:10, GenDirector:11, Buhgalter:12, tel:13, bankName:14, BIK:15, BillOne:16, BillTwo:17 }        \n            ),\n            { compFullName:1, compShortName:2, FIO:3, INN:4, KPP:5, OGRN:6, OKPO:7, GosRegDate:8, YurAdress:9, \n              FactAdress:10, GenDirector:11, Buhgalter:12, tel:13, bankName:14, BIK:15, BillOne:16, BillTwo:17 }\n       );\n        */\n        const ServerData = (_serverType,_serverData) => {\n            return  _serverData[_serverType];\n        };\n        /*\n        assert(\"Relevant server data is returned by given key\",\n            ServerData(\"varOne\",{\"varOne\":\"VarOneData\",\"varTwo\":\"VarTwoData\"}),\n            \"VarOneData\"\n        );\n        */\n        console.log(\"hf return : \", {\n            ClientType:ClientType,\n            ClientData:ClientData,\n            ServerData:ServerData\n        });\n        return{\n            ClientType:ClientType,\n            ClientData:ClientData,\n            ServerData:ServerData\n        }\n    };\n\n    // 4\n    const DogData = _d => {\n        return {\n            name:_d.name,\n            start:_d.start,\n            end:_d.end,\n            money:_d.money,\n            systems:_d.systems \n        };\n    };\n        // INPUT:\n    const aa = HFROuter().ClientType(DataMapper().a);\n    const bb = HFROuter().ClientData(DataMapper().a,DataMapper().b);\n    const cc = HFROuter().ServerData(DataMapper().c,serverData);\n    const HeadFoot = (_a,_b,_c) => {\n        const HF = {\n            ORG: (_b,_c) => [OrgHeader(_b,_c),ClientOrgFooter(_b,_c),ServerFooter(_c)[c]],\n            IP:(_b,_c) => [IPHeader(_b,_c),ClientIPFooter(_b,_c),ServerFooter(_c)[c]],\n            FL:(_b,_c) => [FLHeader(_b,_c),ClientFLFooter(_b,_c),ServerFooter(_c)[c]],\n            \"-\":(_b,_c) => [FLHeader(_b,_c),ClientFLFooter(_b,_c),ServerFooter(_c)[c]]        \n        };\n        return HF[_a](_b,_c);\n    };\n    //const aa = ClientType(a);\n    //const bb = ClientData(a,b);\n    //const cc = ServerData(c,d);\n    return(\n        <div>\n            {console.log(\"{HeadFoot(aa,bb,cc)[0]} : \", HeadFoot(aa,bb,cc)[0])}\n            <div>{HeadFoot(aa,bb,cc)[0]}</div>\n            <hr/>\n            <div>{HeadFoot(aa,bb,cc)[1]}</div>\n            <hr/>\n            <div>{HeadFoot(aa,bb,cc)[2]}</div>           \n        </div>\n    );\n    };\n\n    const mapStateToProps = _state => ({\n        store: _state,\n        home: _state.home,\n        selectors: _state.dogovorData.selectors,\n        formData:_state.dogovorData.formData,\n        dogovorData: _state.dogovorData\n    });\n    const mapDispatchToProps = _dispatch => ({\n        onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(HeadFootOut);\n\n    \n","   \n    import React from 'react';\n    import MontajBody from \"./MontajBody\";\n    import {connect} from 'react-redux';\n    //import store from '../store';\n    import * as actions from '../../actions';\n    //import store from '../store';\n    import { Link } from 'react-router-dom';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../../css/style.js';\n    import HeadFootOut from \"./HeadFoot\";\n    import MontajDefault from \"./MontajDefault\";\n\n    const divStyle = {width:'75vw',wordWrap:'break-word',fontFamily:'Roboto Mono'};\n    const headStyle = {textAlign:'center'};\n \n    /*\n        objName : имя объекта\n        dogType: ->\n        systems: ->\n        dogName : имя договора\n        zakazchikName : имя заказчика -> ownerData\n        postavshikName : имя поставщика -> agentData\n        date : дата ->  date\n        bank : Сбербанк\n        price : цена -> price\n        status : статус\n        paid : оплачено\n        reponsible : ответственный\n        pdfScan : ссылка на скан договора\n        commebt : комментарий\n    */    \n\n\n    // HEADER COMPOSER -------------------------------------------------\n    //const MontajHead = _p => (\n    //    <div>{ setDogType(_p.serverType,_p.clientType).head }</div>\n    //);\n        const MontajHead = () => (\n\n            <HeadFootOut/>\n\n    );  \n    // FOOTER ELEMENTS --------------------------------------------------------\n\n    // FOOTER COMPOSER ----------------------------------------------\n\n\n    // \"varOne\", \"IP\", formData -> {header,footer}\n \n\n    //setDogType(\"varOne\",\"IP\",formIPDataSample);\n    //${setDogType(clientType,serverType,data).head}\n    //console.log(montaj(\"varOne\",\"IP\",formIPDataSample));\n    \n    // OUTPUT -----------------------------------------\n    const Montaj = ({store,dogovorData}) => (\n        <div>\n        <GlobalStyle/>\n        <Container>\n            <Grid>\n                 <AreaBox g={[3,2,11,5]} fd=\"row\" style={naked}>\n                    <ParamBox>\n                        <TextBox h={\"100%\"} w={\"80%\"}>\n                            <Text m={\"2vmin\"} style={divStyle}>\n                                {/*Object.keys(dogovorData.formData).map(e\n                                 =>(<div>{dogovorData.formData[e]}</div>))}<br/>*/}\n                                {/*JSON.stringify(dogovorData.selectors)*/}<br/>\n                                {/*JSON.stringify(dogovorData.formData)*/}<br/>\n                                {/*JSON.stringify(store.home)*/}\n                                <MontajHead />\n                                {/*<MontajFoot/>*/}\n                            </Text>\n                        </TextBox>\n                    </ParamBox>\n                </AreaBox>\n            </Grid>\n        </Container>\n        </div>\n    );\n\n    const mapStateToProps = _state => ({\n        store: _state,\n        dogovorData:_state.dogovorData\n        //home: _state.home,\n        //yurlitzas: _state.home.yurlitzas,\n        //dogovorTypes: _state.home.dogovorTypes,\n        //formOneData: _state.form.formOne,\n        //formTwoData: _state.form.formTwo,\n        //formThreeData: _state.form.formThree\n    });\n    //const mapDispatchToProps = _dispatch => ({\n    //    onYur: data => _dispatch(actions.yurlitso(data))\n    //});\n\n    export default connect (\n        mapStateToProps//,\n        //mapDispatchToProps\n    )(Montaj);\n\n    //export default Montaj;\n","\n    import React,{useState,useEffect} from 'react';\n    //import store from '../store';\n    import {connect} from 'react-redux';\n    import * as actions from '../../actions';\n    import {\n    dogSampleData,\n    formOrgDataSample,\n    formIPDataSample,\n    formFLDataSample,\n    serverData\n    } \n    from \"./MontajSampleData\";  \n    \n    const MontajDefault = ({dogovorData,onDogovorData}) => { \n            // INIT\n        const [selection, setSelection] = useState({\n            objNameSel:\"Lipki\",\n            dogTypeSel:\"PROJ\",\n            sysTypeSel:\"WHO KNOWS\",\n            servTypeSel:\"varTwo\",\n            clientTypeSel:\"IP\"    \n        });\n        const [formData,setFormData] = useState(formOrgDataSample);\n        const [hub,setHub] = useState({\"\":\"\"});\n        const output = {...dogovorData,selectors:{...selection,hub},formData:formData};\n        //useEffect(()=>onDogovorData(output));\n\n    return(null)\n    };\n\n    const mapStateToProps = _state => ({\n        //dogovorData: _state.dogovorData\n    });\n    const mapDispatchToProps = _dispatch => ({\n        onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(MontajDefault);\n\n    \n \n\n    \n","   \n    import React, {useState,useEffect} from 'react';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,\n        NavbarDropdown,NavbarDropdownContent,link\n    } from '../../css/style.js';\n    import FormOneSimp from \"../FORMS/FormOneSimp\";\n    import FormTwoSimp from \"../FORMS/FormTwoSimp\";\n    import FormThreeSimp from \"../FORMS/FormThreeSimp\";\n    import {DictionaryIO} from \"../ELEMENTS/Elements\";\n    import { Link } from 'react-router-dom';\n    import {connect} from 'react-redux';\n    import * as actions from '../../actions';\n    \n    const Agentdic = ({state}) => (\n        <div>\n          <GlobalStyle/>\n          <Container>\n            <Grid>\n              <AreaBox g={[2,2,10,5]} fd=\"row\" style={naked}> \n                <TextBox w={\"80%\"}>\n                  <Text>\n                    <div>СПРАВОЧНИК НАШИХ КОНТРАГЕНТОВ:</div><br/>\n                    <DictionaryIO \n                        state={state} \n                        dictionaryName={\"agentDic\"}\n                        buttons={[\"details\",\"edit\",\"delete\"]}                        \n                        />\n                  </Text>\n                </TextBox>             \n              </AreaBox>\n            </Grid>\n          </Container>\n        </div>\n    );\n    \n    const mapStateToProps = _state => ({\n        state: _state\n    });\n    const mapDispatchToProps = _dispatch => ({\n        onAgentDicSelection: data => _dispatch(actions.agentDicSelect(data)),\n        onAgentDicCreation: data => _dispatch(actions.agentDicCreate(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(Agentdic);\n\n    //export default Ownerdic;\n\n"," \n  // Dogovordics.js\n  import React, {useState,useEffect} from 'react';\n  import {\n    GlobalStyle,Container,Grid,AreaBox,Text,\n    TextBox,Button,ParamBox,naked,Input,\n    NavbarDropdown,NavbarDropdownContent,link\n  } from '../../css/style.js';\n  import FormDog from \"../FORMS/FormDog\";\n  import Dogovor from \"../Dogovor\";\n  import {ShowHideButton,ListOfItemsDiv,ShowDictionaryArticleData} from \"../ELEMENTS/Elements\";\n  import {connect} from 'react-redux';\n  import * as actions from '../../actions';\n  import { Link,useParams } from 'react-router-dom';\n  import {DictionaryIO} from \"../ELEMENTS/Elements\";\n\n   const Dogovordic = ({state}) => (\n        <div>\n          <GlobalStyle/>\n          <Container>\n            <Grid>\n              <AreaBox g={[2,2,10,5]} fd=\"row\" style={naked}> \n                <TextBox w={\"80%\"}>\n                  <Text>\n                    <div>СПРАВОЧНИК НАШИХ ДОГОВОРОВ:</div><br/>\n                    <DictionaryIO \n                        state={state} \n                        dictionaryName={\"dogDic\"}\n                        buttons={[\"details\",\"edit\",\"delete\",\"show\"]}\n                        />\n                  </Text>\n                </TextBox>             \n              </AreaBox>\n            </Grid>\n          </Container>\n        </div>\n    );\n\n  const mapStateToProps = _state => ({\n    state: _state\n  });\n  const mapDispatchToProps = _dispatch => ({});\n\n  export default connect (\n    mapStateToProps,\n    mapDispatchToProps\n  )(Dogovordic);\n\n","  \n  // Objectdic.js\n  import React, {useState,useEffect} from 'react';\n  import {\n    GlobalStyle,Container,Grid,AreaBox,Text,\n    TextBox,Button,ParamBox,naked,\n    NavbarDropdown,NavbarDropdownContent,link\n  } from '../../css/style.js';\n  import {DictionaryIO} from \"../ELEMENTS/Elements\";\n  import FormObj from \"../FORMS/FormObj\";\n  import {connect} from 'react-redux';\n  import * as actions from '../../actions';\n\n    const Objectdic = ({state}) => (\n        <div>\n          <GlobalStyle/>\n          <Container>\n            <Grid>\n              <AreaBox g={[2,2,10,5]} fd=\"row\" style={naked}> \n                <TextBox w={\"80%\"}>\n                  <Text>\n                    <div>СПРАВОЧНИК НАШИХ ОБЪЕКТОВ:</div><br/>\n                    <DictionaryIO \n                        state={state} \n                        dictionaryName={\"objDic\"}\n                        buttons={[\"details\",\"edit\",\"delete\"]}\n                        />\n                  </Text>\n                </TextBox>             \n              </AreaBox>\n            </Grid>\n          </Container>\n        </div>\n    );\n    \n  const mapStateToProps = _state => ({\n    state: _state\n  });\n  const mapDispatchToProps = _dispatch => ({\n    //onObjDicSelection: data => _dispatch(actions.objDicSelect(data)),\n    //onObjDicCreation: data => _dispatch(actions.objDicCreate(data))\n  });\n\n  export default connect (\n    mapStateToProps,\n    mapDispatchToProps\n  )(Objectdic);\n\n","// theme.js\nconst breakpoints = [ '40em', '52em', '64em', '80em' ];\n\n// aliases\nbreakpoints.sm = breakpoints[0];\nbreakpoints.md = breakpoints[1];\nbreakpoints.lg = breakpoints[2];\nbreakpoints.xl = breakpoints[3]; \n\nexport default {\n  breakpoints,\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  //sizes: []\n  colors: {\n    black: '#000e1a',\n    white: '#fff',\n    blue: '#077ce0',\n    navy: '#004175',\n  }, \n}\n","import React from 'react';\nimport { Route, Switch,BrowserRouter as Router,Link } from 'react-router-dom';\nimport Home from './components/Home';\nimport Montaj from './components/MONTAJ/Montaj';\nimport Ownerdic from './components/DICTIONARIES/Ownerdic';\nimport Agentdic from './components/DICTIONARIES/Agentdic';\nimport Dogovordic from './components/DICTIONARIES/Dogovordic';\nimport Objectdic from './components/DICTIONARIES/Objectdic';\nimport Dogovor from './components/Dogovor';\nimport { ThemeProvider } from 'styled-components';\nimport theme from './theme';\n\nfunction App() {\n  return (\n    <main className=\"container\" >\n        <ThemeProvider theme={theme}>\n            <Router>\n              <div>\n                <ul>\n                  <li>\n                    <Link to=\"/dodoc\">home</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/dodoc/ownerdic\">owners</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/dodoc/agentdic\">agents</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/dodoc/objdic\">objects</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/dodoc/dogdic\">dogovors</Link>\n                  </li>\n                </ul>\n                <hr/>\n            <Switch id=\"main\">\n                <Route exact path=\"/dodoc/\" \n                    component={Home} />\n                <Route exact path=\"/dodoc/ownerdic\" \n                    component={Ownerdic} />\n                <Route exact path=\"/dodoc/agentdic\" \n                    component={Agentdic} />\n                <Route exact path=\"/dodoc/dogdic\" \n                    component={Dogovordic} />\n                <Route exact path=\"/dodoc/objdic\" \n                    component={Objectdic} />\n                <Route exact path=\"/dodoc/dogdic/:dogovor\"\n                    component={Dogovor}/>\n                <Route exact path=\"/dodoc/montaj\" \n                    component={Montaj} />           \n            </Switch>\n           </div>\n        </Router>\n        </ThemeProvider>\n    </main>\n  );\n}\n\nexport default App;\n","import {createStore} from 'redux';\nimport reducer from './reducers'; \n\nconst store = createStore(reducer);\nconsole.log(\"store while initialise in index.js : \", store.getState());\n\nexport default store;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport reducer from './reducers'; \nimport App from './App';\nimport store from './store';\n\n//const store = createStore(reducer);\n//console.log(\"store while initialise in index.js : \", //store.getState());\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nif (window.Cypress) {\n    window.store = store;\n}\n","\n    const assert = (_statement,_function,_positiveOutcome) => {\n        return(\n                JSON.stringify(_function) === JSON.stringify(_positiveOutcome) \n                ? console.log(`YES! ${_statement}, ooph!`) \n                : console.log(`NOPE! ${_statement} works WRONG!!!`)\n        );\n    };\n\n    //export {assert};\n    module.exports = assert;\n"],"sourceRoot":""}