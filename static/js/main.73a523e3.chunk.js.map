{"version":3,"sources":["css/Roboto_Mono/RobotoMono-Medium.ttf","utils/dognums.js","utils/assert.js","state.js","reducers/home.js","reducers/formDataNew.js","reducers/formOne.js","reducers/formTwo.js","reducers/formThree.js","reducers/dogovorData.js","reducers/index.js","constants/actionTypes.js","css/style.js","actions/index.js","components/BeautyText.js","components/FormOne.js","components/FormTwo.js","components/FormThree.js","components/MontajSampleData.js","components/MontajAPI.js","components/HeadFoot.js","components/Montaj.js","components/Home.js","App.js","index.js"],"names":["module","exports","assert","require","dogs","date","link","name","nameExtractor","out","Object","keys","map","dog","key","push","latestExtractor","_dogName","length","match","sampleNy","year","month","day","newDogGen","_date","sampleDate","_letter","_statement","_function","_positiveOutcome","JSON","stringify","console","log","state","hello","formData","dogovorData","zakazchikTypes","z1","sampleData","type","compFullName","compShortName","INN","KPP","OGRN","OKPO","GosRegDate","YurAdress","FactAdress","GenDirector","Buhgalter","tel","bankName","BIK","BillOne","BillTwo","z2","Name","FIO","OGRNIP","z3","NameInformal","lastName","firstName","midName","docType","Serial","number","whoGave","whenGave","codeGave","addressGave","initialState","window","Cypress","rootReducer","combineReducers","home","action","yurlitso","payload","dogovorType","formDataNew","clientType","data","GlobalStyle","createGlobalStyle","Container","styled","div","Grid","AreaBox","p","fd","g","b","ParamBox","w","h","Text","m","Button","TextBox","img","Input","input","naked","NavbarDropdownContent","_data","Font","register","family","src","font","styles","StyleSheet","create","page","margin","fontFamily","display","wordBreak","border","hyphens","section","padding","content","sampleDataOne","sampleDataTwo","zakazchik","template","data_to_text","_store","hold","parse","PdfDocument","_props","style","text","BeautyText","store","document","fileName","blob","url","loading","error","connect","_state","_dispatch","onDataReady","onDogovorData","actions","onNewdogData","useState","setFormData","updateFormData","event","target","value","id","onChange","e","placeholder","required","maxlength","minlength","onClick","preventDefault","dogovorDatree","formOrgDataSample","formIPDataSample","formFLDataSample","ServerData","varOne","CompName","yurAdress","bank","firstBill","secondBill","varTwo","ClientOrgData","_d","ClientIPData","ClientFLData","OrgHeader","IPHeader","FLHeader","ClientOrgFooter","ClientIPFooter","ClientFLFooter","setDogType","_clientType","_serverType","head","foot","divStyle","width","wordWrap","MontajHead","MontajFoot","newDogData","objNameSel","dogTypeSel","sysTypeSel","servTypeSel","clientTypeSel","selection","setSelection","hub","setHub","output","selectors","updateSelection","objectsDataVector","dogovorsDataVector","systemsDataVector","serversDataVector","clientDataVector","ObjectSelector","for","DogovorSelector","ServerSelector","ClientSelector","SystemSelector","checked","updateHub","FormTab","Dogovors","to","Basic","App","className","exact","path","component","Home","Montaj","createStore","reducer","getState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.73a523e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RobotoMono-Medium.7cfbd428.ttf\";","\n//  IMPORTS ---------------------------------------------------------------------------------------\n\n    const assert = require(\"./assert\");\n    \n//   TASK -----------------------------------------------------------------------------------------\n\n    /*\n    В процессе создания договоров им присваивается {название} по формуле:\n    + 1. Договор проектирования. {Договор проектирования №{текущийгод}А{порядковыйномер} от {дд-месяц-гггг}}\n    + 2. Договор поставки. {Договор поставки №{текущийгод}Б{порядковыйномер}. от {дд-месяц-гггг}}\n    + 3. Договор монтажа {Договор монтажа №{текущийгод}В{порядковыйномер}. от {дд-месяц-гггг}}\n    + 4. Договор сервисного обслуживания. {Договор сервисного обслуживания №{текущийгод}СО{порядковыйномер} от {дд-месяц-гггг}}\n    + 5. Договор субподряда {Договор монтажа №{текущийгод}ВСУБ{порядковыйномер}. от {дд-месяц-гггг}}\n\n    + С началом нового года {порядковый_номер} обнуляется и счет начинается заново с 1.\n    + {название} является названием файла при выгрузке в формате {название}.pdf или {название}.doc\n    */\n\n//  INPUT DATA: DOGS data (DOGOVORS) -------------------------------------------------------------------\n\n    const dogs = {\n        \"Договор проектирования\":\n            {\n                \"1999_1\": {date:\"1999/2/2\", link:\"link\", name: \"Договор проектирования №1999А1. от 1999/2/2\"},\n                \"1999_2\": {date:\"1999/12/5\", link:\"link\", name: \"Договор проектирования №1999A2. от 1999/12/5\"},\n                \"2000_1\": {date:\"2000/24/7\", link:\"link\", name: \"Договор проектирования №2000A1. от 2000/24/7\"}\n            },\n        \"Договор поставки\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор поставки №1999Б1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор поставки №1999Б2. oт 1999/12/5\"},\n                \"2019_2\": {date:\"24/7/2000\", link:\"link\", name: \"Договор поставки №2019Б2. от 2019/24/7\"}\n            },        \n        \"Договор монтажа\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор монтажа №1999В1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор монтажа №1999В2. от 1999/12/5\"},\n                \"2000_3\": {date:\"24/7/2000\", link:\"link\", name: \"Договор монтажа №1999В3. от 2000/24/7\"}\n            },\n        \"Договор сервисного обслуживания\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор сервисного обслуживания №1999СО1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор сервисного обслуживания №1999СО2. от 1999/12/5\"},\n                \"2000_4\": {date:\"24/7/2000\", link:\"link\", name: \"Договор сервисного обслуживания №2000СО4. от 2000/24/7\"}\n            },\n        \"Договор субподряда\":\n            {\n                \"1999_1\": {date:\"2/2/1999\", link:\"link\", name: \"Договор субподряда №1999ВСУБ1. от 1999/2/2\"},\n                \"1999_2\": {date:\"12/5/1999\", link:\"link\", name: \"Договор субподряда №1999ВСУБ2. от 1999/12/5\"},\n                \"2000_5\": {date:\"24/7/2000\", link:\"link\", name: \"Договор субподряда №2000ВСУБ5. от 2000/24/7\"}        \n            }\n    };\n\n//  FUNCTIONS ----------------------------------------------------------------------------------------------------\n\n    //  1 NAME EXTRACTOR ---------------------------------------------------------------------------------------------\n\n    const nameExtractor = (_dogs=dogs) => {\n        let out = [];\n        Object.keys(dogs).map(dog => {for (let key in dogs[dog]) out.push(dogs[dog][key].name)});\n        return out;\n    };\n    assert(\n        \"Name extractor extracts names\",\n        nameExtractor(),\n        [\n            \"Договор проектирования №1999A1. от 1999/2/2\",\n            \"Договор проектирования 1999A2. от №1999/12/5\",\n            \"Договор проектирования №2000A1. от 2000/24/7\",\n            \"Договор поставки №1999Б1. от 1999/2/2\",\n            \"Договор поставки 1999Б2. от №1999/12/5\",\n            \"Договор поставки №2019Б2. от 2019/24/7\",\n            \"Договор монтажа №1999В1. от 1999/2/2\",\n            \"Договор монтажа 1999В2. от №1999/12/5\",\n            \"Договор монтажа №1999В3. от 2000/24/7\",\n            \"Договор сервисного обслуживания №1999СО1. от 1999/2/2\",\n            \"Договор сервисного обслуживания 1999СО2. от №1999/12/5\",\n            \"Договор сервисного обслуживания №2000СО4. от 2000/24/7\",\n            \"Договор субподряда №1999ВСУБ1. от 1999/2/2\",\n            \"Договор субподряда 1999ВСУБ2. от №1999/12/5\",\n            \"Договор субподряда №2000ВСУБ5. от 2000/24/7\"\n        ]\n    );\n\n    //  2 LATEST DOGOVORTYPE NUMBER EXTRACTOR ------------------------------------------------------------------------------\n\n    const latestExtractor = _dogName => {\n        let keys = Object.keys(dogs[_dogName]); \n        let out = keys[keys.length-1].match(/(?<=\\_)\\d+/g)[0];\n        return out;\n    };\n    assert(\n        \"IN: dogType & dogs pool, OUT: latest #num of required dogtype \",\n        latestExtractor(\"Договор проектирования\"),\n        \"1\"\n    );\n    \n    //  3 NEW DOGOVOR GENERATOR ---------------------------------------------------------------------------------------\n\n    const sampleNy = { year:2020, month:1, day:1};\n    \n    const newDogGen = (_dogName,_date=sampleNy) => {\n        const sampleDate = `${_date.year}/${_date.day}/${_date.month}`;   \n        const out = _letter => {\n            return ( (_date.month === 1 && _date.day === 1) && (latestExtractor(_dogName) === 1)\n                ? `${_dogName} №${_date.year}${_letter}${+latestExtractor(_dogName)+1}. ot ${sampleDate}`\n                : `${_dogName} №${_date.year}${_letter}1. ot ${sampleDate}` \n            );\n        };\n        switch(_dogName){\n            case \"Договор проектирования\": return out(\"A\");\n            case \"Договор поставки\": return out(\"Б\");\n            case \"Договор монтажа\": return out(\"В\");\n            case \"Договор сервисного обслуживания\": return out(\"СО\");\n            case \"Договор субподряда\": return out(\"ВСУБ\");\n            default : return \"who knows\";\n        };\n        \n    };\n    assert(\n            \"IN: dog name, OUT: new dog name\",\n            newDogGen(\"nameOne\",sampleNy),\n            \"nameOne №2020A2. ot 2020/1/1\" // prev = \"nameOne 2000 A1 2000/24/7\"\n        );\n    assert(\n        \"IN: dog name, OUT: new dog name\",\n        newDogGen(\"nameTwo\",sampleNy),\n        \"nameTwo №2020B1. ot 2020/1/1\" //prev === \"nameTwo 2019 B2 2019/24/7\"\n    );\n\n//  EXPORTS ---------------------------------------------------------------------------------------------------------\n\n    exports.newDogGen = newDogGen;\n    exports.nameExtractor = nameExtractor;\n\n","\n    const assert = (_statement,_function,_positiveOutcome) => {\n        return(\n                JSON.stringify(_function) === JSON.stringify(_positiveOutcome) \n                ? console.log(`YES! ${_statement}, ooph!`) \n                : console.log(`NOPE! ${_statement} works WRONG!!!`)\n        );\n    };\n\n    //export {assert};\n    module.exports = assert;\n","const z1 =\n{ \n    sampleData:{type:\n        {\n            compFullName: \"-\",\n            compShortName: \"-\",\n            INN: \"-\",\n            KPP:\"-\",\n            OGRN:\"-\",\n            OKPO:\"-\",\n            GosRegDate:\"-\",\n            YurAdress:\"-\",\n            FactAdress:\"-\",\n            GenDirector:\"-\",\n            Buhgalter:\"-\",\n            tel:\"-\",\n            bankName:\"-\",\n            BIK:\"-\",\n            BillOne:\"-\",\n            BillTwo:\"-\"\n        }\n    }\n}\nconst z2 = \n{\n    Name: \"-\",\n    FIO: \"-\",\n    INN: \"-\",\n    OGRNIP:\"-\",\n    OKPO:\"-\",\n    FactAdress:\"-\",\n    bankName:\"-\",\n    BIK:\"-\",\n    BillOne:\"-\",\n    BillTwo:\"-\"\n};\nconst z3 = \n{\n    NameInformal: \"-\",\n    lastName: \"-\",\n    firstName: \"-\",\n    midName:\"-\",\n    docType:\"-\",\n    Serial:\"-\",\n    number:\"-\",\n    whoGave:\"-\",\n    whenGave:\"-\",\n    codeGave:\"-\",\n    addressGave:\"-\"\n};\nconst formDefaultData = \"formDefaultData\";\n\n\nconst state = \n{\n    hello:\"hello\",\n    formData: formDefaultData,\n    dogovorData:{},\n    zakazchikTypes: {z1:z1,z2:z2,z3:z3}\n};\n\nexport {state};\n","import {state} from '../state.js';\nimport {\n    YURLITSO,\n    DOGOVOR_TYPE,\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case YURLITSO:\n            return { yurlitso: action.payload };\n        case DOGOVOR_TYPE:\n            return { dogovorType: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    FORM_DATA_NEW\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case FORM_DATA_NEW:\n            return {clientType:action.payload.clientType, data:action.payload.data};\n        default:        \n            return state;\n    };\n};\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPEONE_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPEONE_DATA:\n            return { zakazchikTypeOneData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPETWO_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPETWO_DATA:\n            return { zakazchikTypeTwoData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    ZAKAZCHIK_TYPETHREE_DATA\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.formData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case ZAKAZCHIK_TYPETHREE_DATA:\n            return { zakazchikTypeThreeData: action.payload };\n        default:        \n            return state;\n    };\n};\n\n","import {state} from '../state.js';\nimport {\n    DOGOVOR_DATA,\n} from '../constants/actionTypes'\n\nconst initialState = (window.Cypress && window.initialState) ||\nstate.dogovorData;\n\nexport default function(state = initialState,action){\n    switch (action.type){\n        case DOGOVOR_DATA:\n            return action.payload;\n        default:        \n            return state;\n    };\n};\n\n","import {combineReducers} from 'redux';\nimport home from './home';\nimport formOne from './formOne';\nimport formTwo from './formTwo';\nimport formThree from './formThree';\nimport formDataNew from './formDataNew';\nimport dogovorData from './dogovorData';\n\nconst rootReducer = combineReducers({\n    home,\n    formDataNew,\n    dogovorData\n});\n\nexport default rootReducer;\n","export const YURLITSO = \"YURLITSO\";\nexport const DOGOVOR_TYPE = \"DOGOVOR_TYPE\";\nexport const VARIABLE = \"VARIABLE\";\nexport const FORM_DATA_NEW = \"FORM_DATA_NEW\";\nexport const DOGOVOR_DATA = \"DOGOVOR_DATA\";\nexport const ZAKAZCHIK_TYPEONE_DATA = \"ZAKAZCHIK_TYPEONE_DATA\";\nexport const ZAKAZCHIK_TYPETWO_DATA = \"ZAKAZCHIK_TYPETWO_DATA\";\nexport const ZAKAZCHIK_TYPETHREE_DATA = \"ZAKAZCHIK_TYPETHREE_DATA\";\n","import styled from 'styled-components';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0px;\n    background:white;\n  }\n`;\nconst Container = styled.div`\n    width:100vw;\n    height:100vh;\n`; \nconst Grid = styled.div`\n    display:grid;\n    grid-template-columns: 5% repeat(3,30%) 5%;\n    grid-template-rows: 2.5vh repeat(8,11.9%) 2.5vh;\n    width:100%;\n    height:100%;\n    background:white;\n`;\nconst AreaBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"column\"};\n    grid-area:${p=> p.g[0]+\"/\"+p.g[1]+\"/\"+p.g[2]+\"/\"+p.g[3]};\n    justify-content:center;\n    align-items:center;\n    border:${p=> p.b || \"0.5px solid black\"};\n    padding:0px;\n    overflow-wrap:normal;\n    background:White;\n`;\nconst ParamBox = styled.div`\n    display:flex;\n    flex-direction:${p=> p.fd || \"row\"};\n    width:${p => p.w || '100%'};\n    height:${p => p.h || '100%'};\n    justify-content:center;\n    align-items:center;\n    overflow-wrap:normal;\n    //overflow:scroll;\n`;\nconst Text = styled.div`\n    margin:${p => p.m};\n`;\nconst Button = styled.div`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    margin:1vmin;\n    padding:5vmin;\n    width:30vw;\n    border:0.5vmin solid DarkSlateGrey;    \n`;\nconst Img = styled.img`\n    width:auto;\n    height:80%;\n`;\nconst TextBox = styled(ParamBox)`\n    display:flex;\n    flex-wrap:wrap;\n    width:100%;\n    height:${p => p.h || \"66%\"};\n    justify-content:flex-start;\n    align-items:flex-start;\n    font-size:1rem;\n    margin:1vmin;\n    //overflow:scroll;\n`;\nconst Input = styled.input`\n    color: black;\n    border: 1px solid darkGrey;\n    margin: 0 0 5px 0;\n    width: 300%;\n    background-color: lightGrey;\n        \n    &:hover & {\n        background-color: white;\n        box-shadow: 0px 4px 20px 0px rgba(0, 0, 0, 0.05);\n    }\n\n`\n\nconst Selectable = styled.b`\n    &:hover {\n        background-color: yellow;\n    }\n`\nconst link = {\n  'color': 'black',\n  'text-decoration': 'none'\n};\nconst ghost = {\n  'color': 'grey',\n  'opacity': '50%'\n};\nconst naked = {\n  'border': '0px',\n};\n\nconst NavbarDropdownContent = styled.div`\n    display: none;\n    position: absolute;\n    background-color: #f9f9f9;\n    opacity:90%;\n    min-width: 300px;\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0, 2);\n    padding: 12px 16px;\n    z-index: 1;\n`;\n\nconst NavbarDropdown = styled.div`\nposition: relative;\ndisplay: inline-block;\n&:hover ${NavbarDropdownContent} {\n  display: block;\n}\n`;\n\n\nexport {\n    GlobalStyle,NavbarDropdown,NavbarDropdownContent,Container,Grid,AreaBox,ParamBox,TextBox,Input,Text,Button,Img,link,naked,Selectable,ghost\n}\n","import * as types from \"../constants/actionTypes\";\n\nexport const dogovorData = _data => {\n    console.log({type:types.DOGOVOR_DATA, payload: _data});\n    return {type:types.DOGOVOR_DATA, payload: _data}\n};\n\nexport const formDataNew = _data => {\n    console.log({type:types.FORM_DATA_NEW, payload: _data});\n    return {type:types.FORM_DATA_NEW, payload: _data};\n};\n\nexport const yurlitso = _yurlitso => {\n    console.log({type:types.YURLITSO, payload: _yurlitso});\n    return {type:types.YURLITSO, payload: _yurlitso};\n};\n\nexport const dogovorType = _dogovor => {\n    console.log({type:types.DOGOVOR_TYPE, payload: _dogovor});\n    return {type:types.DOGOVOR_TYPE, payload: _dogovor};\n};\n\nexport const zakazchikTypeOneData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPEONE_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPEONE_DATA,\n            payload:_data\n       }\n    );\n};\nexport const zakazchikTypeTwoData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPETWO_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPETWO_DATA,\n            payload:_data\n       }\n    );\n};\nexport const zakazchikTypeThreeData = _data => {\n   console.log(\n       {\n            type:types.ZAKAZCHIK_TYPETHREE_DATA,\n            payload:_data\n       });\n    return (\n       {\n            type:types.ZAKAZCHIK_TYPETHREE_DATA,\n            payload:_data\n       }\n    );\n};\n","\n    import React from 'react';\n    import font from '../css/Roboto_Mono/RobotoMono-Medium.ttf'\n    import {\n        Page,\n        Text,\n        View,\n        Document,\n        StyleSheet,\n        PDFDownloadLink,\n        Font,\n    } from \"@react-pdf/renderer\";\n\n    // Register font\n    Font.register({\n      family: 'Roboto Mono',\n      src: font\n    })\n\n    const styles = StyleSheet.create({\n        page: {\n\t        margin: \"2em auto\",\n            fontFamily: \"Roboto Mono\",\n            display: \"flex\",\n            wordBreak: \"break-word\",\n            border:\"1px solid black\",\n\t        hyphens: \"auto\"\n        },\n        section: {\n            margin: 10,\n            padding: 10,\n        },\n        content: {\n            display: \"block\"\n        }\n    });\n\n    let sampleDataOne = {type:\n        {\n            compFullName: \" - \",\n            compShortName: \" - \",\n            INN: \" - \",\n            KPP: \" - \",\n            OGRN: \" - \",\n            OKPO: \" - \",\n            GosRegDate: \" - \",\n            YurAdress: \" - \",\n            FactAdress: \" - \",\n            GenDirector: \" - \",\n            Buhgalter: \" - \",\n            tel: \" - \",\n            bankName: \" - \",\n            BIK: \" - \",\n            BillOne: \" - \",\n            BillTwo: \" - \",\n        }\n    };\n    let sampleDataTwo = {type:\n        {\n            Name: \"-\",\n            FIO: \"-\",\n            INN: \"-\",\n            OGRNIP:\"-\",\n            OKPO:\"-\",\n            FactAdress:\"-\",\n            bankName:\"-\",\n            BIK:\"-\",\n            BillOne:\"-\",\n            BillTwo:\"-\"\n        }\n    };\n    let sampleDataThree = {type:\n        {\n            NameInformal: \"-\",\n            lastName: \"-\",\n            firstName: \"-\",\n            midName:\"-\",\n            docType:\"-\",\n            Serial:\"-\",\n            number:\"-\",\n            whoGave:\"-\",\n            whenGave:\"-\",\n            codeGave:\"-\",\n            addressGave:\"-\"\n        }\n    };\n    \n    const templateOne = (_data = sampleDataOne.type) => {\n        return (\"Нашакомпания ,в лице директора ФИОдиректора Нашей Компании действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" +\n        _data.compFullName + \" , в лице генерального директора  ФИО второй стороны , действующего(ей) на основании Устава, именуемое в дальнейшем 'Покупатель',РЕКВИЗИТЫ СТОРОН: \" + \n        \" Покупатель: \" + _data.compShortName  +\n        \" ИНН: \" + _data.INN +\n        \" КПП: \" + _data.KPP +\n        \" ОГРН: \" + _data.OGRN + \n        \" Юр.адрес: \" + _data.YurAdress +\n        \" Факт.адрес: \" + _data.FactAdress +\n        \" Банк: \" +  _data.bankName +\n        \" БИК: \" +  _data.BIK +\n        \" р/с: \" +  _data.BillOne +\n        \" к/с: \" +  _data.BillTwo +\n        \" \")\n    };\n    const templateTwo = (_data = sampleDataTwo.type) => {\n        return(\"Наша компания, в лице директора ФИОдиректора нашей компании, действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" + _data.Name + \" , в лице генерального директора \" + _data.FIO + \", действующего(ей) на основании Устава, именуемое в дальнейшем 'Покупатель', РЕКВИЗИТЫ СТОРОН: Покупатель: \" + \n_data.Name + \" ИНН: \" + _data.INN + \" ОГРНИП: \" + _data.OGRNIP + \" Факт.адрес: \" +  _data.FactAdress + \" Банк: \" + _data.bankName +\n\" БИК: \" +  _data.BIK + \" р/с: \" + _data.BillOne + \" к/с: \" +  _data.BillTwo + \" подписи \" + _data.Name + \" _/инициалы(ФИО)/ \" + _data.FIO + \"\"\n        )\n    };\n    const templateThree = (_data = sampleDataTwo.type) => {\n        return(\"Нашакомпания, в лице директора ФИОдиректора нашей компании, действующего на основании Устава, с одной стороны, именуемое в дальнейшем 'Поставщик' и \" + _data.lastName + \" \" + _data.firstName + \" \" + _data.midName + \" , \" + _data.docType + \" серия \" + _data.Serial + \" номер \" +  _data.number + \" , выдан \" +  _data.whoGave + \" \" +  _data.whenGave + \" код подразделения \" +  _data.codeGave + \" , именуемый(ая) в дальнейшем 'Покупатель', РЕКВИЗИТЫ СТОРОН: Покупатель: \"  + _data.lastName + \" \" + _data.firstName + \" \" + _data.midName + \" , \" + _data.docType + \" серия \" + _data.Serial + \" номер \" +  _data.number + \" , выдан \" +  _data.whoGave + \" \" +  _data.whenGave + \" код подразделения \" +  _data.codeGave + \" подписи \" + \"_/инициалы(ФИО)/\"\n        );\n    };\n\n    const zakazchik = {\n        one:{ template: templateOne, data: sampleDataOne },\n        two:{ template: templateTwo, data: sampleDataTwo },\n        three:{ template: templateThree, data: sampleDataThree }\n    };\n\n    const data_to_text = (_data,_store) => {\n        console.log(\"data_to_text on load : \", _store);\n        const hold = Object.keys(JSON.parse(_data))[0];\n        switch (hold) {\n            case 'zakazchikTypeOneData':\n                return JSON.stringify(zakazchik.one.template(JSON.parse(_data)[hold]));\n            case 'zakazchikTypeTwoData':\n                return JSON.stringify(zakazchik.two.template(JSON.parse(_data)[hold]));\n            case 'zakazchikTypeThreeData':\n                return JSON.stringify(zakazchik.three.template(JSON.parse(_data)[hold]));\n            default:\n                return \"whatever\";\n        }\n    };\n\n    const PdfDocument = _props => (\n        <Document>\n            <Page style={styles.page}>\n                <View style={styles.section}>\n                    <Text style={styles.content}>\n                        {_props.text}\n                    </Text>\n                </View>\n            </Page>\n        </Document>\n    );\n\n    const BeautyText = (_props) => (\n      <div>\n        <PdfDocument text={data_to_text(_props.text,_props.store)}/>\n        <PDFDownloadLink \n            document={<PdfDocument \n                text={data_to_text(_props.text,_props.store)}/>\n            } \n            fileName=\"somename.pdf\"\n        >\n            {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Забери PDF если считаешь что он ок.')}\n        </PDFDownloadLink>\n      </div>\n    );\n\n    export default BeautyText;\n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';\n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n\n    const FormOne = ({store,onDataReady,onNewdogData,onDogovorData,dogovorData}) => {\n        console.log(\"store visible in FormOne : \", store);\n        console.log(\"onDataReady inside form one : \", onDataReady);\n        const [formData, setFormData] = useState({\n            compFullName: \"\",\n            compShortName: \"\",\n            INN: \"\",\n            KPP:\"\",\n            OGRN:\"\",\n            OKPO:\"\",\n            GosRegDate:\"\",\n            YurAdress:\"\",\n            FactAdress:\"\",\n            GenDirector:\"\",\n            Buhgalter:\"\",\n            tel:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            console.log(\"form data : \", formData);\n        }\n        const \n        { \n            compFullName, \n            compShortName,\n            INN,\n            KPP,\n            OGRN,\n            OKPO,\n            GosRegDate,\n            YurAdress,\n            FactAdress,\n            GenDirector,\n            Buhgalter,\n            tel,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onDataReady({clientType:\"ORG\", data:formData});\n            onDogovorData({...dogovorData,formData:formData}); \n        };\n    return (\n        <form>\n            <br/>\n                <label> Полное название организации : <br/>\n                    <Input\n                        id=\"compFullName\"\n                        value= {compFullName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Полное название организации \"\n                        type=\"text\"\n                        name=\"compFullName\"\n                        required\n                        maxlength=\"120\"\n                    /><br/>\n               </label>\n               <label> Краткое название организации : <br/>\n                    <Input\n                        id=\"compShortName\"\n                        value= {compShortName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Краткое название организации \"\n                        type=\"text\"\n                        name=\"compShortName\"\n                        required\n                        maxlength=\"120\"\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"number\"\n                        name=\"INN\"\n                        required\n                        minlength=\"10\"\n                        maxlength=\"10\"\n                    /><br/>\n               </label>\n               <label> КПП : <br/>\n                    <Input\n                        id=\"KPP\"\n                        value= {KPP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" КПП \"\n                        type=\"text\"\n                        name=\"KPP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРН : <br/>\n                    <Input\n                        id=\"OGRN\"\n                        value= {OGRN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРН \"\n                        type=\"number\"\n                        name=\"OGRN\"\n                        required\n                        minlength=\"13\"\n                        maxlength=\"13\"\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"number\"\n                        name=\"OKPO\"\n                        required\n                        minlength=\"8\"\n                        maxlength=\"8\"\n                    /><br/>\n               </label>\n               <label> Дата государственной регистрации : <br/>\n                    <Input\n                        id=\"GosRegDate\"\n                        value= {GosRegDate}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Дата государственной регистрации \"\n                        type=\"text\"\n                        name=\"GosRegDate\"\n                        required\n                    /><br/>\n               </label>\n               <label> Юридический адрес : <br/>\n                    <Input\n                        id=\"YurAdress\"\n                        value= {YurAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Юридический адрес \"\n                        type=\"text\"\n                        name=\"YurAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n               <label> Ген. директор (ФИО) : <br/>\n                    <Input\n                        id=\"GenDirector\"\n                        value= {GenDirector}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Ген. директор (ФИО) \"\n                        type=\"text\"\n                        name=\"GenDirector\"\n                        required\n                    /><br/>\n               </label>\n               <label> Бухгалтер (ФИО) : <br/>\n                    <Input\n                        id=\"Buhgalter\"\n                        value= {Buhgalter}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Бухгалтер (ФИО) \"\n                        type=\"text\"\n                        name=\"Buhgalter\"\n                        required\n                    /><br/>\n               </label>\n               <label> телефон : <br/>\n                    <Input\n                        id=\"tel\"\n                        value= {tel}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" телефон \"\n                        type=\"text\"\n                        name=\"tel\"\n                        required\n                    /><br/>\n               </label><br/>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {BIK}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n\n             <button onClick={handleSubmit}>Submit</button>\n             <div>\n                <BeautyText \n                    text={JSON.stringify(formData)}\n                    store={store}\n                />\n            </div>\n        </form>\n    );\n    };\n\n    const mapStateToProps = _state => ({\n        store: _state,\n        dogovorData: _state.dogovorData\n        //formOneState: _state.form.formOne\n    });\n    const mapDispatchToProps = _dispatch => ({\n        onDataReady: data => _dispatch(actions.formDataNew(data)),\n        onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(FormOne);   \n\n    \n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';    \n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n\n    const FormTwo = ({store,onDataReady,dogovorData,onDogovorData}) => {\n        const [formData, setFormData] = useState({\n            Name: \"\",\n            FIO: \"\",\n            INN: \"\",\n            OGRNIP:\"\",\n            OKPO:\"\",\n            FactAdress:\"\",\n            bankName:\"\",\n            BIK:\"\",\n            BillOne:\"\",\n            BillTwo:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            Name, \n            FIO,\n            INN,\n            OGRNIP,\n            OKPO,\n            FactAdress,\n            bankName,\n            BIK,\n            BillOne,\n            BillTwo\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            //onDataReady(formData);\n            onDogovorData({...dogovorData,formData:formData});\n            console.log(\"formData after submit: \", formData);\n        };\n    console.log(\"store in formTwo : \", store)\n    return (\n        <form>\n            <br/>\n                <label> Название : <br/>\n                    <Input\n                        id=\"Name\"\n                        value= {Name}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название \"\n                        type=\"text\"\n                        name=\"Name\"\n                        required\n                    /><br/>\n               </label>\n               <label> ФИО : <br/>\n                    <Input\n                        id=\"FIO\"\n                        value= {FIO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ФИО \"\n                        type=\"text\"\n                        name=\"FIO\"\n                        required\n                    /><br/>\n               </label>\n               <label> ИНН : <br/>\n                    <Input\n                        id=\"INN\"\n                        value= {INN}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ИНН \"\n                        type=\"text\"\n                        name=\"INN\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОГРНИП : <br/>\n                    <Input\n                        id=\"OGRNIP\"\n                        value= {OGRNIP}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОГРНИП \"\n                        type=\"text\"\n                        name=\"OGRNIP\"\n                        required\n                    /><br/>\n               </label>\n               <label> ОКПО : <br/>\n                    <Input\n                        id=\"OKPO\"\n                        value= {OKPO}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" ОКПО \"\n                        type=\"text\"\n                        name=\"OKPO\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фактический адрес : <br/>\n                    <Input\n                        id=\"FactAdress\"\n                        value= {FactAdress}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фактический адрес \"\n                        type=\"text\"\n                        name=\"FactAdress\"\n                        required\n                    /><br/>\n               </label>\n           <br/>\n           Банковские реквизиты <br/>\n           <br/>\n               <label> Наименование банка : <br/>\n                   <Input\n                       id=\"bankName\"\n                       value= {bankName}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Наименование банка \"\n                       type=\"text\"\n                       name=\"bankName\"\n                       required\n                   /><br/>\n               </label>\n               <label> БИК : <br/>\n                   <Input\n                       id=\"BIK\"\n                       value= {BIK}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" BIK \"\n                       type=\"text\"\n                       name=\"BIK\"\n                       required\n                   /><br/>\n               </label>\n               <label> Расчетный счёт : <br/>\n                   <Input\n                       id=\"BillOne\"\n                       value= {BillOne}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Расчетный счёт \"\n                       type=\"text\"\n                       name=\"BillOne\"\n                       required\n                   /><br/>\n               </label>\n               <label> Корр. счёт : <br/>\n                   <Input\n                       id=\"BillTwo\"\n                       value= {BillTwo}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Корр. счёт \"\n                       type=\"text\"\n                       name=\"BillTwo\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n\n            <div>\n                <BeautyText text={JSON.stringify(store)}/>\n            </div>\n\n        \n        </form>\n    );\n    };\n\nconst mapStateToProps = _state => ({\n     store: _state,\n     dogovorData: _state.dogovorData\n    //yurlitzas: _state.home.yurlitzas,\n    //dogovorTypes: _state.home.dogovorTypes,\n    //dialects: _state.home.varDialects,\n    //formData: _state.home.formData\n});\nconst mapDispatchToProps = _dispatch => ({\n    //onYur: data => _dispatch(actions.yurlitso(data))\n    onDataReady: data =>\n        _dispatch(actions.zakazchikTypeTwoData(data)),\n    onDogovorData: data => _dispatch(actions.dogovorData(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(FormTwo); \n\n        \n    //export default FormTwo;\n","   \n    import React, {useState} from 'react';\n    import {Input} from '../css/style.js';\n    import * as actions from '../actions';\n    import BeautyText from \"./BeautyText\";\n    import {connect} from 'react-redux';\n/*\n1. Название (то, как будет отображаться контакт в системе, неформальное название)\n2. Фамилия\n3. Имя\n4. Отчество\n5. Вид документа (чаще всего паспорт, но может быть загранник, военный билет)\n6. Серия\n7. Номер\n8. Кем выдан\n9. Дата выдачи\n10. Код подразделения\n11. Адрес прописки\n*/\n    const FormThree = ({store,onDataReady,dogovorData,onDogovorData}) => {\n        const [formData, setFormData] = useState({\n            NameInformal: \"\",\n            lastName: \"\",\n            firstName: \"\",\n            midName:\"\",\n            docType:\"\",\n            Serial:\"\",\n            number:\"\",\n            whoGave:\"\",\n            whenGave:\"\",\n            codeGave:\"\",\n            addressGave:\"\"\n        });\n        const updateFormData = event => {\n            setFormData({\n              ...formData,\n              [event.target.name]: event.target.value\n            });\n            //console.log(\"formData : \", formData);\n        }\n        const \n        { \n            NameInformal, \n            lastName,\n            firstName,\n            midName,\n            docType,\n            Serial,\n            number,\n            whoGave,\n            whenGave,\n            codeGave,\n            addressGave\n        } = formData;\n        const handleSubmit = e => {\n            e.preventDefault();\n            //onYur(formData);\n            onDogovorData({...dogovorData,formData:formData});\n            console.log(\"formData after submit: \", formData);\n        };\n    return (\n        <form>\n            <br/>\n                <label> Название (неформальное) : <br/>\n                    <Input\n                        id=\"NameInformal\"\n                        value= {NameInformal}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Название (неформальное) \"\n                        type=\"text\"\n                        name=\"NameInformal\"\n                        required\n                    /><br/>\n               </label>\n               <label> Фамилия : <br/>\n                    <Input\n                        id=\"lastName\"\n                        value= {lastName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Фамилия \"\n                        type=\"text\"\n                        name=\"lastName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Имя : <br/>\n                    <Input\n                        id=\"firstName\"\n                        value= {firstName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Имя \"\n                        type=\"text\"\n                        name=\"firstName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Отчество : <br/>\n                    <Input\n                        id=\"midName\"\n                        value= {midName}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Отчество \"\n                        type=\"text\"\n                        name=\"midName\"\n                        required\n                    /><br/>\n               </label>\n               <label> Вид документа : <br/>\n                    <Input\n                        id=\"docType\"\n                        value= {docType}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Вид документа \"\n                        type=\"text\"\n                        name=\"docType\"\n                        required\n                    /><br/>\n               </label>\n               <label> Серия : <br/>\n                    <Input\n                        id=\"Serial\"\n                        value= {Serial}\n                        onChange={e => updateFormData(e)}\n                        placeholder=\" Серия \"\n                        type=\"text\"\n                        name=\"Serial\"\n                        required\n                    /><br/>\n               </label>\n               <label> Номер : <br/>\n                   <Input\n                       id=\"number\"\n                       value= {number}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Номер \"\n                       type=\"text\"\n                       name=\"number\"\n                       required\n                   /><br/>\n               </label>\n               <label> Кем выдан : <br/>\n                   <Input\n                       id=\"whoGave\"\n                       value= {whoGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Кем выдан \"\n                       type=\"text\"\n                       name=\"whoGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Дата выдачи : <br/>\n                   <Input\n                       id=\"whenGave\"\n                       value= {whenGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Дата выдачи \"\n                       type=\"text\"\n                       name=\"whenGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Код подразделения : <br/>\n                   <Input\n                       id=\"codeGave\"\n                       value= {codeGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Код подразделени \"\n                       type=\"text\"\n                       name=\"codeGave\"\n                       required\n                   /><br/>\n               </label>\n               <label> Адрес прописки : <br/>\n                   <Input\n                       id=\"addressGave\"\n                       value= {addressGave}\n                       onChange={e => updateFormData(e)}\n                       placeholder=\" Адрес прописки \"\n                       type=\"text\"\n                       name=\"addressGave\"\n                       required\n                   /><br/>\n               </label><br/>\n           \n          <button onClick={handleSubmit}>Submit</button>\n          <div>\n            <div>\n                <BeautyText text={JSON.stringify(store)}/>\n            </div>\n          </div>\n        \n        </form>\n    );\n    };\n\n        const mapStateToProps = _state => ({\n     store: _state,\n     dogovorData: _state.dogovorDatree,\n        //home: _state.home,\n        //yurlitzas: _state.home.yurlitzas,\n        //dogovorTypes: _state.home.dogovorTypes,\n        //dialects: _state.home.varDialects,\n        //formData: _state.home.formData\n    });\n    const mapDispatchToProps = _dispatch => ({\n        //onYur: data => _dispatch(actions.yurlitso(data))\n        onDataReady: data =>\n            _dispatch(actions.zakazchikTypeThreeData(data)),\n       onDogovorData: data => _dispatch(actions.dogovorData(data))\n    });\n\n    export default connect (\n        mapStateToProps,\n        mapDispatchToProps\n    )(FormThree); \n\n        \n    //export default FormThree;\n","\n    export const dogSampleData = {\n        name:\"Договор монтажа № 2020В07\",\n        start:\"06.04.2020\",\n        end:\"06.10.2020\",\n        money:[315000, \"(триста пятнадцать тысяч рублей 00 копеек)\"],\n        systems:[\"вентиляции, кондиционирования\"],\n    };\n\n    export const formOrgDataSample = {\n        compFullName:\"ПОЛНОЕ ИМЯ КОМАНИИ\",\n        compShortName: \"КОРОТКОЕ ИМЯ КОМПАНИИ\",\n        FIO:\"ИМЯ ФАМИЛИЯ ОТЧЕСТВО\", \n        INN:\"ИНН\",\n        KPP:\"КПП\",\n        OGRN:\"ОГРН\",\n        OKPO:\"ОКРО\",\n        GosRegDate:\"ДАТА ГОС РЕГИСТРАЦИИ\",\n        YurAdress:\"ЮРИДИЧЕСКИЙ АДРЕСС\",\n        FactAdress:\"ФАКТИЧЕСКИЙ АДРЕСС\",\n        GenDirector:\"ГЕН ДИРЕКТОР\",\n        Buhgalter:\"БУХГАЛТЕР\",\n        tel:\"ТЕЛЕФОН\",\n        bankName:\"ИМЯ БАНКА\",\n        BIK:\"БИК\",\n        BillOne:\"РАСЧЁТНЫЙ СЧЁТ\",\n        BillTwo:\"КОРРЕСПОНДЕНДТСКИЙ СЧЁТ\"\n    };\n    export const formIPDataSample = {\n        Name:\"ИМЯ ИП\",\n        FIO:\"ФИО\",\n        INN:\"ИНН\",\n        OGRNIP:\"ОГРНИП\",\n        OKPO:\"ОКРО\",\n        FactAdress:\"ФАКТИЧЕСКИЙ АДРЕСС\",\n        bankName:\"ИМЯ БАНКА\",\n        BIK:\"БИК\",\n        BillOne:\"РАСЧЁТНЫЙ СЧЁТ\",\n        BillTwo:\"КОРЕСПОНДЕНТСКИЙ СЧЁТ\"\n    };\n    export const formFLDataSample = {\n        NameInformal:\"НЕФОРМАЛЬНОЕ ИМЯ\",\n        lastName:\"ФАМИЛИЯ\",\n        firstName:\"ИМЯ\",\n        midName:\"ОТЧЕСТВО\",\n        docType:\"ВИД ДОКУМЕНТА\",\n        Serial:\"СЕРИЯ\",\n        number:\"НОМЕР\",\n        whoGave:\"ВЫДАН\",\n        whenGave:\"ДАТА ВЫДАЧИ\",\n        codeGave:\"КОД ПОДРАЗДЕЛЕНИЯ\",\n        addressGave:\"ГДЕ ВЫДАН\"\n    };\n\n    export const ServerData = {\n        varOne:{\n            CompName:\"ИП Попов Александр Петрович\",\n            FIO:\"Попов Александр Петрович\",\n            INN: 145839485037,\n            OGRN: 194837564738574,\n            yurAdress: \"168233 Россия Домодедово г., 5 кв-л, 34\", \n            bank: \"Сбербанк\",\n            BIK: 584568974,\n            firstBill: 240958729458776879836958,\n            secondBill: 345870254870475947545347\n        },\n        varTwo:{\n            CompName:\"YURLITSO TWO\",\n            FIO:\"FIO TWO\",\n            data:\"TWO\",\n            INN: '00000000000',\n            OGRN: 124726458645234523,\n            yurAdress: \"168233 Россия Довобродово г., 12 кв-л, 665\", \n            bank: \"Сбедбанк\",\n            BIK: 58456845,\n            firstBill: 111111111111111111111111,\n            secondBill: 22222222222222222222222\n        }    \n    };\n \n","    //  API'ED FORM DATA -----------------------------------------------------------------------------------------------------\n\n    export const dogData = _d => {\n        return {\n            name:_d.name,\n            start:_d.start,\n            end:_d.end,\n            money:_d.money,\n            systems:_d.systems \n        };\n    };    \n\n    // Org data ---------------------------------------------------------------------------------------------------------\n    export const ClientOrgData = _d => {\n        return {\n            compFullName:_d.compFullName,\n            compShortName:_d.compShortName,\n            FIO:_d.FIO, \n            INN:_d.INN,\n            KPP: _d.KPP,\n            OGRN:_d.OGRN,\n            OKPO:_d.OKPO,\n            GosRegDate:_d.GosRegDate,\n            YurAdress:_d.YurAdress,\n            FactAdress:_d.FactAdress,\n            GenDirector:_d.GenDirector,\n            Buhgalter:_d.Buhgalter,\n            tel:_d.tel,\n            bankName:_d.bankName,\n            BIK:_d.BIK,\n            BillOne:_d.BillOne,\n            BillTwo:_d.BillTwo\n        };\n    };\n    // IP data -----------------------------------------------------------------------\n    export const ClientIPData = _d => {\n        return {\n            Name:_d.Name,\n            FIO:_d.FIO,\n            INN:_d.INN,\n            OGRNIP:_d.OGRNIP,\n            OKPO:_d.OKPO,\n            FactAdress:_d.FactAdress,\n            bankName:_d.bankName,\n            BIK:_d.BIK,\n            BillOne:_d.BillOne,\n            BillTwo:_d.BillTwo\n       };\n    };\n    // FL data ---------------------------------------------------------------------\n    export const ClientFLData = _d => {\n        return {\n            NameInformal:_d.NameInformal,\n            lastName:_d.lastName,\n            firstName:_d.firstName,\n            midName:_d.midName,\n            docType:_d.docType,\n            Serial:_d.Serial,\n            number:_d.number,\n            whoGave:_d.whoGave,\n            whenGave:_d.whenGave,\n            codeGave:_d.codeGave,\n            addressGave:_d.addressGave\n        };\n    };\n","    \n    import React from 'react';\n    import {\n        dogSampleData,\n        formOrgDataSample,\n        formIPDataSample,\n        formFLDataSample,\n        ServerData} \n        from \"./MontajSampleData\";\n    import {\n        dogData,\n        ClientOrgData,\n        ClientIPData,\n        ClientFLData,} \n        from \"./MontajAPI\";\n\n    // HEADER ELEMENTS --------------------------------------------------------------------------\n    \n     // Org -------------------------------------------------------------------------\n        export const OrgHeader = p => (\n            <div> {ServerData[p.clientType].CompName}, в лице директора {ServerData[p.clientType].FIO}, \n            действующего на основании Устава, с одной стороны, именуемое в дальнейшем {\"Поставщик\"} и \n            {ClientOrgData(p.data).compFullName}, в лице генерального директора {ClientOrgData(p.data).FIO}, \n            действующего(ей) на основании Устава, именуемое в дальнейшем «Покупатель»,\n            </div>\n        );\n        // IP -------------------------------------------------------------------------\n        export const IPHeader = p => (\n            <div> \n                {ServerData[p.clientType].CompName}, в лице директора {ServerData[p.clientType].FIO},\n                действующего на основании \n                Устава, с одной стороны, именуемое в дальнейшем \"Поставщик\" и {ClientIPData(p.data).Name}, в лице \n                генерального директора \n                {ClientIPData(p.data).FIO}, действующего(ей) на основании Устава, именуемое в дальнейшем «Покупатель»,\n            </div>\n        );\n        // FL\n        export const FLHeader = p => (\n            <div> \n                {ServerData[p.clientType].CompName}, в лице директора {ServerData[p.clientType].FIO}, действующего \n                на основании Устава, \n                с одной стороны, именуемое в дальнейшем \"Поставщик\" и {ClientFLData(p.data).lastName}{ClientFLData(p.data).firstName}\n                {ClientFLData(p.data).midName}, {ClientFLData(p.data).lastName} серия {ClientFLData(p.data).Serial} номер \n                {ClientFLData(p.data).number}, \n                выдан {ClientFLData(p.data).whoGave} {ClientFLData(p.data).whenGave} код подразделения \n                {ClientFLData(p.data).codeGave}, именуемый(ая) \n                в дальнейшем «Покупатель»,\n            </div>\n        );\n\n    // FOOTERS ------------------------------------------------\n\n        // Org ------------------------------------------------\n        export const ClientOrgFooter = p => (\n            <div>\n                Покупатель:{ClientOrgData(p.data).compShortName}<br/>\n                ИНН: {ClientOrgData(p.data).INN}<br/>\n                КПП: {ClientOrgData(p.data).KPP}<br/>\n                ОГРН: {ClientOrgData(p.data).OGRN}<br/>\n                Юр.адрес: {ClientOrgData(p.data).YurAdress}<br/>\n                Факт.адрес: {ClientOrgData(p.data).FactAdress}<br/>\n                Банк: {ClientOrgData(p.data).bankName}<br/>\n                БИК: {ClientOrgData(p.data).BIK}<br/>\n                р/с: {ClientOrgData(p.data).BillOne}<br/>\n                к/с: {ClientOrgData(p.data).BillTwo}<br/>\n                <br/>\n                подписи<br/>\n                <br/>\n                {ClientOrgData(p.data).compShortName}<br/>\n                <br/>\n                _____________/инициалы(Ген. директор {ClientOrgData(p.data).FIO})/<br/>\n                <br/>\n                место печати (м.п.)<br/>\n           </div>\n        );\n        // IP ------------------------------------------------------------------------\n        export const ClientIPFooter = p => (\n            <div>\n                Покупатель: {ClientIPData(p.data).Name}<br/>\n                ИНН: {ClientIPData(p.data).INN}<br/>\n                ОГРНИП: {ClientIPData(p.data).OGRNIP}<br/>\n                Факт.адрес: {ClientIPData(p.data).FactAdress}<br/>\n                Банк: {ClientIPData(p.data).bankName}<br/>\n                БИК: {ClientIPData(p.data).BIK}<br/>\n                р/с: {ClientIPData(p.data).BillOne} <br/>\n                к/с: {ClientIPData(p.data).BillTwo}<br/>\n                <br/>\n                подписи<br/>\n                <br/>\n                {ClientIPData.Name}<br/>\n                <br/>\n                _____________/(инициалы {(ClientIPData.FIO)})/<br/>\n                <br/>\n                _____________________________________________________________________________\n            </div>\n        );\n        // FL ----------------------------------------------------------------------------\n        export const ClientFLFooter = p => (\n            <div>\n                Покупатель:<br/>\n                {ClientFLData(p.data).lastName} {ClientFLData(p.data).firstName} {ClientFLData(p.data).midName}<br/>\n                {ClientFLData(p.data).docType} серия {ClientFLData(p.data).Serial}<br/>\n                номер {ClientFLData(p.data).number}<br/>\n                выдан {ClientFLData(p.data).whoGave} {ClientFLData(p.data).whenGave} <br/>\n                код подразделения {ClientFLData(p.data).codeGave}<br/>\n                <br/>\n                подписи<br/>\n                <br/>\n                _____________/(инициалы {ClientFLData(p.data).lastName} {ClientFLData(p.data).firstName} <br/>      \n                {ClientFLData(p.data).midName})/<br/>\n            </div>\n        );\n\n        export const setDogType = (_clientType,_serverType,_data) => {\n            switch (_serverType){\n                case (\"Org\"):\n                    return {\n                        head: <OrgHeader clientType={_clientType} data={_data}/>, \n                        foot: <ClientOrgFooter data={_data}/>\n                    };\n                case (\"IP\"):\n                    return {\n                        head: <IPHeader clientType={_clientType} data={_data}/>,\n                        foot: <ClientIPFooter data={_data}/>\n                    };\n                case (\"FL\"):\n                    return {\n                        head: <FLHeader clientType={_clientType} data={_data}/>, \n                        foot: <ClientFLFooter data={_data}/>\n                    };\n                default:\n                    return \"No information\";\n            };\n        }; \n    \n","   \n    import React from 'react';\n    import MontajBody from \"./MontajBody\";\n    import {connect} from 'react-redux';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,link\n    } from '../css/style.js';\n    import {\n        dogSampleData,\n        formOrgDataSample,\n        formIPDataSample,\n        formFLDataSample,\n        ServerData} \n        from \"./MontajSampleData\";\n    import {\n        dogData,\n        ClientOrgData,\n        ClientIPData,\n        ClientFLData,} \n        from \"./MontajAPI\";\n    import {\n        OrgHeader,\n        IPHeader,\n        FLHeader,\n        ClientOrgFooter,\n        ClientIPFooter,\n        ClientFLFooter,\n        setDogType} \n        from \"./HeadFoot\";\n\n    const divStyle = {width:'75vw',wordWrap:'break-word',fontFamily:'Roboto Mono'};\n    const headStyle = {textAlign:'center'};\n \n    // HEADER COMPOSER --------------------------------------------------------------------------\n    const MontajHead = () => (\n        <div >\n            <div>{ setDogType(\"varOne\",\"Org\",formOrgDataSample).head }</div>\n            <br/>\n            <div>{ setDogType(\"varOne\",\"IP\",formIPDataSample).head }</div>\n            <br/>\n            <div>{ setDogType(\"varOne\",\"FL\",formFLDataSample).head }</div>\n            <br/>\n            <div>{ setDogType(\"varTwo\",\"Org\",formOrgDataSample).head }</div>\n            <br/>\n            <div>{ setDogType(\"varTwo\",\"IP\",formIPDataSample).head }</div>\n            <br/>\n            <div>{ setDogType(\"varTwo\",\"FL\",formFLDataSample).head }</div>\n            <br/>\n        </div>\n    );\n\n    // FOOTER ELEMENTS -------------------------------------------------------------------------\n\n    // FOOTER COMPOSER --------------------------------------------------------------------------\n    const MontajFoot = () => (\n        <div style={divStyle}>\n            <div>{ setDogType(\"varOne\",\"Org\",formOrgDataSample).foot }</div>\n            <br/>\n            <div>{ setDogType(\"varOne\",\"IP\",formIPDataSample).foot }</div>\n            <br/>\n            <div>{ setDogType(\"varOne\",\"FL\",formFLDataSample).foot }</div>\n            <br/>\n            <div>{ setDogType(\"varTwo\",\"Org\",formOrgDataSample).foot }</div>\n            <br/>\n            <div>{ setDogType(\"varTwo\",\"IP\",formIPDataSample).foot }</div>\n            <br/>\n            <div>{ setDogType(\"varTwo\",\"FL\",formFLDataSample).foot }</div>\n            <br/>\n        </div>\n    );\n\n    // \"varOne\", \"IP\", formData -> {header,footer}\n \n\n    //setDogType(\"varOne\",\"IP\",formIPDataSample);\n    //${setDogType(clientType,serverType,data).head}\n    //console.log(montaj(\"varOne\",\"IP\",formIPDataSample));\n    \n    // OUTPUT ------------------------------------------------------------------------------------------\n    const Montaj = ({store,dogovorData}) => (\n        <div>\n        <GlobalStyle/>\n        <Container>\n            <Grid>\n                 <AreaBox g={[3,2,11,5]} fd=\"row\" style={naked}>\n                    <ParamBox>\n                        <TextBox h={\"100%\"} w={\"80%\"}>\n                            <Text m={\"2vmin\"} style={divStyle}>\n                                Hello\n                                {console.log(\"state in montaj : \", store)}\n                                {JSON.stringify(dogovorData)}<br/>\n                                <MontajHead/>\n                                <MontajFoot/>\n                            </Text>\n                        </TextBox>\n                    </ParamBox>\n                </AreaBox>\n            </Grid>\n        </Container>\n        </div>\n    );\n\n    const mapStateToProps = _state => ({\n        store: _state,\n        dogovorData:_state.dogovorData\n        //home: _state.home,\n        //yurlitzas: _state.home.yurlitzas,\n        //dogovorTypes: _state.home.dogovorTypes,\n        //formOneData: _state.form.formOne,\n        //formTwoData: _state.form.formTwo,\n        //formThreeData: _state.form.formThree\n    });\n    //const mapDispatchToProps = _dispatch => ({\n    //    onYur: data => _dispatch(actions.yurlitso(data))\n    //});\n\n    export default connect (\n        mapStateToProps//,\n        //mapDispatchToProps\n    )(Montaj);\n\n    //export default Montaj;\n","   \n    import React, {useState,useEffect} from 'react';\n    import {\n        GlobalStyle,Container,Grid,AreaBox,Text,\n        TextBox,Button,ParamBox,naked,\n        NavbarDropdown,NavbarDropdownContent,link\n    } from '../css/style.js';\n    import { Link } from 'react-router-dom';\n    import * as actions from '../actions';\n    import {connect} from 'react-redux';\n    import FormOne from \"./FormOne\";\n    import FormTwo from \"./FormTwo\";\n    import FormThree from \"./FormThree\";\n    import Montaj from \"./Montaj\";\n    const {newDogGen,nameExtractor} = require(\"../utils/dognums\");\n\n    const Home = (\n        {\n            store,\n            home,\n            formData,\n            newDogData,\n            onDogovorData,\n            dogovorData\n        }) => { \n        console.log(\"store inside home : \", store);\n        console.log(\"form data : \", formData);\n        console.log(\"new dogovor data : \", newDogData);\n\n//  STATE -------------------------------------------------------------\n    \n    \n    // INIT\n    const [selection, setSelection] = useState({\n        objNameSel:\"\",\n        dogTypeSel:\"\",\n        sysTypeSel:\"\",\n        servTypeSel:\"\",\n        clientTypeSel:\"\"    \n    });\n    const [hub,setHub] = useState({});\n    const output = {...dogovorData,selectors:{...selection,hub}};\n    \n    console.log(\"output : \", output);\n\n//  REDUCERS -----------------------------------------------------------------------------\n\n    const updateSelection = event => {\n        setSelection({\n          ...selection,\n          [event.target.name]: event.target.value\n        });\n        console.log(\"updateSelection : \", selection);\n    }; \n    const updateHub = event => {\n        const target = event.target;      \n        const value = target.value === \"on\" ? target.checked : !target.checked;\n        const name = target.name;\n        setHub({...hub,[name]: value});\n    }; \n    const { objNameSel,\n            dogTypeSel,\n            sysTypeSel,\n            servTypeSel,\n            clientTypeSel,\n            } = selection;\n\n//  SAMPLE HARDCODED DATA VECTORS -----------------------------------------------------------------------\n\n    const objectsDataVector = [\"Липки\",\"Лапки\",\"Пипки\"];\n    const dogovorsDataVector  = [\n        \"Договор проектирования\",\n        \"Договор поставки\",\n        \"Договор монтажа\",\n        \"Договор сервисного обслуживания\",\n        \"Договор субподряда\"\n    ];\n    const systemsDataVector = [\n        \"Вентиляция и кондиционирование\", \n        \"Отопление\",  \n        \"Котельная\",  \n        \"Водоснабжение и канализация\",  \n        \"ЭОМ\", \n        \"Слаботочные сети\",\n        \" Автоматизация\"\n    ];\n    const serversDataVector = [\"сервер один\", \"сервер два\"];\n    const clientDataVector = [\"организация\",\"ИП\",\"физическое лицо\"];\n\n// ----------------------------------------------------------------------------------------------------------\n\n    const ObjectSelector = () => (\n        <label for=\"pet-select\"> выбери объект : <br/> \n        <select\n            value={objNameSel} \n            id=\"objNameSel\" \n            name=\"objNameSel\" \n            onChange={e =>updateSelection(e)}\n        >\n            <option value=\"\"> - - - - - - - - - - - - - - - </option>\n            {objectsDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n        </select><br/>\n        </label>\n    );\n    const DogovorSelector = () => (\n       <label for=\"pet-select\"> выбери тип договора : <br/>\n        <select\n            value={dogTypeSel} \n            id=\"dogTypeSel\" \n            name=\"dogTypeSel\" \n            onChange={e =>updateSelection(e)}\n        >\n            <option value=\"\"> - - - - - - - - - - - - - - - </option>\n            {dogovorsDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n        </select><br/> \n        </label>\n    );\n    const ServerSelector = () => (\n        <div>\n            <label for=\"pet-select\"> выбери тип сервера : </label><br/>\n            <select\n                value={servTypeSel} \n                id=\"servTypeSel\" \n                name=\"servTypeSel\" \n                onChange={e =>updateSelection(e)}\n            >\n                <option value=\"\"> - - - - - - - - - - - - - - - </option>\n                {serversDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n            </select><br/>\n        </div>\n    );\n\n    const ClientSelector = () => (\n        <div>\n           <label for=\"pet-select\"> выбери тип клиента : </label><br/>\n            <select\n                value={clientTypeSel} \n                id=\"clientTypeSel\" \n                name=\"clientTypeSel\" \n                onChange={e =>updateSelection(e)}\n            >\n                <option value=\"\"> - - - - - - - - - - - - - - - </option>\n                {clientDataVector.map(e => (<option value={`${e}`}> {e} </option> ))}\n            </select><br/> \n        </div>\n    );\n    const SystemSelector = () => (\n        <div>\n            {systemsDataVector.map(e => \n                (<label>{`${e}`}\n                    <input\n                        checked={hub[`${e}`]}\n                        name={`${e}`}\n                        type=\"checkbox\"\n                        onChange={e =>updateHub(e)}\n                    /><br/>\n                </label>)\n             )}          \n        </div>\n    );\n\n    const FormTab = _props => {\n        return (clientTypeSel===\"организация\"\n                    ? <FormOne/> \n                    : clientTypeSel===\"ИП\"\n                        ? <FormTwo/>\n                        : clientTypeSel===\"физическое лицо\"\n                            ? <FormThree/> \n                            : \"тип контрагента не выбран\"\n            );\n    };\n\n    const Dogovors = () => (\n                                        <Button>\n                            <Link \n                                to=\"/dodoc/montaj\"\n                                style={link}\n                            >\n                            CОЗДАТЬ ДОГОВОР\n                            </Link>\n                        </Button>  \n        )\n \n     \n   \n//  OUTPUT COMPONENT ------------------------------------------\n\n    const Basic = () => (\n        <div>\n        <GlobalStyle/>\n        <Container>\n            <Grid>\n                 <AreaBox g={[2,2,7,4]} fd=\"column\" style={naked}>\n                    <ParamBox h={\"auto\"} w={\"auto\"}>\n                        <div><ObjectSelector/></div>\n                    </ParamBox>\n                    <ParamBox h={\"auto\"} w={\"auto\"}>\n                        <div><DogovorSelector/></div>\n                    </ParamBox>\n                    {dogTypeSel===\"Договор проектирования\" ? \n                        (<ParamBox  h={\"auto\"} w={\"auto\"}>\n                            <SystemSelector/>\n                        </ParamBox>) : \"\"\n                    }\n                    <ParamBox h={\"auto\"} w={\"auto\"}>\n                        <ServerSelector/>\n                    </ParamBox>\n                    <ParamBox h={\"auto\"}>\n                        <ClientSelector/>\n                    </ParamBox>\n                    <Button onClick={()=>onDogovorData(output)}>SEND SELECTORS DATA</Button>\n                    <Dogovors/>\n                 </AreaBox>\n                 <AreaBox g={[7,2,11,5]} fd=\"row\" style={naked}>\n                    <ParamBox>\n                        <TextBox h={\"100%\"}>\n                            <Text m={\"2vmin\"}>\n                                <FormTab/>\n                            </Text>\n                        </TextBox>\n                    </ParamBox>\n                </AreaBox>\n            </Grid>\n        </Container>\n        </div>\n        );\n        return <Basic/>;\n}\n\nconst mapStateToProps = _state => ({\n    store: _state,\n    home: _state.home,\n    formData: _state.formDataNew,\n    dogovorData: _state.dogovorData\n});\nconst mapDispatchToProps = _dispatch => ({\n    onDogovorData: data => _dispatch(actions.dogovorData(data))\n});\n\nexport default connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(Home);\n\n//export default Home;\n\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Montaj from './components/Montaj';\n\nfunction App() {\n  return (\n    <main className=\"container\" >\n        <Switch id=\"main\">\n            <Route exact path=\"/dodoc/\" \n                component={Home} />\n            <Route exact path=\"/dodoc/montaj\" \n                component={Montaj} />           \n        </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport reducer from './reducers'; \nimport App from './App';\n\nconst store = createStore(reducer);\nconsole.log(\"store while initialise in index.js : \", store.getState());\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nif (window.Cypress) {\n    window.store = store;\n}\n"],"sourceRoot":""}